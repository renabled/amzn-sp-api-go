// Code generated by go-swagger; DO NOT EDIT.

package catalog_items_2022_04_01_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClassificationRefinement Description of a classification that can be used to get more fine-grained search results.
//
// swagger:model ClassificationRefinement
type ClassificationRefinement struct {

	// Identifier for the classification that can be used for search refinement purposes.
	// Required: true
	ClassificationID *string `json:"classificationId"`

	// Display name for the classification.
	// Required: true
	DisplayName *string `json:"displayName"`

	// The estimated number of results that would still be returned if refinement key applied.
	// Required: true
	NumberOfResults *int64 `json:"numberOfResults"`
}

// Validate validates this classification refinement
func (m *ClassificationRefinement) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClassificationID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumberOfResults(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClassificationRefinement) validateClassificationID(formats strfmt.Registry) error {

	if err := validate.Required("classificationId", "body", m.ClassificationID); err != nil {
		return err
	}

	return nil
}

func (m *ClassificationRefinement) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("displayName", "body", m.DisplayName); err != nil {
		return err
	}

	return nil
}

func (m *ClassificationRefinement) validateNumberOfResults(formats strfmt.Registry) error {

	if err := validate.Required("numberOfResults", "body", m.NumberOfResults); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this classification refinement based on context it is used
func (m *ClassificationRefinement) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClassificationRefinement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClassificationRefinement) UnmarshalBinary(b []byte) error {
	var res ClassificationRefinement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
