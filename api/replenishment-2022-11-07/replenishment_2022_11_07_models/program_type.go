// Code generated by go-swagger; DO NOT EDIT.

package replenishment_2022_11_07_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ProgramType The replenishment program type.
//
// swagger:model ProgramType
type ProgramType string

func NewProgramType(value ProgramType) *ProgramType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ProgramType.
func (m ProgramType) Pointer() *ProgramType {
	return &m
}

const (

	// ProgramTypeSUBSCRIBEANDSAVE captures enum value "SUBSCRIBE_AND_SAVE"
	ProgramTypeSUBSCRIBEANDSAVE ProgramType = "SUBSCRIBE_AND_SAVE"
)

// for schema
var programTypeEnum []interface{}

func init() {
	var res []ProgramType
	if err := json.Unmarshal([]byte(`["SUBSCRIBE_AND_SAVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		programTypeEnum = append(programTypeEnum, v)
	}
}

func (m ProgramType) validateProgramTypeEnum(path, location string, value ProgramType) error {
	if err := validate.EnumCase(path, location, value, programTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this program type
func (m ProgramType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateProgramTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this program type based on context it is used
func (m ProgramType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
