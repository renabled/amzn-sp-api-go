// Code generated by go-swagger; DO NOT EDIT.

package replenishment_2022_11_07_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListOfferMetricsRequestPagination Use these parameters to paginate through the response.
//
// swagger:model ListOfferMetricsRequestPagination
type ListOfferMetricsRequestPagination struct {

	// The maximum number of results to return in the response.
	// Required: true
	// Maximum: 500
	// Minimum: 1
	Limit *int64 `json:"limit"`

	// The offset from which to retrieve the number of results specified by the `limit` value. The first result is at offset 0.
	// Required: true
	// Maximum: 9000
	// Minimum: 0
	Offset *int64 `json:"offset"`
}

// Validate validates this list offer metrics request pagination
func (m *ListOfferMetricsRequestPagination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLimit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOffset(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListOfferMetricsRequestPagination) validateLimit(formats strfmt.Registry) error {

	if err := validate.Required("limit", "body", m.Limit); err != nil {
		return err
	}

	if err := validate.MinimumInt("limit", "body", *m.Limit, 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("limit", "body", *m.Limit, 500, false); err != nil {
		return err
	}

	return nil
}

func (m *ListOfferMetricsRequestPagination) validateOffset(formats strfmt.Registry) error {

	if err := validate.Required("offset", "body", m.Offset); err != nil {
		return err
	}

	if err := validate.MinimumInt("offset", "body", *m.Offset, 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("offset", "body", *m.Offset, 9000, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list offer metrics request pagination based on context it is used
func (m *ListOfferMetricsRequestPagination) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ListOfferMetricsRequestPagination) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListOfferMetricsRequestPagination) UnmarshalBinary(b []byte) error {
	var res ListOfferMetricsRequestPagination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
