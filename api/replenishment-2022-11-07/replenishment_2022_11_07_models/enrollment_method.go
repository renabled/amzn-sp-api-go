// Code generated by go-swagger; DO NOT EDIT.

package replenishment_2022_11_07_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EnrollmentMethod The enrollment method used to enroll the offer into the program.
//
// swagger:model EnrollmentMethod
type EnrollmentMethod string

func NewEnrollmentMethod(value EnrollmentMethod) *EnrollmentMethod {
	return &value
}

// Pointer returns a pointer to a freshly-allocated EnrollmentMethod.
func (m EnrollmentMethod) Pointer() *EnrollmentMethod {
	return &m
}

const (

	// EnrollmentMethodMANUAL captures enum value "MANUAL"
	EnrollmentMethodMANUAL EnrollmentMethod = "MANUAL"

	// EnrollmentMethodAUTOMATIC captures enum value "AUTOMATIC"
	EnrollmentMethodAUTOMATIC EnrollmentMethod = "AUTOMATIC"
)

// for schema
var enrollmentMethodEnum []interface{}

func init() {
	var res []EnrollmentMethod
	if err := json.Unmarshal([]byte(`["MANUAL","AUTOMATIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		enrollmentMethodEnum = append(enrollmentMethodEnum, v)
	}
}

func (m EnrollmentMethod) validateEnrollmentMethodEnum(path, location string, value EnrollmentMethod) error {
	if err := validate.EnumCase(path, location, value, enrollmentMethodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this enrollment method
func (m EnrollmentMethod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEnrollmentMethodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this enrollment method based on context it is used
func (m EnrollmentMethod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
