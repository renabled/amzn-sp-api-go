// Code generated by go-swagger; DO NOT EDIT.

package replenishment_2022_11_07_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AutoEnrollmentPreference The auto-enrollment preference indicates whether the offer is opted-in to or opted-out of Amazon's auto-enrollment feature.
//
// swagger:model AutoEnrollmentPreference
type AutoEnrollmentPreference string

func NewAutoEnrollmentPreference(value AutoEnrollmentPreference) *AutoEnrollmentPreference {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AutoEnrollmentPreference.
func (m AutoEnrollmentPreference) Pointer() *AutoEnrollmentPreference {
	return &m
}

const (

	// AutoEnrollmentPreferenceOPTEDIN captures enum value "OPTED_IN"
	AutoEnrollmentPreferenceOPTEDIN AutoEnrollmentPreference = "OPTED_IN"

	// AutoEnrollmentPreferenceOPTEDOUT captures enum value "OPTED_OUT"
	AutoEnrollmentPreferenceOPTEDOUT AutoEnrollmentPreference = "OPTED_OUT"
)

// for schema
var autoEnrollmentPreferenceEnum []interface{}

func init() {
	var res []AutoEnrollmentPreference
	if err := json.Unmarshal([]byte(`["OPTED_IN","OPTED_OUT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		autoEnrollmentPreferenceEnum = append(autoEnrollmentPreferenceEnum, v)
	}
}

func (m AutoEnrollmentPreference) validateAutoEnrollmentPreferenceEnum(path, location string, value AutoEnrollmentPreference) error {
	if err := validate.EnumCase(path, location, value, autoEnrollmentPreferenceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this auto enrollment preference
func (m AutoEnrollmentPreference) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAutoEnrollmentPreferenceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this auto enrollment preference based on context it is used
func (m AutoEnrollmentPreference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
