// Code generated by go-swagger; DO NOT EDIT.

package listings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteListingsItemParams creates a new DeleteListingsItemParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteListingsItemParams() *DeleteListingsItemParams {
	return &DeleteListingsItemParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteListingsItemParamsWithTimeout creates a new DeleteListingsItemParams object
// with the ability to set a timeout on a request.
func NewDeleteListingsItemParamsWithTimeout(timeout time.Duration) *DeleteListingsItemParams {
	return &DeleteListingsItemParams{
		timeout: timeout,
	}
}

// NewDeleteListingsItemParamsWithContext creates a new DeleteListingsItemParams object
// with the ability to set a context for a request.
func NewDeleteListingsItemParamsWithContext(ctx context.Context) *DeleteListingsItemParams {
	return &DeleteListingsItemParams{
		Context: ctx,
	}
}

// NewDeleteListingsItemParamsWithHTTPClient creates a new DeleteListingsItemParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteListingsItemParamsWithHTTPClient(client *http.Client) *DeleteListingsItemParams {
	return &DeleteListingsItemParams{
		HTTPClient: client,
	}
}

/*
DeleteListingsItemParams contains all the parameters to send to the API endpoint

	for the delete listings item operation.

	Typically these are written to a http.Request.
*/
type DeleteListingsItemParams struct {

	/* IssueLocale.

	   A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale.
	*/
	IssueLocale *string

	/* MarketplaceIds.

	   A comma-delimited list of Amazon marketplace identifiers for the request.
	*/
	MarketplaceIds []string

	/* SellerID.

	   A selling partner identifier, such as a merchant account or vendor code.
	*/
	SellerID string

	/* Sku.

	   A selling partner provided identifier for an Amazon listing.
	*/
	Sku string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete listings item params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteListingsItemParams) WithDefaults() *DeleteListingsItemParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete listings item params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteListingsItemParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete listings item params
func (o *DeleteListingsItemParams) WithTimeout(timeout time.Duration) *DeleteListingsItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete listings item params
func (o *DeleteListingsItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete listings item params
func (o *DeleteListingsItemParams) WithContext(ctx context.Context) *DeleteListingsItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete listings item params
func (o *DeleteListingsItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete listings item params
func (o *DeleteListingsItemParams) WithHTTPClient(client *http.Client) *DeleteListingsItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete listings item params
func (o *DeleteListingsItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIssueLocale adds the issueLocale to the delete listings item params
func (o *DeleteListingsItemParams) WithIssueLocale(issueLocale *string) *DeleteListingsItemParams {
	o.SetIssueLocale(issueLocale)
	return o
}

// SetIssueLocale adds the issueLocale to the delete listings item params
func (o *DeleteListingsItemParams) SetIssueLocale(issueLocale *string) {
	o.IssueLocale = issueLocale
}

// WithMarketplaceIds adds the marketplaceIds to the delete listings item params
func (o *DeleteListingsItemParams) WithMarketplaceIds(marketplaceIds []string) *DeleteListingsItemParams {
	o.SetMarketplaceIds(marketplaceIds)
	return o
}

// SetMarketplaceIds adds the marketplaceIds to the delete listings item params
func (o *DeleteListingsItemParams) SetMarketplaceIds(marketplaceIds []string) {
	o.MarketplaceIds = marketplaceIds
}

// WithSellerID adds the sellerID to the delete listings item params
func (o *DeleteListingsItemParams) WithSellerID(sellerID string) *DeleteListingsItemParams {
	o.SetSellerID(sellerID)
	return o
}

// SetSellerID adds the sellerId to the delete listings item params
func (o *DeleteListingsItemParams) SetSellerID(sellerID string) {
	o.SellerID = sellerID
}

// WithSku adds the sku to the delete listings item params
func (o *DeleteListingsItemParams) WithSku(sku string) *DeleteListingsItemParams {
	o.SetSku(sku)
	return o
}

// SetSku adds the sku to the delete listings item params
func (o *DeleteListingsItemParams) SetSku(sku string) {
	o.Sku = sku
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteListingsItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IssueLocale != nil {

		// query param issueLocale
		var qrIssueLocale string

		if o.IssueLocale != nil {
			qrIssueLocale = *o.IssueLocale
		}
		qIssueLocale := qrIssueLocale
		if qIssueLocale != "" {

			if err := r.SetQueryParam("issueLocale", qIssueLocale); err != nil {
				return err
			}
		}
	}

	if o.MarketplaceIds != nil {

		// binding items for marketplaceIds
		joinedMarketplaceIds := o.bindParamMarketplaceIds(reg)

		// query array param marketplaceIds
		if err := r.SetQueryParam("marketplaceIds", joinedMarketplaceIds...); err != nil {
			return err
		}
	}

	// path param sellerId
	if err := r.SetPathParam("sellerId", o.SellerID); err != nil {
		return err
	}

	// path param sku
	if err := r.SetPathParam("sku", o.Sku); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamDeleteListingsItem binds the parameter marketplaceIds
func (o *DeleteListingsItemParams) bindParamMarketplaceIds(formats strfmt.Registry) []string {
	marketplaceIdsIR := o.MarketplaceIds

	var marketplaceIdsIC []string
	for _, marketplaceIdsIIR := range marketplaceIdsIR { // explode []string

		marketplaceIdsIIV := marketplaceIdsIIR // string as string
		marketplaceIdsIC = append(marketplaceIdsIC, marketplaceIdsIIV)
	}

	// items.CollectionFormat: "csv"
	marketplaceIdsIS := swag.JoinByFormat(marketplaceIdsIC, "csv")

	return marketplaceIdsIS
}
