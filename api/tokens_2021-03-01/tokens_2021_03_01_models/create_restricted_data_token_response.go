// Code generated by go-swagger; DO NOT EDIT.

package tokens_2021_03_01_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateRestrictedDataTokenResponse The response schema for the createRestrictedDataToken operation.
//
// swagger:model CreateRestrictedDataTokenResponse
type CreateRestrictedDataTokenResponse struct {

	// The lifetime of the Restricted Data Token, in seconds.
	ExpiresIn int64 `json:"expiresIn,omitempty"`

	// A Restricted Data Token (RDT). This is a short-lived access token that authorizes calls to restricted operations. Pass this value with the x-amz-access-token header when making subsequent calls to these restricted resources.
	RestrictedDataToken string `json:"restrictedDataToken,omitempty"`
}

// Validate validates this create restricted data token response
func (m *CreateRestrictedDataTokenResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create restricted data token response based on context it is used
func (m *CreateRestrictedDataTokenResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateRestrictedDataTokenResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateRestrictedDataTokenResponse) UnmarshalBinary(b []byte) error {
	var res CreateRestrictedDataTokenResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
