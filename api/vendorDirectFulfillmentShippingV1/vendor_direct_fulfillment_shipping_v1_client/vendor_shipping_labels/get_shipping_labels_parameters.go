// Code generated by go-swagger; DO NOT EDIT.

package vendor_shipping_labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetShippingLabelsParams creates a new GetShippingLabelsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetShippingLabelsParams() *GetShippingLabelsParams {
	return &GetShippingLabelsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetShippingLabelsParamsWithTimeout creates a new GetShippingLabelsParams object
// with the ability to set a timeout on a request.
func NewGetShippingLabelsParamsWithTimeout(timeout time.Duration) *GetShippingLabelsParams {
	return &GetShippingLabelsParams{
		timeout: timeout,
	}
}

// NewGetShippingLabelsParamsWithContext creates a new GetShippingLabelsParams object
// with the ability to set a context for a request.
func NewGetShippingLabelsParamsWithContext(ctx context.Context) *GetShippingLabelsParams {
	return &GetShippingLabelsParams{
		Context: ctx,
	}
}

// NewGetShippingLabelsParamsWithHTTPClient creates a new GetShippingLabelsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetShippingLabelsParamsWithHTTPClient(client *http.Client) *GetShippingLabelsParams {
	return &GetShippingLabelsParams{
		HTTPClient: client,
	}
}

/* GetShippingLabelsParams contains all the parameters to send to the API endpoint
   for the get shipping labels operation.

   Typically these are written to a http.Request.
*/
type GetShippingLabelsParams struct {

	/* CreatedAfter.

	   Shipping labels that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format.

	   Format: date-time
	*/
	CreatedAfter strfmt.DateTime

	/* CreatedBefore.

	   Shipping labels that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format.

	   Format: date-time
	*/
	CreatedBefore strfmt.DateTime

	/* Limit.

	   The limit to the number of records returned.
	*/
	Limit *int64

	/* NextToken.

	   Used for pagination when there are more ship labels than the specified result size limit. The token value is returned in the previous API call.
	*/
	NextToken *string

	/* ShipFromPartyID.

	   The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses.
	*/
	ShipFromPartyID *string

	/* SortOrder.

	   Sort ASC or DESC by order creation date.

	   Default: "ASC"
	*/
	SortOrder *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get shipping labels params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShippingLabelsParams) WithDefaults() *GetShippingLabelsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get shipping labels params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShippingLabelsParams) SetDefaults() {
	var (
		sortOrderDefault = string("ASC")
	)

	val := GetShippingLabelsParams{
		SortOrder: &sortOrderDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get shipping labels params
func (o *GetShippingLabelsParams) WithTimeout(timeout time.Duration) *GetShippingLabelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get shipping labels params
func (o *GetShippingLabelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get shipping labels params
func (o *GetShippingLabelsParams) WithContext(ctx context.Context) *GetShippingLabelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get shipping labels params
func (o *GetShippingLabelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get shipping labels params
func (o *GetShippingLabelsParams) WithHTTPClient(client *http.Client) *GetShippingLabelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get shipping labels params
func (o *GetShippingLabelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreatedAfter adds the createdAfter to the get shipping labels params
func (o *GetShippingLabelsParams) WithCreatedAfter(createdAfter strfmt.DateTime) *GetShippingLabelsParams {
	o.SetCreatedAfter(createdAfter)
	return o
}

// SetCreatedAfter adds the createdAfter to the get shipping labels params
func (o *GetShippingLabelsParams) SetCreatedAfter(createdAfter strfmt.DateTime) {
	o.CreatedAfter = createdAfter
}

// WithCreatedBefore adds the createdBefore to the get shipping labels params
func (o *GetShippingLabelsParams) WithCreatedBefore(createdBefore strfmt.DateTime) *GetShippingLabelsParams {
	o.SetCreatedBefore(createdBefore)
	return o
}

// SetCreatedBefore adds the createdBefore to the get shipping labels params
func (o *GetShippingLabelsParams) SetCreatedBefore(createdBefore strfmt.DateTime) {
	o.CreatedBefore = createdBefore
}

// WithLimit adds the limit to the get shipping labels params
func (o *GetShippingLabelsParams) WithLimit(limit *int64) *GetShippingLabelsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get shipping labels params
func (o *GetShippingLabelsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithNextToken adds the nextToken to the get shipping labels params
func (o *GetShippingLabelsParams) WithNextToken(nextToken *string) *GetShippingLabelsParams {
	o.SetNextToken(nextToken)
	return o
}

// SetNextToken adds the nextToken to the get shipping labels params
func (o *GetShippingLabelsParams) SetNextToken(nextToken *string) {
	o.NextToken = nextToken
}

// WithShipFromPartyID adds the shipFromPartyID to the get shipping labels params
func (o *GetShippingLabelsParams) WithShipFromPartyID(shipFromPartyID *string) *GetShippingLabelsParams {
	o.SetShipFromPartyID(shipFromPartyID)
	return o
}

// SetShipFromPartyID adds the shipFromPartyId to the get shipping labels params
func (o *GetShippingLabelsParams) SetShipFromPartyID(shipFromPartyID *string) {
	o.ShipFromPartyID = shipFromPartyID
}

// WithSortOrder adds the sortOrder to the get shipping labels params
func (o *GetShippingLabelsParams) WithSortOrder(sortOrder *string) *GetShippingLabelsParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the get shipping labels params
func (o *GetShippingLabelsParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WriteToRequest writes these params to a swagger request
func (o *GetShippingLabelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param createdAfter
	qrCreatedAfter := o.CreatedAfter
	qCreatedAfter := qrCreatedAfter.String()
	if qCreatedAfter != "" {

		if err := r.SetQueryParam("createdAfter", qCreatedAfter); err != nil {
			return err
		}
	}

	// query param createdBefore
	qrCreatedBefore := o.CreatedBefore
	qCreatedBefore := qrCreatedBefore.String()
	if qCreatedBefore != "" {

		if err := r.SetQueryParam("createdBefore", qCreatedBefore); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.NextToken != nil {

		// query param nextToken
		var qrNextToken string

		if o.NextToken != nil {
			qrNextToken = *o.NextToken
		}
		qNextToken := qrNextToken
		if qNextToken != "" {

			if err := r.SetQueryParam("nextToken", qNextToken); err != nil {
				return err
			}
		}
	}

	if o.ShipFromPartyID != nil {

		// query param shipFromPartyId
		var qrShipFromPartyID string

		if o.ShipFromPartyID != nil {
			qrShipFromPartyID = *o.ShipFromPartyID
		}
		qShipFromPartyID := qrShipFromPartyID
		if qShipFromPartyID != "" {

			if err := r.SetQueryParam("shipFromPartyId", qShipFromPartyID); err != nil {
				return err
			}
		}
	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string

		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {

			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
