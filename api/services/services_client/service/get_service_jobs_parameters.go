// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetServiceJobsParams creates a new GetServiceJobsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetServiceJobsParams() *GetServiceJobsParams {
	return &GetServiceJobsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetServiceJobsParamsWithTimeout creates a new GetServiceJobsParams object
// with the ability to set a timeout on a request.
func NewGetServiceJobsParamsWithTimeout(timeout time.Duration) *GetServiceJobsParams {
	return &GetServiceJobsParams{
		timeout: timeout,
	}
}

// NewGetServiceJobsParamsWithContext creates a new GetServiceJobsParams object
// with the ability to set a context for a request.
func NewGetServiceJobsParamsWithContext(ctx context.Context) *GetServiceJobsParams {
	return &GetServiceJobsParams{
		Context: ctx,
	}
}

// NewGetServiceJobsParamsWithHTTPClient creates a new GetServiceJobsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetServiceJobsParamsWithHTTPClient(client *http.Client) *GetServiceJobsParams {
	return &GetServiceJobsParams{
		HTTPClient: client,
	}
}

/* GetServiceJobsParams contains all the parameters to send to the API endpoint
   for the get service jobs operation.

   Typically these are written to a http.Request.
*/
type GetServiceJobsParams struct {

	/* Asins.

	   List of Amazon Standard Identification Numbers (ASIN) of the items. Max values supported is 20.
	*/
	Asins []string

	/* CreatedAfter.

	   A date used for selecting jobs created at or after a specified time. Must be in ISO 8601 format. Required if `LastUpdatedAfter` is not specified. Specifying both `CreatedAfter` and `LastUpdatedAfter` returns an error.
	*/
	CreatedAfter *string

	/* CreatedBefore.

	   A date used for selecting jobs created at or before a specified time. Must be in ISO 8601 format.
	*/
	CreatedBefore *string

	/* LastUpdatedAfter.

	   A date used for selecting jobs updated at or after a specified time. Must be in ISO 8601 format. Required if `createdAfter` is not specified. Specifying both `CreatedAfter` and `LastUpdatedAfter` returns an error.
	*/
	LastUpdatedAfter *string

	/* LastUpdatedBefore.

	   A date used for selecting jobs updated at or before a specified time. Must be in ISO 8601 format.
	*/
	LastUpdatedBefore *string

	/* MarketplaceIds.

	   Used to select jobs that were placed in the specified marketplaces.
	*/
	MarketplaceIds []string

	/* PageSize.

	   A non-negative integer that indicates the maximum number of jobs to return in the list, Value must be 1 - 20. Default 20.

	   Default: 20
	*/
	PageSize *int64

	/* PageToken.

	   String returned in the response of your previous request.
	*/
	PageToken *string

	/* RequiredSkills.

	   A defined set of related knowledge, skills, experience, tools, materials, and work processes common to service delivery for a set of products and/or service scenarios. Max values supported is 20.
	*/
	RequiredSkills []string

	/* ScheduleEndDate.

	   A date used for filtering jobs schedules at or before a specified time. Must be in ISO 8601 format. Schedule end date should not be earlier than schedule start date.
	*/
	ScheduleEndDate *string

	/* ScheduleStartDate.

	   A date used for filtering jobs schedules at or after a specified time. Must be in ISO 8601 format. Schedule end date should not be earlier than schedule start date.
	*/
	ScheduleStartDate *string

	/* ServiceJobStatus.

	   A list of one or more job status by which to filter the list of jobs.
	*/
	ServiceJobStatus []string

	/* ServiceOrderIds.

	   List of service order ids for the query you want to perform.Max values supported 20.
	*/
	ServiceOrderIds []string

	/* SortField.

	   Sort fields on which you want to sort the output.
	*/
	SortField *string

	/* SortOrder.

	   Sort order for the query you want to perform.
	*/
	SortOrder *string

	/* StoreIds.

	   List of Amazon-defined identifiers for the region scope. Max values supported is 50.
	*/
	StoreIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get service jobs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceJobsParams) WithDefaults() *GetServiceJobsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get service jobs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServiceJobsParams) SetDefaults() {
	var (
		pageSizeDefault = int64(20)
	)

	val := GetServiceJobsParams{
		PageSize: &pageSizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get service jobs params
func (o *GetServiceJobsParams) WithTimeout(timeout time.Duration) *GetServiceJobsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get service jobs params
func (o *GetServiceJobsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get service jobs params
func (o *GetServiceJobsParams) WithContext(ctx context.Context) *GetServiceJobsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get service jobs params
func (o *GetServiceJobsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get service jobs params
func (o *GetServiceJobsParams) WithHTTPClient(client *http.Client) *GetServiceJobsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get service jobs params
func (o *GetServiceJobsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAsins adds the asins to the get service jobs params
func (o *GetServiceJobsParams) WithAsins(asins []string) *GetServiceJobsParams {
	o.SetAsins(asins)
	return o
}

// SetAsins adds the asins to the get service jobs params
func (o *GetServiceJobsParams) SetAsins(asins []string) {
	o.Asins = asins
}

// WithCreatedAfter adds the createdAfter to the get service jobs params
func (o *GetServiceJobsParams) WithCreatedAfter(createdAfter *string) *GetServiceJobsParams {
	o.SetCreatedAfter(createdAfter)
	return o
}

// SetCreatedAfter adds the createdAfter to the get service jobs params
func (o *GetServiceJobsParams) SetCreatedAfter(createdAfter *string) {
	o.CreatedAfter = createdAfter
}

// WithCreatedBefore adds the createdBefore to the get service jobs params
func (o *GetServiceJobsParams) WithCreatedBefore(createdBefore *string) *GetServiceJobsParams {
	o.SetCreatedBefore(createdBefore)
	return o
}

// SetCreatedBefore adds the createdBefore to the get service jobs params
func (o *GetServiceJobsParams) SetCreatedBefore(createdBefore *string) {
	o.CreatedBefore = createdBefore
}

// WithLastUpdatedAfter adds the lastUpdatedAfter to the get service jobs params
func (o *GetServiceJobsParams) WithLastUpdatedAfter(lastUpdatedAfter *string) *GetServiceJobsParams {
	o.SetLastUpdatedAfter(lastUpdatedAfter)
	return o
}

// SetLastUpdatedAfter adds the lastUpdatedAfter to the get service jobs params
func (o *GetServiceJobsParams) SetLastUpdatedAfter(lastUpdatedAfter *string) {
	o.LastUpdatedAfter = lastUpdatedAfter
}

// WithLastUpdatedBefore adds the lastUpdatedBefore to the get service jobs params
func (o *GetServiceJobsParams) WithLastUpdatedBefore(lastUpdatedBefore *string) *GetServiceJobsParams {
	o.SetLastUpdatedBefore(lastUpdatedBefore)
	return o
}

// SetLastUpdatedBefore adds the lastUpdatedBefore to the get service jobs params
func (o *GetServiceJobsParams) SetLastUpdatedBefore(lastUpdatedBefore *string) {
	o.LastUpdatedBefore = lastUpdatedBefore
}

// WithMarketplaceIds adds the marketplaceIds to the get service jobs params
func (o *GetServiceJobsParams) WithMarketplaceIds(marketplaceIds []string) *GetServiceJobsParams {
	o.SetMarketplaceIds(marketplaceIds)
	return o
}

// SetMarketplaceIds adds the marketplaceIds to the get service jobs params
func (o *GetServiceJobsParams) SetMarketplaceIds(marketplaceIds []string) {
	o.MarketplaceIds = marketplaceIds
}

// WithPageSize adds the pageSize to the get service jobs params
func (o *GetServiceJobsParams) WithPageSize(pageSize *int64) *GetServiceJobsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get service jobs params
func (o *GetServiceJobsParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithPageToken adds the pageToken to the get service jobs params
func (o *GetServiceJobsParams) WithPageToken(pageToken *string) *GetServiceJobsParams {
	o.SetPageToken(pageToken)
	return o
}

// SetPageToken adds the pageToken to the get service jobs params
func (o *GetServiceJobsParams) SetPageToken(pageToken *string) {
	o.PageToken = pageToken
}

// WithRequiredSkills adds the requiredSkills to the get service jobs params
func (o *GetServiceJobsParams) WithRequiredSkills(requiredSkills []string) *GetServiceJobsParams {
	o.SetRequiredSkills(requiredSkills)
	return o
}

// SetRequiredSkills adds the requiredSkills to the get service jobs params
func (o *GetServiceJobsParams) SetRequiredSkills(requiredSkills []string) {
	o.RequiredSkills = requiredSkills
}

// WithScheduleEndDate adds the scheduleEndDate to the get service jobs params
func (o *GetServiceJobsParams) WithScheduleEndDate(scheduleEndDate *string) *GetServiceJobsParams {
	o.SetScheduleEndDate(scheduleEndDate)
	return o
}

// SetScheduleEndDate adds the scheduleEndDate to the get service jobs params
func (o *GetServiceJobsParams) SetScheduleEndDate(scheduleEndDate *string) {
	o.ScheduleEndDate = scheduleEndDate
}

// WithScheduleStartDate adds the scheduleStartDate to the get service jobs params
func (o *GetServiceJobsParams) WithScheduleStartDate(scheduleStartDate *string) *GetServiceJobsParams {
	o.SetScheduleStartDate(scheduleStartDate)
	return o
}

// SetScheduleStartDate adds the scheduleStartDate to the get service jobs params
func (o *GetServiceJobsParams) SetScheduleStartDate(scheduleStartDate *string) {
	o.ScheduleStartDate = scheduleStartDate
}

// WithServiceJobStatus adds the serviceJobStatus to the get service jobs params
func (o *GetServiceJobsParams) WithServiceJobStatus(serviceJobStatus []string) *GetServiceJobsParams {
	o.SetServiceJobStatus(serviceJobStatus)
	return o
}

// SetServiceJobStatus adds the serviceJobStatus to the get service jobs params
func (o *GetServiceJobsParams) SetServiceJobStatus(serviceJobStatus []string) {
	o.ServiceJobStatus = serviceJobStatus
}

// WithServiceOrderIds adds the serviceOrderIds to the get service jobs params
func (o *GetServiceJobsParams) WithServiceOrderIds(serviceOrderIds []string) *GetServiceJobsParams {
	o.SetServiceOrderIds(serviceOrderIds)
	return o
}

// SetServiceOrderIds adds the serviceOrderIds to the get service jobs params
func (o *GetServiceJobsParams) SetServiceOrderIds(serviceOrderIds []string) {
	o.ServiceOrderIds = serviceOrderIds
}

// WithSortField adds the sortField to the get service jobs params
func (o *GetServiceJobsParams) WithSortField(sortField *string) *GetServiceJobsParams {
	o.SetSortField(sortField)
	return o
}

// SetSortField adds the sortField to the get service jobs params
func (o *GetServiceJobsParams) SetSortField(sortField *string) {
	o.SortField = sortField
}

// WithSortOrder adds the sortOrder to the get service jobs params
func (o *GetServiceJobsParams) WithSortOrder(sortOrder *string) *GetServiceJobsParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the get service jobs params
func (o *GetServiceJobsParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WithStoreIds adds the storeIds to the get service jobs params
func (o *GetServiceJobsParams) WithStoreIds(storeIds []string) *GetServiceJobsParams {
	o.SetStoreIds(storeIds)
	return o
}

// SetStoreIds adds the storeIds to the get service jobs params
func (o *GetServiceJobsParams) SetStoreIds(storeIds []string) {
	o.StoreIds = storeIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetServiceJobsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Asins != nil {

		// binding items for asins
		joinedAsins := o.bindParamAsins(reg)

		// query array param asins
		if err := r.SetQueryParam("asins", joinedAsins...); err != nil {
			return err
		}
	}

	if o.CreatedAfter != nil {

		// query param createdAfter
		var qrCreatedAfter string

		if o.CreatedAfter != nil {
			qrCreatedAfter = *o.CreatedAfter
		}
		qCreatedAfter := qrCreatedAfter
		if qCreatedAfter != "" {

			if err := r.SetQueryParam("createdAfter", qCreatedAfter); err != nil {
				return err
			}
		}
	}

	if o.CreatedBefore != nil {

		// query param createdBefore
		var qrCreatedBefore string

		if o.CreatedBefore != nil {
			qrCreatedBefore = *o.CreatedBefore
		}
		qCreatedBefore := qrCreatedBefore
		if qCreatedBefore != "" {

			if err := r.SetQueryParam("createdBefore", qCreatedBefore); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedAfter != nil {

		// query param lastUpdatedAfter
		var qrLastUpdatedAfter string

		if o.LastUpdatedAfter != nil {
			qrLastUpdatedAfter = *o.LastUpdatedAfter
		}
		qLastUpdatedAfter := qrLastUpdatedAfter
		if qLastUpdatedAfter != "" {

			if err := r.SetQueryParam("lastUpdatedAfter", qLastUpdatedAfter); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedBefore != nil {

		// query param lastUpdatedBefore
		var qrLastUpdatedBefore string

		if o.LastUpdatedBefore != nil {
			qrLastUpdatedBefore = *o.LastUpdatedBefore
		}
		qLastUpdatedBefore := qrLastUpdatedBefore
		if qLastUpdatedBefore != "" {

			if err := r.SetQueryParam("lastUpdatedBefore", qLastUpdatedBefore); err != nil {
				return err
			}
		}
	}

	if o.MarketplaceIds != nil {

		// binding items for marketplaceIds
		joinedMarketplaceIds := o.bindParamMarketplaceIds(reg)

		// query array param marketplaceIds
		if err := r.SetQueryParam("marketplaceIds", joinedMarketplaceIds...); err != nil {
			return err
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.PageToken != nil {

		// query param pageToken
		var qrPageToken string

		if o.PageToken != nil {
			qrPageToken = *o.PageToken
		}
		qPageToken := qrPageToken
		if qPageToken != "" {

			if err := r.SetQueryParam("pageToken", qPageToken); err != nil {
				return err
			}
		}
	}

	if o.RequiredSkills != nil {

		// binding items for requiredSkills
		joinedRequiredSkills := o.bindParamRequiredSkills(reg)

		// query array param requiredSkills
		if err := r.SetQueryParam("requiredSkills", joinedRequiredSkills...); err != nil {
			return err
		}
	}

	if o.ScheduleEndDate != nil {

		// query param scheduleEndDate
		var qrScheduleEndDate string

		if o.ScheduleEndDate != nil {
			qrScheduleEndDate = *o.ScheduleEndDate
		}
		qScheduleEndDate := qrScheduleEndDate
		if qScheduleEndDate != "" {

			if err := r.SetQueryParam("scheduleEndDate", qScheduleEndDate); err != nil {
				return err
			}
		}
	}

	if o.ScheduleStartDate != nil {

		// query param scheduleStartDate
		var qrScheduleStartDate string

		if o.ScheduleStartDate != nil {
			qrScheduleStartDate = *o.ScheduleStartDate
		}
		qScheduleStartDate := qrScheduleStartDate
		if qScheduleStartDate != "" {

			if err := r.SetQueryParam("scheduleStartDate", qScheduleStartDate); err != nil {
				return err
			}
		}
	}

	if o.ServiceJobStatus != nil {

		// binding items for serviceJobStatus
		joinedServiceJobStatus := o.bindParamServiceJobStatus(reg)

		// query array param serviceJobStatus
		if err := r.SetQueryParam("serviceJobStatus", joinedServiceJobStatus...); err != nil {
			return err
		}
	}

	if o.ServiceOrderIds != nil {

		// binding items for serviceOrderIds
		joinedServiceOrderIds := o.bindParamServiceOrderIds(reg)

		// query array param serviceOrderIds
		if err := r.SetQueryParam("serviceOrderIds", joinedServiceOrderIds...); err != nil {
			return err
		}
	}

	if o.SortField != nil {

		// query param sortField
		var qrSortField string

		if o.SortField != nil {
			qrSortField = *o.SortField
		}
		qSortField := qrSortField
		if qSortField != "" {

			if err := r.SetQueryParam("sortField", qSortField); err != nil {
				return err
			}
		}
	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string

		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {

			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}
	}

	if o.StoreIds != nil {

		// binding items for storeIds
		joinedStoreIds := o.bindParamStoreIds(reg)

		// query array param storeIds
		if err := r.SetQueryParam("storeIds", joinedStoreIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetServiceJobs binds the parameter asins
func (o *GetServiceJobsParams) bindParamAsins(formats strfmt.Registry) []string {
	asinsIR := o.Asins

	var asinsIC []string
	for _, asinsIIR := range asinsIR { // explode []string

		asinsIIV := asinsIIR // string as string
		asinsIC = append(asinsIC, asinsIIV)
	}

	// items.CollectionFormat: ""
	asinsIS := swag.JoinByFormat(asinsIC, "")

	return asinsIS
}

// bindParamGetServiceJobs binds the parameter marketplaceIds
func (o *GetServiceJobsParams) bindParamMarketplaceIds(formats strfmt.Registry) []string {
	marketplaceIdsIR := o.MarketplaceIds

	var marketplaceIdsIC []string
	for _, marketplaceIdsIIR := range marketplaceIdsIR { // explode []string

		marketplaceIdsIIV := marketplaceIdsIIR // string as string
		marketplaceIdsIC = append(marketplaceIdsIC, marketplaceIdsIIV)
	}

	// items.CollectionFormat: ""
	marketplaceIdsIS := swag.JoinByFormat(marketplaceIdsIC, "")

	return marketplaceIdsIS
}

// bindParamGetServiceJobs binds the parameter requiredSkills
func (o *GetServiceJobsParams) bindParamRequiredSkills(formats strfmt.Registry) []string {
	requiredSkillsIR := o.RequiredSkills

	var requiredSkillsIC []string
	for _, requiredSkillsIIR := range requiredSkillsIR { // explode []string

		requiredSkillsIIV := requiredSkillsIIR // string as string
		requiredSkillsIC = append(requiredSkillsIC, requiredSkillsIIV)
	}

	// items.CollectionFormat: ""
	requiredSkillsIS := swag.JoinByFormat(requiredSkillsIC, "")

	return requiredSkillsIS
}

// bindParamGetServiceJobs binds the parameter serviceJobStatus
func (o *GetServiceJobsParams) bindParamServiceJobStatus(formats strfmt.Registry) []string {
	serviceJobStatusIR := o.ServiceJobStatus

	var serviceJobStatusIC []string
	for _, serviceJobStatusIIR := range serviceJobStatusIR { // explode []string

		serviceJobStatusIIV := serviceJobStatusIIR // string as string
		serviceJobStatusIC = append(serviceJobStatusIC, serviceJobStatusIIV)
	}

	// items.CollectionFormat: ""
	serviceJobStatusIS := swag.JoinByFormat(serviceJobStatusIC, "")

	return serviceJobStatusIS
}

// bindParamGetServiceJobs binds the parameter serviceOrderIds
func (o *GetServiceJobsParams) bindParamServiceOrderIds(formats strfmt.Registry) []string {
	serviceOrderIdsIR := o.ServiceOrderIds

	var serviceOrderIdsIC []string
	for _, serviceOrderIdsIIR := range serviceOrderIdsIR { // explode []string

		serviceOrderIdsIIV := serviceOrderIdsIIR // string as string
		serviceOrderIdsIC = append(serviceOrderIdsIC, serviceOrderIdsIIV)
	}

	// items.CollectionFormat: ""
	serviceOrderIdsIS := swag.JoinByFormat(serviceOrderIdsIC, "")

	return serviceOrderIdsIS
}

// bindParamGetServiceJobs binds the parameter storeIds
func (o *GetServiceJobsParams) bindParamStoreIds(formats strfmt.Registry) []string {
	storeIdsIR := o.StoreIds

	var storeIdsIC []string
	for _, storeIdsIIR := range storeIdsIR { // explode []string

		storeIdsIIV := storeIdsIIR // string as string
		storeIdsIC = append(storeIdsIC, storeIdsIIV)
	}

	// items.CollectionFormat: ""
	storeIdsIS := swag.JoinByFormat(storeIdsIC, "")

	return storeIdsIS
}
