// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/xamandar/amzn-sp-api-go/api/services/services_models"
)

// NewGetRangeSlotCapacityParams creates a new GetRangeSlotCapacityParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRangeSlotCapacityParams() *GetRangeSlotCapacityParams {
	return &GetRangeSlotCapacityParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRangeSlotCapacityParamsWithTimeout creates a new GetRangeSlotCapacityParams object
// with the ability to set a timeout on a request.
func NewGetRangeSlotCapacityParamsWithTimeout(timeout time.Duration) *GetRangeSlotCapacityParams {
	return &GetRangeSlotCapacityParams{
		timeout: timeout,
	}
}

// NewGetRangeSlotCapacityParamsWithContext creates a new GetRangeSlotCapacityParams object
// with the ability to set a context for a request.
func NewGetRangeSlotCapacityParamsWithContext(ctx context.Context) *GetRangeSlotCapacityParams {
	return &GetRangeSlotCapacityParams{
		Context: ctx,
	}
}

// NewGetRangeSlotCapacityParamsWithHTTPClient creates a new GetRangeSlotCapacityParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRangeSlotCapacityParamsWithHTTPClient(client *http.Client) *GetRangeSlotCapacityParams {
	return &GetRangeSlotCapacityParams{
		HTTPClient: client,
	}
}

/*
GetRangeSlotCapacityParams contains all the parameters to send to the API endpoint

	for the get range slot capacity operation.

	Typically these are written to a http.Request.
*/
type GetRangeSlotCapacityParams struct {

	/* Body.

	   Request body.
	*/
	Body *services_models.RangeSlotCapacityQuery

	/* MarketplaceIds.

	   An identifier for the marketplace in which the resource operates.
	*/
	MarketplaceIds []string

	/* NextPageToken.

	   Next page token returned in the response of your previous request.
	*/
	NextPageToken *string

	/* ResourceID.

	   Resource Identifier.
	*/
	ResourceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get range slot capacity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRangeSlotCapacityParams) WithDefaults() *GetRangeSlotCapacityParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get range slot capacity params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRangeSlotCapacityParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithTimeout(timeout time.Duration) *GetRangeSlotCapacityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithContext(ctx context.Context) *GetRangeSlotCapacityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithHTTPClient(client *http.Client) *GetRangeSlotCapacityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithBody(body *services_models.RangeSlotCapacityQuery) *GetRangeSlotCapacityParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetBody(body *services_models.RangeSlotCapacityQuery) {
	o.Body = body
}

// WithMarketplaceIds adds the marketplaceIds to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithMarketplaceIds(marketplaceIds []string) *GetRangeSlotCapacityParams {
	o.SetMarketplaceIds(marketplaceIds)
	return o
}

// SetMarketplaceIds adds the marketplaceIds to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetMarketplaceIds(marketplaceIds []string) {
	o.MarketplaceIds = marketplaceIds
}

// WithNextPageToken adds the nextPageToken to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithNextPageToken(nextPageToken *string) *GetRangeSlotCapacityParams {
	o.SetNextPageToken(nextPageToken)
	return o
}

// SetNextPageToken adds the nextPageToken to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetNextPageToken(nextPageToken *string) {
	o.NextPageToken = nextPageToken
}

// WithResourceID adds the resourceID to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) WithResourceID(resourceID string) *GetRangeSlotCapacityParams {
	o.SetResourceID(resourceID)
	return o
}

// SetResourceID adds the resourceId to the get range slot capacity params
func (o *GetRangeSlotCapacityParams) SetResourceID(resourceID string) {
	o.ResourceID = resourceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRangeSlotCapacityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.MarketplaceIds != nil {

		// binding items for marketplaceIds
		joinedMarketplaceIds := o.bindParamMarketplaceIds(reg)

		// query array param marketplaceIds
		if err := r.SetQueryParam("marketplaceIds", joinedMarketplaceIds...); err != nil {
			return err
		}
	}

	if o.NextPageToken != nil {

		// query param nextPageToken
		var qrNextPageToken string

		if o.NextPageToken != nil {
			qrNextPageToken = *o.NextPageToken
		}
		qNextPageToken := qrNextPageToken
		if qNextPageToken != "" {

			if err := r.SetQueryParam("nextPageToken", qNextPageToken); err != nil {
				return err
			}
		}
	}

	// path param resourceId
	if err := r.SetPathParam("resourceId", o.ResourceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetRangeSlotCapacity binds the parameter marketplaceIds
func (o *GetRangeSlotCapacityParams) bindParamMarketplaceIds(formats strfmt.Registry) []string {
	marketplaceIdsIR := o.MarketplaceIds

	var marketplaceIdsIC []string
	for _, marketplaceIdsIIR := range marketplaceIdsIR { // explode []string

		marketplaceIdsIIV := marketplaceIdsIIR // string as string
		marketplaceIdsIC = append(marketplaceIdsIC, marketplaceIdsIIV)
	}

	// items.CollectionFormat: ""
	marketplaceIdsIS := swag.JoinByFormat(marketplaceIdsIC, "")

	return marketplaceIdsIS
}
