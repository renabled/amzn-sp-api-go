// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCancelReservationParams creates a new CancelReservationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCancelReservationParams() *CancelReservationParams {
	return &CancelReservationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCancelReservationParamsWithTimeout creates a new CancelReservationParams object
// with the ability to set a timeout on a request.
func NewCancelReservationParamsWithTimeout(timeout time.Duration) *CancelReservationParams {
	return &CancelReservationParams{
		timeout: timeout,
	}
}

// NewCancelReservationParamsWithContext creates a new CancelReservationParams object
// with the ability to set a context for a request.
func NewCancelReservationParamsWithContext(ctx context.Context) *CancelReservationParams {
	return &CancelReservationParams{
		Context: ctx,
	}
}

// NewCancelReservationParamsWithHTTPClient creates a new CancelReservationParams object
// with the ability to set a custom HTTPClient for a request.
func NewCancelReservationParamsWithHTTPClient(client *http.Client) *CancelReservationParams {
	return &CancelReservationParams{
		HTTPClient: client,
	}
}

/* CancelReservationParams contains all the parameters to send to the API endpoint
   for the cancel reservation operation.

   Typically these are written to a http.Request.
*/
type CancelReservationParams struct {

	/* MarketplaceIds.

	   An identifier for the marketplace in which the resource operates.
	*/
	MarketplaceIds []string

	/* ReservationID.

	   Reservation Identifier
	*/
	ReservationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cancel reservation params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CancelReservationParams) WithDefaults() *CancelReservationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cancel reservation params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CancelReservationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cancel reservation params
func (o *CancelReservationParams) WithTimeout(timeout time.Duration) *CancelReservationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cancel reservation params
func (o *CancelReservationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cancel reservation params
func (o *CancelReservationParams) WithContext(ctx context.Context) *CancelReservationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cancel reservation params
func (o *CancelReservationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cancel reservation params
func (o *CancelReservationParams) WithHTTPClient(client *http.Client) *CancelReservationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cancel reservation params
func (o *CancelReservationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMarketplaceIds adds the marketplaceIds to the cancel reservation params
func (o *CancelReservationParams) WithMarketplaceIds(marketplaceIds []string) *CancelReservationParams {
	o.SetMarketplaceIds(marketplaceIds)
	return o
}

// SetMarketplaceIds adds the marketplaceIds to the cancel reservation params
func (o *CancelReservationParams) SetMarketplaceIds(marketplaceIds []string) {
	o.MarketplaceIds = marketplaceIds
}

// WithReservationID adds the reservationID to the cancel reservation params
func (o *CancelReservationParams) WithReservationID(reservationID string) *CancelReservationParams {
	o.SetReservationID(reservationID)
	return o
}

// SetReservationID adds the reservationId to the cancel reservation params
func (o *CancelReservationParams) SetReservationID(reservationID string) {
	o.ReservationID = reservationID
}

// WriteToRequest writes these params to a swagger request
func (o *CancelReservationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MarketplaceIds != nil {

		// binding items for marketplaceIds
		joinedMarketplaceIds := o.bindParamMarketplaceIds(reg)

		// query array param marketplaceIds
		if err := r.SetQueryParam("marketplaceIds", joinedMarketplaceIds...); err != nil {
			return err
		}
	}

	// path param reservationId
	if err := r.SetPathParam("reservationId", o.ReservationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamCancelReservation binds the parameter marketplaceIds
func (o *CancelReservationParams) bindParamMarketplaceIds(formats strfmt.Registry) []string {
	marketplaceIdsIR := o.MarketplaceIds

	var marketplaceIdsIC []string
	for _, marketplaceIdsIIR := range marketplaceIdsIR { // explode []string

		marketplaceIdsIIV := marketplaceIdsIIR // string as string
		marketplaceIdsIC = append(marketplaceIdsIC, marketplaceIdsIIV)
	}

	// items.CollectionFormat: ""
	marketplaceIdsIS := swag.JoinByFormat(marketplaceIdsIC, "")

	return marketplaceIdsIS
}
