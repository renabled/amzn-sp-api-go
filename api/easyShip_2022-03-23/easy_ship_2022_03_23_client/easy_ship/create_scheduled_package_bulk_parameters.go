// Code generated by go-swagger; DO NOT EDIT.

package easy_ship

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/easyShip_2022-03-23/easy_ship_2022_03_23_models"
)

// NewCreateScheduledPackageBulkParams creates a new CreateScheduledPackageBulkParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateScheduledPackageBulkParams() *CreateScheduledPackageBulkParams {
	return &CreateScheduledPackageBulkParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateScheduledPackageBulkParamsWithTimeout creates a new CreateScheduledPackageBulkParams object
// with the ability to set a timeout on a request.
func NewCreateScheduledPackageBulkParamsWithTimeout(timeout time.Duration) *CreateScheduledPackageBulkParams {
	return &CreateScheduledPackageBulkParams{
		timeout: timeout,
	}
}

// NewCreateScheduledPackageBulkParamsWithContext creates a new CreateScheduledPackageBulkParams object
// with the ability to set a context for a request.
func NewCreateScheduledPackageBulkParamsWithContext(ctx context.Context) *CreateScheduledPackageBulkParams {
	return &CreateScheduledPackageBulkParams{
		Context: ctx,
	}
}

// NewCreateScheduledPackageBulkParamsWithHTTPClient creates a new CreateScheduledPackageBulkParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateScheduledPackageBulkParamsWithHTTPClient(client *http.Client) *CreateScheduledPackageBulkParams {
	return &CreateScheduledPackageBulkParams{
		HTTPClient: client,
	}
}

/*
CreateScheduledPackageBulkParams contains all the parameters to send to the API endpoint

	for the create scheduled package bulk operation.

	Typically these are written to a http.Request.
*/
type CreateScheduledPackageBulkParams struct {

	/* CreateScheduledPackagesRequest.

	   The request schema for the `createScheduledPackageBulk` operation.
	*/
	CreateScheduledPackagesRequest *easy_ship_2022_03_23_models.CreateScheduledPackagesRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create scheduled package bulk params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateScheduledPackageBulkParams) WithDefaults() *CreateScheduledPackageBulkParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create scheduled package bulk params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateScheduledPackageBulkParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) WithTimeout(timeout time.Duration) *CreateScheduledPackageBulkParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) WithContext(ctx context.Context) *CreateScheduledPackageBulkParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) WithHTTPClient(client *http.Client) *CreateScheduledPackageBulkParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreateScheduledPackagesRequest adds the createScheduledPackagesRequest to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) WithCreateScheduledPackagesRequest(createScheduledPackagesRequest *easy_ship_2022_03_23_models.CreateScheduledPackagesRequest) *CreateScheduledPackageBulkParams {
	o.SetCreateScheduledPackagesRequest(createScheduledPackagesRequest)
	return o
}

// SetCreateScheduledPackagesRequest adds the createScheduledPackagesRequest to the create scheduled package bulk params
func (o *CreateScheduledPackageBulkParams) SetCreateScheduledPackagesRequest(createScheduledPackagesRequest *easy_ship_2022_03_23_models.CreateScheduledPackagesRequest) {
	o.CreateScheduledPackagesRequest = createScheduledPackagesRequest
}

// WriteToRequest writes these params to a swagger request
func (o *CreateScheduledPackageBulkParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CreateScheduledPackagesRequest != nil {
		if err := r.SetBodyParam(o.CreateScheduledPackagesRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
