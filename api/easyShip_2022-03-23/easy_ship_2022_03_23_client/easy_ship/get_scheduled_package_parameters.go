// Code generated by go-swagger; DO NOT EDIT.

package easy_ship

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetScheduledPackageParams creates a new GetScheduledPackageParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetScheduledPackageParams() *GetScheduledPackageParams {
	return &GetScheduledPackageParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetScheduledPackageParamsWithTimeout creates a new GetScheduledPackageParams object
// with the ability to set a timeout on a request.
func NewGetScheduledPackageParamsWithTimeout(timeout time.Duration) *GetScheduledPackageParams {
	return &GetScheduledPackageParams{
		timeout: timeout,
	}
}

// NewGetScheduledPackageParamsWithContext creates a new GetScheduledPackageParams object
// with the ability to set a context for a request.
func NewGetScheduledPackageParamsWithContext(ctx context.Context) *GetScheduledPackageParams {
	return &GetScheduledPackageParams{
		Context: ctx,
	}
}

// NewGetScheduledPackageParamsWithHTTPClient creates a new GetScheduledPackageParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetScheduledPackageParamsWithHTTPClient(client *http.Client) *GetScheduledPackageParams {
	return &GetScheduledPackageParams{
		HTTPClient: client,
	}
}

/* GetScheduledPackageParams contains all the parameters to send to the API endpoint
   for the get scheduled package operation.

   Typically these are written to a http.Request.
*/
type GetScheduledPackageParams struct {

	/* AmazonOrderID.

	   An Amazon-defined order identifier. Identifies the order that the seller wants to deliver using Amazon Easy Ship.
	*/
	AmazonOrderID string

	/* MarketplaceID.

	   An identifier for the marketplace in which the seller is selling.
	*/
	MarketplaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get scheduled package params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScheduledPackageParams) WithDefaults() *GetScheduledPackageParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get scheduled package params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScheduledPackageParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get scheduled package params
func (o *GetScheduledPackageParams) WithTimeout(timeout time.Duration) *GetScheduledPackageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get scheduled package params
func (o *GetScheduledPackageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get scheduled package params
func (o *GetScheduledPackageParams) WithContext(ctx context.Context) *GetScheduledPackageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get scheduled package params
func (o *GetScheduledPackageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get scheduled package params
func (o *GetScheduledPackageParams) WithHTTPClient(client *http.Client) *GetScheduledPackageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get scheduled package params
func (o *GetScheduledPackageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAmazonOrderID adds the amazonOrderID to the get scheduled package params
func (o *GetScheduledPackageParams) WithAmazonOrderID(amazonOrderID string) *GetScheduledPackageParams {
	o.SetAmazonOrderID(amazonOrderID)
	return o
}

// SetAmazonOrderID adds the amazonOrderId to the get scheduled package params
func (o *GetScheduledPackageParams) SetAmazonOrderID(amazonOrderID string) {
	o.AmazonOrderID = amazonOrderID
}

// WithMarketplaceID adds the marketplaceID to the get scheduled package params
func (o *GetScheduledPackageParams) WithMarketplaceID(marketplaceID string) *GetScheduledPackageParams {
	o.SetMarketplaceID(marketplaceID)
	return o
}

// SetMarketplaceID adds the marketplaceId to the get scheduled package params
func (o *GetScheduledPackageParams) SetMarketplaceID(marketplaceID string) {
	o.MarketplaceID = marketplaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetScheduledPackageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param amazonOrderId
	qrAmazonOrderID := o.AmazonOrderID
	qAmazonOrderID := qrAmazonOrderID
	if qAmazonOrderID != "" {

		if err := r.SetQueryParam("amazonOrderId", qAmazonOrderID); err != nil {
			return err
		}
	}

	// query param marketplaceId
	qrMarketplaceID := o.MarketplaceID
	qMarketplaceID := qrMarketplaceID
	if qMarketplaceID != "" {

		if err := r.SetQueryParam("marketplaceId", qMarketplaceID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
