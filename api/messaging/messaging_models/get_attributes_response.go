// Code generated by go-swagger; DO NOT EDIT.

package messaging_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAttributesResponse The response schema for the GetAttributes operation.
//
// swagger:model GetAttributesResponse
type GetAttributesResponse struct {

	// buyer
	Buyer *GetAttributesResponseBuyer `json:"buyer,omitempty"`

	// errors
	Errors ErrorList `json:"errors,omitempty"`
}

// Validate validates this get attributes response
func (m *GetAttributesResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBuyer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetAttributesResponse) validateBuyer(formats strfmt.Registry) error {
	if swag.IsZero(m.Buyer) { // not required
		return nil
	}

	if m.Buyer != nil {
		if err := m.Buyer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("buyer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("buyer")
			}
			return err
		}
	}

	return nil
}

func (m *GetAttributesResponse) validateErrors(formats strfmt.Registry) error {
	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	if err := m.Errors.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("errors")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("errors")
		}
		return err
	}

	return nil
}

// ContextValidate validate this get attributes response based on the context it is used
func (m *GetAttributesResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateBuyer(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateErrors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetAttributesResponse) contextValidateBuyer(ctx context.Context, formats strfmt.Registry) error {

	if m.Buyer != nil {
		if err := m.Buyer.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("buyer")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("buyer")
			}
			return err
		}
	}

	return nil
}

func (m *GetAttributesResponse) contextValidateErrors(ctx context.Context, formats strfmt.Registry) error {

	if err := m.Errors.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("errors")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("errors")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetAttributesResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetAttributesResponse) UnmarshalBinary(b []byte) error {
	var res GetAttributesResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GetAttributesResponseBuyer The list of attributes related to the buyer.
//
// swagger:model GetAttributesResponseBuyer
type GetAttributesResponseBuyer struct {

	// The buyer's language of preference, indicated with a locale-specific language tag. Examples: "en-US", "zh-CN", and "en-GB".
	Locale string `json:"locale,omitempty"`
}

// Validate validates this get attributes response buyer
func (m *GetAttributesResponseBuyer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get attributes response buyer based on context it is used
func (m *GetAttributesResponseBuyer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetAttributesResponseBuyer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetAttributesResponseBuyer) UnmarshalBinary(b []byte) error {
	var res GetAttributesResponseBuyer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
