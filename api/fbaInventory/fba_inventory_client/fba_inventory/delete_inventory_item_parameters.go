// Code generated by go-swagger; DO NOT EDIT.

package fba_inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteInventoryItemParams creates a new DeleteInventoryItemParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteInventoryItemParams() *DeleteInventoryItemParams {
	return &DeleteInventoryItemParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteInventoryItemParamsWithTimeout creates a new DeleteInventoryItemParams object
// with the ability to set a timeout on a request.
func NewDeleteInventoryItemParamsWithTimeout(timeout time.Duration) *DeleteInventoryItemParams {
	return &DeleteInventoryItemParams{
		timeout: timeout,
	}
}

// NewDeleteInventoryItemParamsWithContext creates a new DeleteInventoryItemParams object
// with the ability to set a context for a request.
func NewDeleteInventoryItemParamsWithContext(ctx context.Context) *DeleteInventoryItemParams {
	return &DeleteInventoryItemParams{
		Context: ctx,
	}
}

// NewDeleteInventoryItemParamsWithHTTPClient creates a new DeleteInventoryItemParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteInventoryItemParamsWithHTTPClient(client *http.Client) *DeleteInventoryItemParams {
	return &DeleteInventoryItemParams{
		HTTPClient: client,
	}
}

/*
DeleteInventoryItemParams contains all the parameters to send to the API endpoint

	for the delete inventory item operation.

	Typically these are written to a http.Request.
*/
type DeleteInventoryItemParams struct {

	/* MarketplaceID.

	   The marketplace ID for the marketplace for which the sellerSku is to be deleted.
	*/
	MarketplaceID string

	/* SellerSku.

	   A single seller SKU used for querying the specified seller SKU inventory summaries.
	*/
	SellerSku string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete inventory item params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteInventoryItemParams) WithDefaults() *DeleteInventoryItemParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete inventory item params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteInventoryItemParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete inventory item params
func (o *DeleteInventoryItemParams) WithTimeout(timeout time.Duration) *DeleteInventoryItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete inventory item params
func (o *DeleteInventoryItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete inventory item params
func (o *DeleteInventoryItemParams) WithContext(ctx context.Context) *DeleteInventoryItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete inventory item params
func (o *DeleteInventoryItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete inventory item params
func (o *DeleteInventoryItemParams) WithHTTPClient(client *http.Client) *DeleteInventoryItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete inventory item params
func (o *DeleteInventoryItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMarketplaceID adds the marketplaceID to the delete inventory item params
func (o *DeleteInventoryItemParams) WithMarketplaceID(marketplaceID string) *DeleteInventoryItemParams {
	o.SetMarketplaceID(marketplaceID)
	return o
}

// SetMarketplaceID adds the marketplaceId to the delete inventory item params
func (o *DeleteInventoryItemParams) SetMarketplaceID(marketplaceID string) {
	o.MarketplaceID = marketplaceID
}

// WithSellerSku adds the sellerSku to the delete inventory item params
func (o *DeleteInventoryItemParams) WithSellerSku(sellerSku string) *DeleteInventoryItemParams {
	o.SetSellerSku(sellerSku)
	return o
}

// SetSellerSku adds the sellerSku to the delete inventory item params
func (o *DeleteInventoryItemParams) SetSellerSku(sellerSku string) {
	o.SellerSku = sellerSku
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteInventoryItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param marketplaceId
	qrMarketplaceID := o.MarketplaceID
	qMarketplaceID := qrMarketplaceID
	if qMarketplaceID != "" {

		if err := r.SetQueryParam("marketplaceId", qMarketplaceID); err != nil {
			return err
		}
	}

	// path param sellerSku
	if err := r.SetPathParam("sellerSku", o.SellerSku); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
