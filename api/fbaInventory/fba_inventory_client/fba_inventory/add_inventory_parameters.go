// Code generated by go-swagger; DO NOT EDIT.

package fba_inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/fbaInventory/fba_inventory_models"
)

// NewAddInventoryParams creates a new AddInventoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddInventoryParams() *AddInventoryParams {
	return &AddInventoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddInventoryParamsWithTimeout creates a new AddInventoryParams object
// with the ability to set a timeout on a request.
func NewAddInventoryParamsWithTimeout(timeout time.Duration) *AddInventoryParams {
	return &AddInventoryParams{
		timeout: timeout,
	}
}

// NewAddInventoryParamsWithContext creates a new AddInventoryParams object
// with the ability to set a context for a request.
func NewAddInventoryParamsWithContext(ctx context.Context) *AddInventoryParams {
	return &AddInventoryParams{
		Context: ctx,
	}
}

// NewAddInventoryParamsWithHTTPClient creates a new AddInventoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddInventoryParamsWithHTTPClient(client *http.Client) *AddInventoryParams {
	return &AddInventoryParams{
		HTTPClient: client,
	}
}

/*
AddInventoryParams contains all the parameters to send to the API endpoint

	for the add inventory operation.

	Typically these are written to a http.Request.
*/
type AddInventoryParams struct {

	/* AddInventoryRequestBody.

	   List of items to add to Sandbox inventory.
	*/
	AddInventoryRequestBody *fba_inventory_models.AddInventoryRequest

	/* XAmznIdempotencyToken.

	   A unique token/requestId provided with each call to ensure idempotency.
	*/
	XAmznIdempotencyToken string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add inventory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddInventoryParams) WithDefaults() *AddInventoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add inventory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddInventoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add inventory params
func (o *AddInventoryParams) WithTimeout(timeout time.Duration) *AddInventoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add inventory params
func (o *AddInventoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add inventory params
func (o *AddInventoryParams) WithContext(ctx context.Context) *AddInventoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add inventory params
func (o *AddInventoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add inventory params
func (o *AddInventoryParams) WithHTTPClient(client *http.Client) *AddInventoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add inventory params
func (o *AddInventoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddInventoryRequestBody adds the addInventoryRequestBody to the add inventory params
func (o *AddInventoryParams) WithAddInventoryRequestBody(addInventoryRequestBody *fba_inventory_models.AddInventoryRequest) *AddInventoryParams {
	o.SetAddInventoryRequestBody(addInventoryRequestBody)
	return o
}

// SetAddInventoryRequestBody adds the addInventoryRequestBody to the add inventory params
func (o *AddInventoryParams) SetAddInventoryRequestBody(addInventoryRequestBody *fba_inventory_models.AddInventoryRequest) {
	o.AddInventoryRequestBody = addInventoryRequestBody
}

// WithXAmznIdempotencyToken adds the xAmznIdempotencyToken to the add inventory params
func (o *AddInventoryParams) WithXAmznIdempotencyToken(xAmznIdempotencyToken string) *AddInventoryParams {
	o.SetXAmznIdempotencyToken(xAmznIdempotencyToken)
	return o
}

// SetXAmznIdempotencyToken adds the xAmznIdempotencyToken to the add inventory params
func (o *AddInventoryParams) SetXAmznIdempotencyToken(xAmznIdempotencyToken string) {
	o.XAmznIdempotencyToken = xAmznIdempotencyToken
}

// WriteToRequest writes these params to a swagger request
func (o *AddInventoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.AddInventoryRequestBody != nil {
		if err := r.SetBodyParam(o.AddInventoryRequestBody); err != nil {
			return err
		}
	}

	// header param x-amzn-idempotency-token
	if err := r.SetHeaderParam("x-amzn-idempotency-token", o.XAmznIdempotencyToken); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
