// Code generated by go-swagger; DO NOT EDIT.

package fba_inventory_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ReservedQuantity The quantity of reserved inventory.
//
// swagger:model ReservedQuantity
type ReservedQuantity struct {

	// The number of units that have been sidelined at the fulfillment center for additional processing.
	FcProcessingQuantity int64 `json:"fcProcessingQuantity,omitempty"`

	// The number of units reserved for customer orders.
	PendingCustomerOrderQuantity int64 `json:"pendingCustomerOrderQuantity,omitempty"`

	// The number of units being transferred from one fulfillment center to another.
	PendingTransshipmentQuantity int64 `json:"pendingTransshipmentQuantity,omitempty"`

	// The total number of units in Amazon's fulfillment network that are currently being picked, packed, and shipped; or are sidelined for measurement, sampling, or other internal processes.
	TotalReservedQuantity int64 `json:"totalReservedQuantity,omitempty"`
}

// Validate validates this reserved quantity
func (m *ReservedQuantity) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this reserved quantity based on context it is used
func (m *ReservedQuantity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReservedQuantity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReservedQuantity) UnmarshalBinary(b []byte) error {
	var res ReservedQuantity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
