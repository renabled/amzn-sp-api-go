// Code generated by go-swagger; DO NOT EDIT.

package fba_inbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetShipmentsParams creates a new GetShipmentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetShipmentsParams() *GetShipmentsParams {
	return &GetShipmentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetShipmentsParamsWithTimeout creates a new GetShipmentsParams object
// with the ability to set a timeout on a request.
func NewGetShipmentsParamsWithTimeout(timeout time.Duration) *GetShipmentsParams {
	return &GetShipmentsParams{
		timeout: timeout,
	}
}

// NewGetShipmentsParamsWithContext creates a new GetShipmentsParams object
// with the ability to set a context for a request.
func NewGetShipmentsParamsWithContext(ctx context.Context) *GetShipmentsParams {
	return &GetShipmentsParams{
		Context: ctx,
	}
}

// NewGetShipmentsParamsWithHTTPClient creates a new GetShipmentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetShipmentsParamsWithHTTPClient(client *http.Client) *GetShipmentsParams {
	return &GetShipmentsParams{
		HTTPClient: client,
	}
}

/* GetShipmentsParams contains all the parameters to send to the API endpoint
   for the get shipments operation.

   Typically these are written to a http.Request.
*/
type GetShipmentsParams struct {

	/* LastUpdatedAfter.

	   A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller.

	   Format: date-time
	*/
	LastUpdatedAfter *strfmt.DateTime

	/* LastUpdatedBefore.

	   A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller.

	   Format: date-time
	*/
	LastUpdatedBefore *strfmt.DateTime

	/* MarketplaceID.

	   A marketplace identifier. Specifies the marketplace where the product would be stored.
	*/
	MarketplaceID string

	/* NextToken.

	   A string token returned in the response to your previous request.
	*/
	NextToken *string

	/* QueryType.

	   Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request.
	*/
	QueryType string

	/* ShipmentIDList.

	   A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned.
	*/
	ShipmentIDList []string

	/* ShipmentStatusList.

	   A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify.
	*/
	ShipmentStatusList []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get shipments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShipmentsParams) WithDefaults() *GetShipmentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get shipments params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShipmentsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get shipments params
func (o *GetShipmentsParams) WithTimeout(timeout time.Duration) *GetShipmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get shipments params
func (o *GetShipmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get shipments params
func (o *GetShipmentsParams) WithContext(ctx context.Context) *GetShipmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get shipments params
func (o *GetShipmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get shipments params
func (o *GetShipmentsParams) WithHTTPClient(client *http.Client) *GetShipmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get shipments params
func (o *GetShipmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLastUpdatedAfter adds the lastUpdatedAfter to the get shipments params
func (o *GetShipmentsParams) WithLastUpdatedAfter(lastUpdatedAfter *strfmt.DateTime) *GetShipmentsParams {
	o.SetLastUpdatedAfter(lastUpdatedAfter)
	return o
}

// SetLastUpdatedAfter adds the lastUpdatedAfter to the get shipments params
func (o *GetShipmentsParams) SetLastUpdatedAfter(lastUpdatedAfter *strfmt.DateTime) {
	o.LastUpdatedAfter = lastUpdatedAfter
}

// WithLastUpdatedBefore adds the lastUpdatedBefore to the get shipments params
func (o *GetShipmentsParams) WithLastUpdatedBefore(lastUpdatedBefore *strfmt.DateTime) *GetShipmentsParams {
	o.SetLastUpdatedBefore(lastUpdatedBefore)
	return o
}

// SetLastUpdatedBefore adds the lastUpdatedBefore to the get shipments params
func (o *GetShipmentsParams) SetLastUpdatedBefore(lastUpdatedBefore *strfmt.DateTime) {
	o.LastUpdatedBefore = lastUpdatedBefore
}

// WithMarketplaceID adds the marketplaceID to the get shipments params
func (o *GetShipmentsParams) WithMarketplaceID(marketplaceID string) *GetShipmentsParams {
	o.SetMarketplaceID(marketplaceID)
	return o
}

// SetMarketplaceID adds the marketplaceId to the get shipments params
func (o *GetShipmentsParams) SetMarketplaceID(marketplaceID string) {
	o.MarketplaceID = marketplaceID
}

// WithNextToken adds the nextToken to the get shipments params
func (o *GetShipmentsParams) WithNextToken(nextToken *string) *GetShipmentsParams {
	o.SetNextToken(nextToken)
	return o
}

// SetNextToken adds the nextToken to the get shipments params
func (o *GetShipmentsParams) SetNextToken(nextToken *string) {
	o.NextToken = nextToken
}

// WithQueryType adds the queryType to the get shipments params
func (o *GetShipmentsParams) WithQueryType(queryType string) *GetShipmentsParams {
	o.SetQueryType(queryType)
	return o
}

// SetQueryType adds the queryType to the get shipments params
func (o *GetShipmentsParams) SetQueryType(queryType string) {
	o.QueryType = queryType
}

// WithShipmentIDList adds the shipmentIDList to the get shipments params
func (o *GetShipmentsParams) WithShipmentIDList(shipmentIDList []string) *GetShipmentsParams {
	o.SetShipmentIDList(shipmentIDList)
	return o
}

// SetShipmentIDList adds the shipmentIdList to the get shipments params
func (o *GetShipmentsParams) SetShipmentIDList(shipmentIDList []string) {
	o.ShipmentIDList = shipmentIDList
}

// WithShipmentStatusList adds the shipmentStatusList to the get shipments params
func (o *GetShipmentsParams) WithShipmentStatusList(shipmentStatusList []string) *GetShipmentsParams {
	o.SetShipmentStatusList(shipmentStatusList)
	return o
}

// SetShipmentStatusList adds the shipmentStatusList to the get shipments params
func (o *GetShipmentsParams) SetShipmentStatusList(shipmentStatusList []string) {
	o.ShipmentStatusList = shipmentStatusList
}

// WriteToRequest writes these params to a swagger request
func (o *GetShipmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LastUpdatedAfter != nil {

		// query param LastUpdatedAfter
		var qrLastUpdatedAfter strfmt.DateTime

		if o.LastUpdatedAfter != nil {
			qrLastUpdatedAfter = *o.LastUpdatedAfter
		}
		qLastUpdatedAfter := qrLastUpdatedAfter.String()
		if qLastUpdatedAfter != "" {

			if err := r.SetQueryParam("LastUpdatedAfter", qLastUpdatedAfter); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedBefore != nil {

		// query param LastUpdatedBefore
		var qrLastUpdatedBefore strfmt.DateTime

		if o.LastUpdatedBefore != nil {
			qrLastUpdatedBefore = *o.LastUpdatedBefore
		}
		qLastUpdatedBefore := qrLastUpdatedBefore.String()
		if qLastUpdatedBefore != "" {

			if err := r.SetQueryParam("LastUpdatedBefore", qLastUpdatedBefore); err != nil {
				return err
			}
		}
	}

	// query param MarketplaceId
	qrMarketplaceID := o.MarketplaceID
	qMarketplaceID := qrMarketplaceID
	if qMarketplaceID != "" {

		if err := r.SetQueryParam("MarketplaceId", qMarketplaceID); err != nil {
			return err
		}
	}

	if o.NextToken != nil {

		// query param NextToken
		var qrNextToken string

		if o.NextToken != nil {
			qrNextToken = *o.NextToken
		}
		qNextToken := qrNextToken
		if qNextToken != "" {

			if err := r.SetQueryParam("NextToken", qNextToken); err != nil {
				return err
			}
		}
	}

	// query param QueryType
	qrQueryType := o.QueryType
	qQueryType := qrQueryType
	if qQueryType != "" {

		if err := r.SetQueryParam("QueryType", qQueryType); err != nil {
			return err
		}
	}

	if o.ShipmentIDList != nil {

		// binding items for ShipmentIdList
		joinedShipmentIDList := o.bindParamShipmentIDList(reg)

		// query array param ShipmentIdList
		if err := r.SetQueryParam("ShipmentIdList", joinedShipmentIDList...); err != nil {
			return err
		}
	}

	if o.ShipmentStatusList != nil {

		// binding items for ShipmentStatusList
		joinedShipmentStatusList := o.bindParamShipmentStatusList(reg)

		// query array param ShipmentStatusList
		if err := r.SetQueryParam("ShipmentStatusList", joinedShipmentStatusList...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetShipments binds the parameter ShipmentIdList
func (o *GetShipmentsParams) bindParamShipmentIDList(formats strfmt.Registry) []string {
	shipmentIDListIR := o.ShipmentIDList

	var shipmentIDListIC []string
	for _, shipmentIDListIIR := range shipmentIDListIR { // explode []string

		shipmentIDListIIV := shipmentIDListIIR // string as string
		shipmentIDListIC = append(shipmentIDListIC, shipmentIDListIIV)
	}

	// items.CollectionFormat: ""
	shipmentIDListIS := swag.JoinByFormat(shipmentIDListIC, "")

	return shipmentIDListIS
}

// bindParamGetShipments binds the parameter ShipmentStatusList
func (o *GetShipmentsParams) bindParamShipmentStatusList(formats strfmt.Registry) []string {
	shipmentStatusListIR := o.ShipmentStatusList

	var shipmentStatusListIC []string
	for _, shipmentStatusListIIR := range shipmentStatusListIR { // explode []string

		shipmentStatusListIIV := shipmentStatusListIIR // string as string
		shipmentStatusListIC = append(shipmentStatusListIC, shipmentStatusListIIV)
	}

	// items.CollectionFormat: ""
	shipmentStatusListIS := swag.JoinByFormat(shipmentStatusListIC, "")

	return shipmentStatusListIS
}
