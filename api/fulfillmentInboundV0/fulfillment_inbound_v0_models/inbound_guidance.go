// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InboundGuidance Specific inbound guidance for an item.
//
// swagger:model InboundGuidance
type InboundGuidance string

func NewInboundGuidance(value InboundGuidance) *InboundGuidance {
	return &value
}

// Pointer returns a pointer to a freshly-allocated InboundGuidance.
func (m InboundGuidance) Pointer() *InboundGuidance {
	return &m
}

const (

	// InboundGuidanceInboundNotRecommended captures enum value "InboundNotRecommended"
	InboundGuidanceInboundNotRecommended InboundGuidance = "InboundNotRecommended"

	// InboundGuidanceInboundOK captures enum value "InboundOK"
	InboundGuidanceInboundOK InboundGuidance = "InboundOK"
)

// for schema
var inboundGuidanceEnum []interface{}

func init() {
	var res []InboundGuidance
	if err := json.Unmarshal([]byte(`["InboundNotRecommended","InboundOK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inboundGuidanceEnum = append(inboundGuidanceEnum, v)
	}
}

func (m InboundGuidance) validateInboundGuidanceEnum(path, location string, value InboundGuidance) error {
	if err := validate.EnumCase(path, location, value, inboundGuidanceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this inbound guidance
func (m InboundGuidance) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInboundGuidanceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this inbound guidance based on context it is used
func (m InboundGuidance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
