// Code generated by go-swagger; DO NOT EDIT.

package catalog_items_2020_12_01_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ItemSummaryByMarketplace Summary details of an Amazon catalog item for the indicated Amazon marketplace.
//
// swagger:model ItemSummaryByMarketplace
type ItemSummaryByMarketplace struct {

	// Name of the brand associated with an Amazon catalog item.
	BrandName string `json:"brandName,omitempty"`

	// Identifier of the browse node associated with an Amazon catalog item.
	BrowseNode string `json:"browseNode,omitempty"`

	// Name of the color associated with an Amazon catalog item.
	ColorName string `json:"colorName,omitempty"`

	// Name, or title, associated with an Amazon catalog item.
	ItemName string `json:"itemName,omitempty"`

	// Name of the manufacturer associated with an Amazon catalog item.
	Manufacturer string `json:"manufacturer,omitempty"`

	// Amazon marketplace identifier.
	// Required: true
	MarketplaceID *string `json:"marketplaceId"`

	// Model number associated with an Amazon catalog item.
	ModelNumber string `json:"modelNumber,omitempty"`

	// Name of the size associated with an Amazon catalog item.
	SizeName string `json:"sizeName,omitempty"`

	// Name of the style associated with an Amazon catalog item.
	StyleName string `json:"styleName,omitempty"`
}

// Validate validates this item summary by marketplace
func (m *ItemSummaryByMarketplace) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMarketplaceID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ItemSummaryByMarketplace) validateMarketplaceID(formats strfmt.Registry) error {

	if err := validate.Required("marketplaceId", "body", m.MarketplaceID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this item summary by marketplace based on context it is used
func (m *ItemSummaryByMarketplace) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ItemSummaryByMarketplace) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ItemSummaryByMarketplace) UnmarshalBinary(b []byte) error {
	var res ItemSummaryByMarketplace
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
