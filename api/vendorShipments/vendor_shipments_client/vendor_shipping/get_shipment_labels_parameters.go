// Code generated by go-swagger; DO NOT EDIT.

package vendor_shipping

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetShipmentLabelsParams creates a new GetShipmentLabelsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetShipmentLabelsParams() *GetShipmentLabelsParams {
	return &GetShipmentLabelsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetShipmentLabelsParamsWithTimeout creates a new GetShipmentLabelsParams object
// with the ability to set a timeout on a request.
func NewGetShipmentLabelsParamsWithTimeout(timeout time.Duration) *GetShipmentLabelsParams {
	return &GetShipmentLabelsParams{
		timeout: timeout,
	}
}

// NewGetShipmentLabelsParamsWithContext creates a new GetShipmentLabelsParams object
// with the ability to set a context for a request.
func NewGetShipmentLabelsParamsWithContext(ctx context.Context) *GetShipmentLabelsParams {
	return &GetShipmentLabelsParams{
		Context: ctx,
	}
}

// NewGetShipmentLabelsParamsWithHTTPClient creates a new GetShipmentLabelsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetShipmentLabelsParamsWithHTTPClient(client *http.Client) *GetShipmentLabelsParams {
	return &GetShipmentLabelsParams{
		HTTPClient: client,
	}
}

/*
GetShipmentLabelsParams contains all the parameters to send to the API endpoint

	for the get shipment labels operation.

	Typically these are written to a http.Request.
*/
type GetShipmentLabelsParams struct {

	/* BuyerReferenceNumber.

	   Get transport labels by passing Buyer Reference Number to retreive the corresponding transport label.
	*/
	BuyerReferenceNumber *string

	/* LabelCreatedAfter.

	   transport Labels that became available after this timestamp will be included in the result. Must be in ISO-8601 date/time format.

	   Format: date-time
	*/
	LabelCreatedAfter *strfmt.DateTime

	/* LabelcreatedBefore.

	   transport Labels that became available before this timestamp will be included in the result. Must be in ISO-8601 date/time format.

	   Format: date-time
	*/
	LabelcreatedBefore *strfmt.DateTime

	/* Limit.

	   The limit to the number of records returned. Default value is 50 records.

	   Format: int64
	*/
	Limit *int64

	/* NextToken.

	   Used for pagination when there are more transport label than the specified result size limit.
	*/
	NextToken *string

	/* SellerWarehouseCode.

	   Get Shipping labels based Vendor Warehouse code. This value should be same as 'shipFromParty.partyId' in the Shipment.
	*/
	SellerWarehouseCode *string

	/* SortOrder.

	   Sort in ascending or descending order by transport label creation date.
	*/
	SortOrder *string

	/* VendorShipmentIdentifier.

	   Get transport labels by passing Vendor Shipment ID to retreive the corresponding transport label.
	*/
	VendorShipmentIdentifier *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get shipment labels params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShipmentLabelsParams) WithDefaults() *GetShipmentLabelsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get shipment labels params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetShipmentLabelsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get shipment labels params
func (o *GetShipmentLabelsParams) WithTimeout(timeout time.Duration) *GetShipmentLabelsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get shipment labels params
func (o *GetShipmentLabelsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get shipment labels params
func (o *GetShipmentLabelsParams) WithContext(ctx context.Context) *GetShipmentLabelsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get shipment labels params
func (o *GetShipmentLabelsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get shipment labels params
func (o *GetShipmentLabelsParams) WithHTTPClient(client *http.Client) *GetShipmentLabelsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get shipment labels params
func (o *GetShipmentLabelsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBuyerReferenceNumber adds the buyerReferenceNumber to the get shipment labels params
func (o *GetShipmentLabelsParams) WithBuyerReferenceNumber(buyerReferenceNumber *string) *GetShipmentLabelsParams {
	o.SetBuyerReferenceNumber(buyerReferenceNumber)
	return o
}

// SetBuyerReferenceNumber adds the buyerReferenceNumber to the get shipment labels params
func (o *GetShipmentLabelsParams) SetBuyerReferenceNumber(buyerReferenceNumber *string) {
	o.BuyerReferenceNumber = buyerReferenceNumber
}

// WithLabelCreatedAfter adds the labelCreatedAfter to the get shipment labels params
func (o *GetShipmentLabelsParams) WithLabelCreatedAfter(labelCreatedAfter *strfmt.DateTime) *GetShipmentLabelsParams {
	o.SetLabelCreatedAfter(labelCreatedAfter)
	return o
}

// SetLabelCreatedAfter adds the labelCreatedAfter to the get shipment labels params
func (o *GetShipmentLabelsParams) SetLabelCreatedAfter(labelCreatedAfter *strfmt.DateTime) {
	o.LabelCreatedAfter = labelCreatedAfter
}

// WithLabelcreatedBefore adds the labelcreatedBefore to the get shipment labels params
func (o *GetShipmentLabelsParams) WithLabelcreatedBefore(labelcreatedBefore *strfmt.DateTime) *GetShipmentLabelsParams {
	o.SetLabelcreatedBefore(labelcreatedBefore)
	return o
}

// SetLabelcreatedBefore adds the labelcreatedBefore to the get shipment labels params
func (o *GetShipmentLabelsParams) SetLabelcreatedBefore(labelcreatedBefore *strfmt.DateTime) {
	o.LabelcreatedBefore = labelcreatedBefore
}

// WithLimit adds the limit to the get shipment labels params
func (o *GetShipmentLabelsParams) WithLimit(limit *int64) *GetShipmentLabelsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get shipment labels params
func (o *GetShipmentLabelsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithNextToken adds the nextToken to the get shipment labels params
func (o *GetShipmentLabelsParams) WithNextToken(nextToken *string) *GetShipmentLabelsParams {
	o.SetNextToken(nextToken)
	return o
}

// SetNextToken adds the nextToken to the get shipment labels params
func (o *GetShipmentLabelsParams) SetNextToken(nextToken *string) {
	o.NextToken = nextToken
}

// WithSellerWarehouseCode adds the sellerWarehouseCode to the get shipment labels params
func (o *GetShipmentLabelsParams) WithSellerWarehouseCode(sellerWarehouseCode *string) *GetShipmentLabelsParams {
	o.SetSellerWarehouseCode(sellerWarehouseCode)
	return o
}

// SetSellerWarehouseCode adds the sellerWarehouseCode to the get shipment labels params
func (o *GetShipmentLabelsParams) SetSellerWarehouseCode(sellerWarehouseCode *string) {
	o.SellerWarehouseCode = sellerWarehouseCode
}

// WithSortOrder adds the sortOrder to the get shipment labels params
func (o *GetShipmentLabelsParams) WithSortOrder(sortOrder *string) *GetShipmentLabelsParams {
	o.SetSortOrder(sortOrder)
	return o
}

// SetSortOrder adds the sortOrder to the get shipment labels params
func (o *GetShipmentLabelsParams) SetSortOrder(sortOrder *string) {
	o.SortOrder = sortOrder
}

// WithVendorShipmentIdentifier adds the vendorShipmentIdentifier to the get shipment labels params
func (o *GetShipmentLabelsParams) WithVendorShipmentIdentifier(vendorShipmentIdentifier *string) *GetShipmentLabelsParams {
	o.SetVendorShipmentIdentifier(vendorShipmentIdentifier)
	return o
}

// SetVendorShipmentIdentifier adds the vendorShipmentIdentifier to the get shipment labels params
func (o *GetShipmentLabelsParams) SetVendorShipmentIdentifier(vendorShipmentIdentifier *string) {
	o.VendorShipmentIdentifier = vendorShipmentIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *GetShipmentLabelsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BuyerReferenceNumber != nil {

		// query param buyerReferenceNumber
		var qrBuyerReferenceNumber string

		if o.BuyerReferenceNumber != nil {
			qrBuyerReferenceNumber = *o.BuyerReferenceNumber
		}
		qBuyerReferenceNumber := qrBuyerReferenceNumber
		if qBuyerReferenceNumber != "" {

			if err := r.SetQueryParam("buyerReferenceNumber", qBuyerReferenceNumber); err != nil {
				return err
			}
		}
	}

	if o.LabelCreatedAfter != nil {

		// query param labelCreatedAfter
		var qrLabelCreatedAfter strfmt.DateTime

		if o.LabelCreatedAfter != nil {
			qrLabelCreatedAfter = *o.LabelCreatedAfter
		}
		qLabelCreatedAfter := qrLabelCreatedAfter.String()
		if qLabelCreatedAfter != "" {

			if err := r.SetQueryParam("labelCreatedAfter", qLabelCreatedAfter); err != nil {
				return err
			}
		}
	}

	if o.LabelcreatedBefore != nil {

		// query param labelcreatedBefore
		var qrLabelcreatedBefore strfmt.DateTime

		if o.LabelcreatedBefore != nil {
			qrLabelcreatedBefore = *o.LabelcreatedBefore
		}
		qLabelcreatedBefore := qrLabelcreatedBefore.String()
		if qLabelcreatedBefore != "" {

			if err := r.SetQueryParam("labelcreatedBefore", qLabelcreatedBefore); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.NextToken != nil {

		// query param nextToken
		var qrNextToken string

		if o.NextToken != nil {
			qrNextToken = *o.NextToken
		}
		qNextToken := qrNextToken
		if qNextToken != "" {

			if err := r.SetQueryParam("nextToken", qNextToken); err != nil {
				return err
			}
		}
	}

	if o.SellerWarehouseCode != nil {

		// query param sellerWarehouseCode
		var qrSellerWarehouseCode string

		if o.SellerWarehouseCode != nil {
			qrSellerWarehouseCode = *o.SellerWarehouseCode
		}
		qSellerWarehouseCode := qrSellerWarehouseCode
		if qSellerWarehouseCode != "" {

			if err := r.SetQueryParam("sellerWarehouseCode", qSellerWarehouseCode); err != nil {
				return err
			}
		}
	}

	if o.SortOrder != nil {

		// query param sortOrder
		var qrSortOrder string

		if o.SortOrder != nil {
			qrSortOrder = *o.SortOrder
		}
		qSortOrder := qrSortOrder
		if qSortOrder != "" {

			if err := r.SetQueryParam("sortOrder", qSortOrder); err != nil {
				return err
			}
		}
	}

	if o.VendorShipmentIdentifier != nil {

		// query param vendorShipmentIdentifier
		var qrVendorShipmentIdentifier string

		if o.VendorShipmentIdentifier != nil {
			qrVendorShipmentIdentifier = *o.VendorShipmentIdentifier
		}
		qVendorShipmentIdentifier := qrVendorShipmentIdentifier
		if qVendorShipmentIdentifier != "" {

			if err := r.SetQueryParam("vendorShipmentIdentifier", qVendorShipmentIdentifier); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
