// Code generated by go-swagger; DO NOT EDIT.

package vendor_shipments_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PurchaseOrderItemDetails Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate.
//
// swagger:model PurchaseOrderItemDetails
type PurchaseOrderItemDetails struct {

	// Maximum retail price of the item being shipped.
	MaximumRetailPrice *Money `json:"maximumRetailPrice,omitempty"`
}

// Validate validates this purchase order item details
func (m *PurchaseOrderItemDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaximumRetailPrice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PurchaseOrderItemDetails) validateMaximumRetailPrice(formats strfmt.Registry) error {
	if swag.IsZero(m.MaximumRetailPrice) { // not required
		return nil
	}

	if m.MaximumRetailPrice != nil {
		if err := m.MaximumRetailPrice.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("maximumRetailPrice")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("maximumRetailPrice")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this purchase order item details based on the context it is used
func (m *PurchaseOrderItemDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMaximumRetailPrice(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PurchaseOrderItemDetails) contextValidateMaximumRetailPrice(ctx context.Context, formats strfmt.Registry) error {

	if m.MaximumRetailPrice != nil {
		if err := m.MaximumRetailPrice.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("maximumRetailPrice")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("maximumRetailPrice")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PurchaseOrderItemDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PurchaseOrderItemDetails) UnmarshalBinary(b []byte) error {
	var res PurchaseOrderItemDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
