// Code generated by go-swagger; DO NOT EDIT.

package vendor_shipments_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContainerIdentification container identification
//
// swagger:model ContainerIdentification
type ContainerIdentification struct {

	// Container identification number that adheres to the definition of the container identification type.
	// Required: true
	ContainerIdentificationNumber *string `json:"containerIdentificationNumber"`

	// The container identification type.
	// Required: true
	// Enum: [SSCC AMZNCC GTIN BPS CID]
	ContainerIdentificationType *string `json:"containerIdentificationType"`
}

// Validate validates this container identification
func (m *ContainerIdentification) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContainerIdentificationNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateContainerIdentificationType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContainerIdentification) validateContainerIdentificationNumber(formats strfmt.Registry) error {

	if err := validate.Required("containerIdentificationNumber", "body", m.ContainerIdentificationNumber); err != nil {
		return err
	}

	return nil
}

var containerIdentificationTypeContainerIdentificationTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SSCC","AMZNCC","GTIN","BPS","CID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		containerIdentificationTypeContainerIdentificationTypePropEnum = append(containerIdentificationTypeContainerIdentificationTypePropEnum, v)
	}
}

const (

	// ContainerIdentificationContainerIdentificationTypeSSCC captures enum value "SSCC"
	ContainerIdentificationContainerIdentificationTypeSSCC string = "SSCC"

	// ContainerIdentificationContainerIdentificationTypeAMZNCC captures enum value "AMZNCC"
	ContainerIdentificationContainerIdentificationTypeAMZNCC string = "AMZNCC"

	// ContainerIdentificationContainerIdentificationTypeGTIN captures enum value "GTIN"
	ContainerIdentificationContainerIdentificationTypeGTIN string = "GTIN"

	// ContainerIdentificationContainerIdentificationTypeBPS captures enum value "BPS"
	ContainerIdentificationContainerIdentificationTypeBPS string = "BPS"

	// ContainerIdentificationContainerIdentificationTypeCID captures enum value "CID"
	ContainerIdentificationContainerIdentificationTypeCID string = "CID"
)

// prop value enum
func (m *ContainerIdentification) validateContainerIdentificationTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, containerIdentificationTypeContainerIdentificationTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ContainerIdentification) validateContainerIdentificationType(formats strfmt.Registry) error {

	if err := validate.Required("containerIdentificationType", "body", m.ContainerIdentificationType); err != nil {
		return err
	}

	// value enum
	if err := m.validateContainerIdentificationTypeEnum("containerIdentificationType", "body", *m.ContainerIdentificationType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this container identification based on context it is used
func (m *ContainerIdentification) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContainerIdentification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContainerIdentification) UnmarshalBinary(b []byte) error {
	var res ContainerIdentification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
