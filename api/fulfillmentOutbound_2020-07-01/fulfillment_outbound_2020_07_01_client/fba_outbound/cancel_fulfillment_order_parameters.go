// Code generated by go-swagger; DO NOT EDIT.

package fba_outbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCancelFulfillmentOrderParams creates a new CancelFulfillmentOrderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCancelFulfillmentOrderParams() *CancelFulfillmentOrderParams {
	return &CancelFulfillmentOrderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCancelFulfillmentOrderParamsWithTimeout creates a new CancelFulfillmentOrderParams object
// with the ability to set a timeout on a request.
func NewCancelFulfillmentOrderParamsWithTimeout(timeout time.Duration) *CancelFulfillmentOrderParams {
	return &CancelFulfillmentOrderParams{
		timeout: timeout,
	}
}

// NewCancelFulfillmentOrderParamsWithContext creates a new CancelFulfillmentOrderParams object
// with the ability to set a context for a request.
func NewCancelFulfillmentOrderParamsWithContext(ctx context.Context) *CancelFulfillmentOrderParams {
	return &CancelFulfillmentOrderParams{
		Context: ctx,
	}
}

// NewCancelFulfillmentOrderParamsWithHTTPClient creates a new CancelFulfillmentOrderParams object
// with the ability to set a custom HTTPClient for a request.
func NewCancelFulfillmentOrderParamsWithHTTPClient(client *http.Client) *CancelFulfillmentOrderParams {
	return &CancelFulfillmentOrderParams{
		HTTPClient: client,
	}
}

/*
CancelFulfillmentOrderParams contains all the parameters to send to the API endpoint

	for the cancel fulfillment order operation.

	Typically these are written to a http.Request.
*/
type CancelFulfillmentOrderParams struct {

	/* SellerFulfillmentOrderID.

	   The identifier assigned to the item by the seller when the fulfillment order was created.
	*/
	SellerFulfillmentOrderID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cancel fulfillment order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CancelFulfillmentOrderParams) WithDefaults() *CancelFulfillmentOrderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cancel fulfillment order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CancelFulfillmentOrderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) WithTimeout(timeout time.Duration) *CancelFulfillmentOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) WithContext(ctx context.Context) *CancelFulfillmentOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) WithHTTPClient(client *http.Client) *CancelFulfillmentOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSellerFulfillmentOrderID adds the sellerFulfillmentOrderID to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) WithSellerFulfillmentOrderID(sellerFulfillmentOrderID string) *CancelFulfillmentOrderParams {
	o.SetSellerFulfillmentOrderID(sellerFulfillmentOrderID)
	return o
}

// SetSellerFulfillmentOrderID adds the sellerFulfillmentOrderId to the cancel fulfillment order params
func (o *CancelFulfillmentOrderParams) SetSellerFulfillmentOrderID(sellerFulfillmentOrderID string) {
	o.SellerFulfillmentOrderID = sellerFulfillmentOrderID
}

// WriteToRequest writes these params to a swagger request
func (o *CancelFulfillmentOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param sellerFulfillmentOrderId
	if err := r.SetPathParam("sellerFulfillmentOrderId", o.SellerFulfillmentOrderID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
