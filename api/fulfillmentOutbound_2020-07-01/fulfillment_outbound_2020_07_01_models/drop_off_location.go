// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_outbound_2020_07_01_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DropOffLocation The preferred location to leave packages at the destination address.
//
// swagger:model DropOffLocation
type DropOffLocation struct {

	// Additional information about the drop-off location that can vary depending on the type of drop-off location specified in the `type` field.
	// If the `type` is set to `FALLBACK_NEIGHBOR_DELIVERY`, the `attributes` object should include the exact keys `neighborName` and `houseNumber` to provide the name and house number of the designated neighbor.
	Attributes map[string]string `json:"attributes,omitempty"`

	// Specifies the preferred location to leave the package at the destination address.
	// Required: true
	// Enum: [FRONT_DOOR DELIVERY_BOX GAS_METER_BOX BICYCLE_BASKET GARAGE RECEPTIONIST FALLBACK_NEIGHBOR_DELIVERY DO_NOT_LEAVE_UNATTENDED]
	Type *string `json:"type"`
}

// Validate validates this drop off location
func (m *DropOffLocation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dropOffLocationTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FRONT_DOOR","DELIVERY_BOX","GAS_METER_BOX","BICYCLE_BASKET","GARAGE","RECEPTIONIST","FALLBACK_NEIGHBOR_DELIVERY","DO_NOT_LEAVE_UNATTENDED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dropOffLocationTypeTypePropEnum = append(dropOffLocationTypeTypePropEnum, v)
	}
}

const (

	// DropOffLocationTypeFRONTDOOR captures enum value "FRONT_DOOR"
	DropOffLocationTypeFRONTDOOR string = "FRONT_DOOR"

	// DropOffLocationTypeDELIVERYBOX captures enum value "DELIVERY_BOX"
	DropOffLocationTypeDELIVERYBOX string = "DELIVERY_BOX"

	// DropOffLocationTypeGASMETERBOX captures enum value "GAS_METER_BOX"
	DropOffLocationTypeGASMETERBOX string = "GAS_METER_BOX"

	// DropOffLocationTypeBICYCLEBASKET captures enum value "BICYCLE_BASKET"
	DropOffLocationTypeBICYCLEBASKET string = "BICYCLE_BASKET"

	// DropOffLocationTypeGARAGE captures enum value "GARAGE"
	DropOffLocationTypeGARAGE string = "GARAGE"

	// DropOffLocationTypeRECEPTIONIST captures enum value "RECEPTIONIST"
	DropOffLocationTypeRECEPTIONIST string = "RECEPTIONIST"

	// DropOffLocationTypeFALLBACKNEIGHBORDELIVERY captures enum value "FALLBACK_NEIGHBOR_DELIVERY"
	DropOffLocationTypeFALLBACKNEIGHBORDELIVERY string = "FALLBACK_NEIGHBOR_DELIVERY"

	// DropOffLocationTypeDONOTLEAVEUNATTENDED captures enum value "DO_NOT_LEAVE_UNATTENDED"
	DropOffLocationTypeDONOTLEAVEUNATTENDED string = "DO_NOT_LEAVE_UNATTENDED"
)

// prop value enum
func (m *DropOffLocation) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dropOffLocationTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DropOffLocation) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this drop off location based on context it is used
func (m *DropOffLocation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DropOffLocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DropOffLocation) UnmarshalBinary(b []byte) error {
	var res DropOffLocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
