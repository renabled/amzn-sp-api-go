// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_outbound_2020_07_01_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProductIdentifier Product identifier input that locates a product for MCF.
//
// swagger:model ProductIdentifier
type ProductIdentifier struct {

	// The merchant SKU for the product.
	// Required: true
	// Max Length: 50
	MerchantSku *string `json:"merchantSku"`
}

// Validate validates this product identifier
func (m *ProductIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMerchantSku(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductIdentifier) validateMerchantSku(formats strfmt.Registry) error {

	if err := validate.Required("merchantSku", "body", m.MerchantSku); err != nil {
		return err
	}

	if err := validate.MaxLength("merchantSku", "body", *m.MerchantSku, 50); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this product identifier based on context it is used
func (m *ProductIdentifier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProductIdentifier) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductIdentifier) UnmarshalBinary(b []byte) error {
	var res ProductIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
