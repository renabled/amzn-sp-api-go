// Code generated by go-swagger; DO NOT EDIT.

package awd

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/awd_2024-05-09/awd_2024_05_09_models"
)

// ListInboundShipmentsReader is a Reader for the ListInboundShipments structure.
type ListInboundShipmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInboundShipmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListInboundShipmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListInboundShipmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListInboundShipmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListInboundShipmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewListInboundShipmentsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewListInboundShipmentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListInboundShipmentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListInboundShipmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewListInboundShipmentsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListInboundShipmentsOK creates a ListInboundShipmentsOK with default headers values
func NewListInboundShipmentsOK() *ListInboundShipmentsOK {
	return &ListInboundShipmentsOK{}
}

/*
ListInboundShipmentsOK describes a response with status code 200, with default header values.

The 200 response for `listInboundShipments`.
*/
type ListInboundShipmentsOK struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ShipmentListing
}

// IsSuccess returns true when this list inbound shipments o k response has a 2xx status code
func (o *ListInboundShipmentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list inbound shipments o k response has a 3xx status code
func (o *ListInboundShipmentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments o k response has a 4xx status code
func (o *ListInboundShipmentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list inbound shipments o k response has a 5xx status code
func (o *ListInboundShipmentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments o k response a status code equal to that given
func (o *ListInboundShipmentsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListInboundShipmentsOK) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsOK  %+v", 200, o.Payload)
}

func (o *ListInboundShipmentsOK) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsOK  %+v", 200, o.Payload)
}

func (o *ListInboundShipmentsOK) GetPayload() *awd_2024_05_09_models.ShipmentListing {
	return o.Payload
}

func (o *ListInboundShipmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ShipmentListing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsBadRequest creates a ListInboundShipmentsBadRequest with default headers values
func NewListInboundShipmentsBadRequest() *ListInboundShipmentsBadRequest {
	return &ListInboundShipmentsBadRequest{}
}

/*
ListInboundShipmentsBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type ListInboundShipmentsBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments bad request response has a 2xx status code
func (o *ListInboundShipmentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments bad request response has a 3xx status code
func (o *ListInboundShipmentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments bad request response has a 4xx status code
func (o *ListInboundShipmentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list inbound shipments bad request response has a 5xx status code
func (o *ListInboundShipmentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments bad request response a status code equal to that given
func (o *ListInboundShipmentsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListInboundShipmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListInboundShipmentsBadRequest) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListInboundShipmentsBadRequest) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsForbidden creates a ListInboundShipmentsForbidden with default headers values
func NewListInboundShipmentsForbidden() *ListInboundShipmentsForbidden {
	return &ListInboundShipmentsForbidden{}
}

/*
ListInboundShipmentsForbidden describes a response with status code 403, with default header values.

Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type ListInboundShipmentsForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments forbidden response has a 2xx status code
func (o *ListInboundShipmentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments forbidden response has a 3xx status code
func (o *ListInboundShipmentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments forbidden response has a 4xx status code
func (o *ListInboundShipmentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list inbound shipments forbidden response has a 5xx status code
func (o *ListInboundShipmentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments forbidden response a status code equal to that given
func (o *ListInboundShipmentsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListInboundShipmentsForbidden) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsForbidden  %+v", 403, o.Payload)
}

func (o *ListInboundShipmentsForbidden) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsForbidden  %+v", 403, o.Payload)
}

func (o *ListInboundShipmentsForbidden) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsNotFound creates a ListInboundShipmentsNotFound with default headers values
func NewListInboundShipmentsNotFound() *ListInboundShipmentsNotFound {
	return &ListInboundShipmentsNotFound{}
}

/*
ListInboundShipmentsNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type ListInboundShipmentsNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments not found response has a 2xx status code
func (o *ListInboundShipmentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments not found response has a 3xx status code
func (o *ListInboundShipmentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments not found response has a 4xx status code
func (o *ListInboundShipmentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list inbound shipments not found response has a 5xx status code
func (o *ListInboundShipmentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments not found response a status code equal to that given
func (o *ListInboundShipmentsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListInboundShipmentsNotFound) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsNotFound  %+v", 404, o.Payload)
}

func (o *ListInboundShipmentsNotFound) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsNotFound  %+v", 404, o.Payload)
}

func (o *ListInboundShipmentsNotFound) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsRequestEntityTooLarge creates a ListInboundShipmentsRequestEntityTooLarge with default headers values
func NewListInboundShipmentsRequestEntityTooLarge() *ListInboundShipmentsRequestEntityTooLarge {
	return &ListInboundShipmentsRequestEntityTooLarge{}
}

/*
ListInboundShipmentsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request size exceeded the maximum accepted size.
*/
type ListInboundShipmentsRequestEntityTooLarge struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments request entity too large response has a 2xx status code
func (o *ListInboundShipmentsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments request entity too large response has a 3xx status code
func (o *ListInboundShipmentsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments request entity too large response has a 4xx status code
func (o *ListInboundShipmentsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this list inbound shipments request entity too large response has a 5xx status code
func (o *ListInboundShipmentsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments request entity too large response a status code equal to that given
func (o *ListInboundShipmentsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *ListInboundShipmentsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *ListInboundShipmentsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *ListInboundShipmentsRequestEntityTooLarge) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsUnsupportedMediaType creates a ListInboundShipmentsUnsupportedMediaType with default headers values
func NewListInboundShipmentsUnsupportedMediaType() *ListInboundShipmentsUnsupportedMediaType {
	return &ListInboundShipmentsUnsupportedMediaType{}
}

/*
ListInboundShipmentsUnsupportedMediaType describes a response with status code 415, with default header values.

The request payload is in an unsupported format.
*/
type ListInboundShipmentsUnsupportedMediaType struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments unsupported media type response has a 2xx status code
func (o *ListInboundShipmentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments unsupported media type response has a 3xx status code
func (o *ListInboundShipmentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments unsupported media type response has a 4xx status code
func (o *ListInboundShipmentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this list inbound shipments unsupported media type response has a 5xx status code
func (o *ListInboundShipmentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments unsupported media type response a status code equal to that given
func (o *ListInboundShipmentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *ListInboundShipmentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ListInboundShipmentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ListInboundShipmentsUnsupportedMediaType) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsTooManyRequests creates a ListInboundShipmentsTooManyRequests with default headers values
func NewListInboundShipmentsTooManyRequests() *ListInboundShipmentsTooManyRequests {
	return &ListInboundShipmentsTooManyRequests{}
}

/*
ListInboundShipmentsTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type ListInboundShipmentsTooManyRequests struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments too many requests response has a 2xx status code
func (o *ListInboundShipmentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments too many requests response has a 3xx status code
func (o *ListInboundShipmentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments too many requests response has a 4xx status code
func (o *ListInboundShipmentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list inbound shipments too many requests response has a 5xx status code
func (o *ListInboundShipmentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list inbound shipments too many requests response a status code equal to that given
func (o *ListInboundShipmentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListInboundShipmentsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListInboundShipmentsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListInboundShipmentsTooManyRequests) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsInternalServerError creates a ListInboundShipmentsInternalServerError with default headers values
func NewListInboundShipmentsInternalServerError() *ListInboundShipmentsInternalServerError {
	return &ListInboundShipmentsInternalServerError{}
}

/*
ListInboundShipmentsInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type ListInboundShipmentsInternalServerError struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments internal server error response has a 2xx status code
func (o *ListInboundShipmentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments internal server error response has a 3xx status code
func (o *ListInboundShipmentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments internal server error response has a 4xx status code
func (o *ListInboundShipmentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list inbound shipments internal server error response has a 5xx status code
func (o *ListInboundShipmentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list inbound shipments internal server error response a status code equal to that given
func (o *ListInboundShipmentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ListInboundShipmentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListInboundShipmentsInternalServerError) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListInboundShipmentsInternalServerError) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInboundShipmentsServiceUnavailable creates a ListInboundShipmentsServiceUnavailable with default headers values
func NewListInboundShipmentsServiceUnavailable() *ListInboundShipmentsServiceUnavailable {
	return &ListInboundShipmentsServiceUnavailable{}
}

/*
ListInboundShipmentsServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type ListInboundShipmentsServiceUnavailable struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this list inbound shipments service unavailable response has a 2xx status code
func (o *ListInboundShipmentsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list inbound shipments service unavailable response has a 3xx status code
func (o *ListInboundShipmentsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list inbound shipments service unavailable response has a 4xx status code
func (o *ListInboundShipmentsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this list inbound shipments service unavailable response has a 5xx status code
func (o *ListInboundShipmentsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this list inbound shipments service unavailable response a status code equal to that given
func (o *ListInboundShipmentsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *ListInboundShipmentsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListInboundShipmentsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments][%d] listInboundShipmentsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListInboundShipmentsServiceUnavailable) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *ListInboundShipmentsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
