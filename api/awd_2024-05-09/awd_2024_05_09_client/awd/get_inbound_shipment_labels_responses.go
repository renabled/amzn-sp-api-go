// Code generated by go-swagger; DO NOT EDIT.

package awd

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/awd_2024-05-09/awd_2024_05_09_models"
)

// GetInboundShipmentLabelsReader is a Reader for the GetInboundShipmentLabels structure.
type GetInboundShipmentLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInboundShipmentLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInboundShipmentLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInboundShipmentLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInboundShipmentLabelsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInboundShipmentLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetInboundShipmentLabelsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetInboundShipmentLabelsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInboundShipmentLabelsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInboundShipmentLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetInboundShipmentLabelsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInboundShipmentLabelsOK creates a GetInboundShipmentLabelsOK with default headers values
func NewGetInboundShipmentLabelsOK() *GetInboundShipmentLabelsOK {
	return &GetInboundShipmentLabelsOK{}
}

/*
GetInboundShipmentLabelsOK describes a response with status code 200, with default header values.

The 200 response for `getInboundShipmentLabels`.
*/
type GetInboundShipmentLabelsOK struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ShipmentLabels
}

// IsSuccess returns true when this get inbound shipment labels o k response has a 2xx status code
func (o *GetInboundShipmentLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get inbound shipment labels o k response has a 3xx status code
func (o *GetInboundShipmentLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels o k response has a 4xx status code
func (o *GetInboundShipmentLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get inbound shipment labels o k response has a 5xx status code
func (o *GetInboundShipmentLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels o k response a status code equal to that given
func (o *GetInboundShipmentLabelsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetInboundShipmentLabelsOK) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsOK  %+v", 200, o.Payload)
}

func (o *GetInboundShipmentLabelsOK) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsOK  %+v", 200, o.Payload)
}

func (o *GetInboundShipmentLabelsOK) GetPayload() *awd_2024_05_09_models.ShipmentLabels {
	return o.Payload
}

func (o *GetInboundShipmentLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ShipmentLabels)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsBadRequest creates a GetInboundShipmentLabelsBadRequest with default headers values
func NewGetInboundShipmentLabelsBadRequest() *GetInboundShipmentLabelsBadRequest {
	return &GetInboundShipmentLabelsBadRequest{}
}

/*
GetInboundShipmentLabelsBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type GetInboundShipmentLabelsBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels bad request response has a 2xx status code
func (o *GetInboundShipmentLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels bad request response has a 3xx status code
func (o *GetInboundShipmentLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels bad request response has a 4xx status code
func (o *GetInboundShipmentLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inbound shipment labels bad request response has a 5xx status code
func (o *GetInboundShipmentLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels bad request response a status code equal to that given
func (o *GetInboundShipmentLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetInboundShipmentLabelsBadRequest) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInboundShipmentLabelsBadRequest) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsBadRequest  %+v", 400, o.Payload)
}

func (o *GetInboundShipmentLabelsBadRequest) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsForbidden creates a GetInboundShipmentLabelsForbidden with default headers values
func NewGetInboundShipmentLabelsForbidden() *GetInboundShipmentLabelsForbidden {
	return &GetInboundShipmentLabelsForbidden{}
}

/*
GetInboundShipmentLabelsForbidden describes a response with status code 403, with default header values.

Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type GetInboundShipmentLabelsForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels forbidden response has a 2xx status code
func (o *GetInboundShipmentLabelsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels forbidden response has a 3xx status code
func (o *GetInboundShipmentLabelsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels forbidden response has a 4xx status code
func (o *GetInboundShipmentLabelsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inbound shipment labels forbidden response has a 5xx status code
func (o *GetInboundShipmentLabelsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels forbidden response a status code equal to that given
func (o *GetInboundShipmentLabelsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetInboundShipmentLabelsForbidden) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsForbidden  %+v", 403, o.Payload)
}

func (o *GetInboundShipmentLabelsForbidden) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsForbidden  %+v", 403, o.Payload)
}

func (o *GetInboundShipmentLabelsForbidden) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsNotFound creates a GetInboundShipmentLabelsNotFound with default headers values
func NewGetInboundShipmentLabelsNotFound() *GetInboundShipmentLabelsNotFound {
	return &GetInboundShipmentLabelsNotFound{}
}

/*
GetInboundShipmentLabelsNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type GetInboundShipmentLabelsNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels not found response has a 2xx status code
func (o *GetInboundShipmentLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels not found response has a 3xx status code
func (o *GetInboundShipmentLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels not found response has a 4xx status code
func (o *GetInboundShipmentLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inbound shipment labels not found response has a 5xx status code
func (o *GetInboundShipmentLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels not found response a status code equal to that given
func (o *GetInboundShipmentLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetInboundShipmentLabelsNotFound) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsNotFound  %+v", 404, o.Payload)
}

func (o *GetInboundShipmentLabelsNotFound) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsNotFound  %+v", 404, o.Payload)
}

func (o *GetInboundShipmentLabelsNotFound) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsRequestEntityTooLarge creates a GetInboundShipmentLabelsRequestEntityTooLarge with default headers values
func NewGetInboundShipmentLabelsRequestEntityTooLarge() *GetInboundShipmentLabelsRequestEntityTooLarge {
	return &GetInboundShipmentLabelsRequestEntityTooLarge{}
}

/*
GetInboundShipmentLabelsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request size exceeded the maximum accepted size.
*/
type GetInboundShipmentLabelsRequestEntityTooLarge struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels request entity too large response has a 2xx status code
func (o *GetInboundShipmentLabelsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels request entity too large response has a 3xx status code
func (o *GetInboundShipmentLabelsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels request entity too large response has a 4xx status code
func (o *GetInboundShipmentLabelsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inbound shipment labels request entity too large response has a 5xx status code
func (o *GetInboundShipmentLabelsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels request entity too large response a status code equal to that given
func (o *GetInboundShipmentLabelsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetInboundShipmentLabelsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetInboundShipmentLabelsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetInboundShipmentLabelsRequestEntityTooLarge) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsUnsupportedMediaType creates a GetInboundShipmentLabelsUnsupportedMediaType with default headers values
func NewGetInboundShipmentLabelsUnsupportedMediaType() *GetInboundShipmentLabelsUnsupportedMediaType {
	return &GetInboundShipmentLabelsUnsupportedMediaType{}
}

/*
GetInboundShipmentLabelsUnsupportedMediaType describes a response with status code 415, with default header values.

The request payload is in an unsupported format.
*/
type GetInboundShipmentLabelsUnsupportedMediaType struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels unsupported media type response has a 2xx status code
func (o *GetInboundShipmentLabelsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels unsupported media type response has a 3xx status code
func (o *GetInboundShipmentLabelsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels unsupported media type response has a 4xx status code
func (o *GetInboundShipmentLabelsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inbound shipment labels unsupported media type response has a 5xx status code
func (o *GetInboundShipmentLabelsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels unsupported media type response a status code equal to that given
func (o *GetInboundShipmentLabelsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetInboundShipmentLabelsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetInboundShipmentLabelsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetInboundShipmentLabelsUnsupportedMediaType) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsTooManyRequests creates a GetInboundShipmentLabelsTooManyRequests with default headers values
func NewGetInboundShipmentLabelsTooManyRequests() *GetInboundShipmentLabelsTooManyRequests {
	return &GetInboundShipmentLabelsTooManyRequests{}
}

/*
GetInboundShipmentLabelsTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type GetInboundShipmentLabelsTooManyRequests struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels too many requests response has a 2xx status code
func (o *GetInboundShipmentLabelsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels too many requests response has a 3xx status code
func (o *GetInboundShipmentLabelsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels too many requests response has a 4xx status code
func (o *GetInboundShipmentLabelsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inbound shipment labels too many requests response has a 5xx status code
func (o *GetInboundShipmentLabelsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get inbound shipment labels too many requests response a status code equal to that given
func (o *GetInboundShipmentLabelsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetInboundShipmentLabelsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInboundShipmentLabelsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInboundShipmentLabelsTooManyRequests) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsInternalServerError creates a GetInboundShipmentLabelsInternalServerError with default headers values
func NewGetInboundShipmentLabelsInternalServerError() *GetInboundShipmentLabelsInternalServerError {
	return &GetInboundShipmentLabelsInternalServerError{}
}

/*
GetInboundShipmentLabelsInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type GetInboundShipmentLabelsInternalServerError struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels internal server error response has a 2xx status code
func (o *GetInboundShipmentLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels internal server error response has a 3xx status code
func (o *GetInboundShipmentLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels internal server error response has a 4xx status code
func (o *GetInboundShipmentLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get inbound shipment labels internal server error response has a 5xx status code
func (o *GetInboundShipmentLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get inbound shipment labels internal server error response a status code equal to that given
func (o *GetInboundShipmentLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetInboundShipmentLabelsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInboundShipmentLabelsInternalServerError) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInboundShipmentLabelsInternalServerError) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInboundShipmentLabelsServiceUnavailable creates a GetInboundShipmentLabelsServiceUnavailable with default headers values
func NewGetInboundShipmentLabelsServiceUnavailable() *GetInboundShipmentLabelsServiceUnavailable {
	return &GetInboundShipmentLabelsServiceUnavailable{}
}

/*
GetInboundShipmentLabelsServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type GetInboundShipmentLabelsServiceUnavailable struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *awd_2024_05_09_models.ErrorList
}

// IsSuccess returns true when this get inbound shipment labels service unavailable response has a 2xx status code
func (o *GetInboundShipmentLabelsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inbound shipment labels service unavailable response has a 3xx status code
func (o *GetInboundShipmentLabelsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inbound shipment labels service unavailable response has a 4xx status code
func (o *GetInboundShipmentLabelsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get inbound shipment labels service unavailable response has a 5xx status code
func (o *GetInboundShipmentLabelsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get inbound shipment labels service unavailable response a status code equal to that given
func (o *GetInboundShipmentLabelsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetInboundShipmentLabelsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetInboundShipmentLabelsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /awd/2024-05-09/inboundShipments/{shipmentId}/labels][%d] getInboundShipmentLabelsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetInboundShipmentLabelsServiceUnavailable) GetPayload() *awd_2024_05_09_models.ErrorList {
	return o.Payload
}

func (o *GetInboundShipmentLabelsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(awd_2024_05_09_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
