// Code generated by go-swagger; DO NOT EDIT.

package awd_2024_05_09_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Address Shipping address that represents the origin or destination location.
// Example: {"addressLine1":"address_1","addressLine2":"address_2","addressLine3":"address_3","city":"Seattle","countryCode":"US","county":"Washington","district":"District1","name":"address_name","phoneNumber":"+14155552671","postalCode":"123456","stateOrRegion":"Washington"}
//
// swagger:model Address
type Address struct {

	// First line of the address text.
	// Required: true
	AddressLine1 *string `json:"addressLine1"`

	// Optional second line of the address text.
	AddressLine2 string `json:"addressLine2,omitempty"`

	// Optional third line of the address text.
	AddressLine3 string `json:"addressLine3,omitempty"`

	// Optional city where this address is located.
	City string `json:"city,omitempty"`

	// Two-digit, ISO 3166-1 alpha-2 formatted country code where this address is located.
	// Required: true
	CountryCode *string `json:"countryCode"`

	// Optional county where this address is located.
	// Example: Washington
	County string `json:"county,omitempty"`

	// Optional district where this address is located.
	District string `json:"district,omitempty"`

	// Name of the person, business, or institution at this address.
	// Required: true
	Name *string `json:"name"`

	// Optional E.164-formatted phone number for an available contact at this address.
	// Example: +14155552671
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Optional postal code where this address is located.
	PostalCode string `json:"postalCode,omitempty"`

	// State or region where this address is located. Note that this is contextual to the specified country code.
	// Required: true
	StateOrRegion *string `json:"stateOrRegion"`
}

// Validate validates this address
func (m *Address) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddressLine1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountryCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStateOrRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Address) validateAddressLine1(formats strfmt.Registry) error {

	if err := validate.Required("addressLine1", "body", m.AddressLine1); err != nil {
		return err
	}

	return nil
}

func (m *Address) validateCountryCode(formats strfmt.Registry) error {

	if err := validate.Required("countryCode", "body", m.CountryCode); err != nil {
		return err
	}

	return nil
}

func (m *Address) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *Address) validateStateOrRegion(formats strfmt.Registry) error {

	if err := validate.Required("stateOrRegion", "body", m.StateOrRegion); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this address based on context it is used
func (m *Address) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Address) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Address) UnmarshalBinary(b []byte) error {
	var res Address
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
