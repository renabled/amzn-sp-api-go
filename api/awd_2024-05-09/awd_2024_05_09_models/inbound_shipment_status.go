// Code generated by go-swagger; DO NOT EDIT.

package awd_2024_05_09_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InboundShipmentStatus Possible shipment statuses used by shipments.
//
// swagger:model InboundShipmentStatus
type InboundShipmentStatus string

func NewInboundShipmentStatus(value InboundShipmentStatus) *InboundShipmentStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated InboundShipmentStatus.
func (m InboundShipmentStatus) Pointer() *InboundShipmentStatus {
	return &m
}

const (

	// InboundShipmentStatusCREATED captures enum value "CREATED"
	InboundShipmentStatusCREATED InboundShipmentStatus = "CREATED"

	// InboundShipmentStatusSHIPPED captures enum value "SHIPPED"
	InboundShipmentStatusSHIPPED InboundShipmentStatus = "SHIPPED"

	// InboundShipmentStatusINTRANSIT captures enum value "IN_TRANSIT"
	InboundShipmentStatusINTRANSIT InboundShipmentStatus = "IN_TRANSIT"

	// InboundShipmentStatusRECEIVING captures enum value "RECEIVING"
	InboundShipmentStatusRECEIVING InboundShipmentStatus = "RECEIVING"

	// InboundShipmentStatusDELIVERED captures enum value "DELIVERED"
	InboundShipmentStatusDELIVERED InboundShipmentStatus = "DELIVERED"

	// InboundShipmentStatusCLOSED captures enum value "CLOSED"
	InboundShipmentStatusCLOSED InboundShipmentStatus = "CLOSED"

	// InboundShipmentStatusCANCELLED captures enum value "CANCELLED"
	InboundShipmentStatusCANCELLED InboundShipmentStatus = "CANCELLED"
)

// for schema
var inboundShipmentStatusEnum []interface{}

func init() {
	var res []InboundShipmentStatus
	if err := json.Unmarshal([]byte(`["CREATED","SHIPPED","IN_TRANSIT","RECEIVING","DELIVERED","CLOSED","CANCELLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inboundShipmentStatusEnum = append(inboundShipmentStatusEnum, v)
	}
}

func (m InboundShipmentStatus) validateInboundShipmentStatusEnum(path, location string, value InboundShipmentStatus) error {
	if err := validate.EnumCase(path, location, value, inboundShipmentStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this inbound shipment status
func (m InboundShipmentStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInboundShipmentStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this inbound shipment status based on context it is used
func (m InboundShipmentStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
