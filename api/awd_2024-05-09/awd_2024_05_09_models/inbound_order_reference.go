// Code generated by go-swagger; DO NOT EDIT.

package awd_2024_05_09_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InboundOrderReference A response that contains the reference identifiers for the newly created or updated inbound order. Consists of an order ID and version.
//
// swagger:model InboundOrderReference
type InboundOrderReference struct {

	// Order ID of the inbound order.
	// Required: true
	OrderID *string `json:"orderId"`

	// Order version of the inbound order.
	// Required: true
	OrderVersion *string `json:"orderVersion"`
}

// Validate validates this inbound order reference
func (m *InboundOrderReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrderVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InboundOrderReference) validateOrderID(formats strfmt.Registry) error {

	if err := validate.Required("orderId", "body", m.OrderID); err != nil {
		return err
	}

	return nil
}

func (m *InboundOrderReference) validateOrderVersion(formats strfmt.Registry) error {

	if err := validate.Required("orderVersion", "body", m.OrderVersion); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inbound order reference based on context it is used
func (m *InboundOrderReference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InboundOrderReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InboundOrderReference) UnmarshalBinary(b []byte) error {
	var res InboundOrderReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
