// Code generated by go-swagger; DO NOT EDIT.

package orders_v0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/ordersV0/orders_v0_models"
)

// GetOrderFulfillmentInstructionsReader is a Reader for the GetOrderFulfillmentInstructions structure.
type GetOrderFulfillmentInstructionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrderFulfillmentInstructionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrderFulfillmentInstructionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrderFulfillmentInstructionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrderFulfillmentInstructionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrderFulfillmentInstructionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOrderFulfillmentInstructionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrderFulfillmentInstructionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOrderFulfillmentInstructionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrderFulfillmentInstructionsOK creates a GetOrderFulfillmentInstructionsOK with default headers values
func NewGetOrderFulfillmentInstructionsOK() *GetOrderFulfillmentInstructionsOK {
	return &GetOrderFulfillmentInstructionsOK{}
}

/*
GetOrderFulfillmentInstructionsOK describes a response with status code 200, with default header values.

Success.
*/
type GetOrderFulfillmentInstructionsOK struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions o k response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get order fulfillment instructions o k response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions o k response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get order fulfillment instructions o k response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get order fulfillment instructions o k response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOrderFulfillmentInstructionsOK) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsOK  %+v", 200, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsOK) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsOK  %+v", 200, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsOK) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderFulfillmentInstructionsBadRequest creates a GetOrderFulfillmentInstructionsBadRequest with default headers values
func NewGetOrderFulfillmentInstructionsBadRequest() *GetOrderFulfillmentInstructionsBadRequest {
	return &GetOrderFulfillmentInstructionsBadRequest{}
}

/*
GetOrderFulfillmentInstructionsBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type GetOrderFulfillmentInstructionsBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions bad request response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order fulfillment instructions bad request response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions bad request response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get order fulfillment instructions bad request response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get order fulfillment instructions bad request response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetOrderFulfillmentInstructionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsBadRequest) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsBadRequest) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderFulfillmentInstructionsForbidden creates a GetOrderFulfillmentInstructionsForbidden with default headers values
func NewGetOrderFulfillmentInstructionsForbidden() *GetOrderFulfillmentInstructionsForbidden {
	return &GetOrderFulfillmentInstructionsForbidden{}
}

/*
GetOrderFulfillmentInstructionsForbidden describes a response with status code 403, with default header values.

Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type GetOrderFulfillmentInstructionsForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions forbidden response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order fulfillment instructions forbidden response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions forbidden response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get order fulfillment instructions forbidden response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get order fulfillment instructions forbidden response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetOrderFulfillmentInstructionsForbidden) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsForbidden) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsForbidden  %+v", 403, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsForbidden) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderFulfillmentInstructionsNotFound creates a GetOrderFulfillmentInstructionsNotFound with default headers values
func NewGetOrderFulfillmentInstructionsNotFound() *GetOrderFulfillmentInstructionsNotFound {
	return &GetOrderFulfillmentInstructionsNotFound{}
}

/*
GetOrderFulfillmentInstructionsNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type GetOrderFulfillmentInstructionsNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions not found response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order fulfillment instructions not found response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions not found response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get order fulfillment instructions not found response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get order fulfillment instructions not found response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOrderFulfillmentInstructionsNotFound) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsNotFound) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsNotFound  %+v", 404, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsNotFound) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderFulfillmentInstructionsTooManyRequests creates a GetOrderFulfillmentInstructionsTooManyRequests with default headers values
func NewGetOrderFulfillmentInstructionsTooManyRequests() *GetOrderFulfillmentInstructionsTooManyRequests {
	return &GetOrderFulfillmentInstructionsTooManyRequests{}
}

/*
GetOrderFulfillmentInstructionsTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type GetOrderFulfillmentInstructionsTooManyRequests struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions too many requests response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order fulfillment instructions too many requests response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions too many requests response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get order fulfillment instructions too many requests response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get order fulfillment instructions too many requests response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOrderFulfillmentInstructionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsTooManyRequests) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderFulfillmentInstructionsInternalServerError creates a GetOrderFulfillmentInstructionsInternalServerError with default headers values
func NewGetOrderFulfillmentInstructionsInternalServerError() *GetOrderFulfillmentInstructionsInternalServerError {
	return &GetOrderFulfillmentInstructionsInternalServerError{}
}

/*
GetOrderFulfillmentInstructionsInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type GetOrderFulfillmentInstructionsInternalServerError struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions internal server error response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order fulfillment instructions internal server error response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions internal server error response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get order fulfillment instructions internal server error response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get order fulfillment instructions internal server error response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOrderFulfillmentInstructionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsInternalServerError) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsInternalServerError) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrderFulfillmentInstructionsServiceUnavailable creates a GetOrderFulfillmentInstructionsServiceUnavailable with default headers values
func NewGetOrderFulfillmentInstructionsServiceUnavailable() *GetOrderFulfillmentInstructionsServiceUnavailable {
	return &GetOrderFulfillmentInstructionsServiceUnavailable{}
}

/*
GetOrderFulfillmentInstructionsServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type GetOrderFulfillmentInstructionsServiceUnavailable struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *orders_v0_models.GetOrderFulfillmentInstructionsResponse
}

// IsSuccess returns true when this get order fulfillment instructions service unavailable response has a 2xx status code
func (o *GetOrderFulfillmentInstructionsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get order fulfillment instructions service unavailable response has a 3xx status code
func (o *GetOrderFulfillmentInstructionsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get order fulfillment instructions service unavailable response has a 4xx status code
func (o *GetOrderFulfillmentInstructionsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get order fulfillment instructions service unavailable response has a 5xx status code
func (o *GetOrderFulfillmentInstructionsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get order fulfillment instructions service unavailable response a status code equal to that given
func (o *GetOrderFulfillmentInstructionsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetOrderFulfillmentInstructionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /orders/v0/orders/{orderId}/fulfillmentInstructions][%d] getOrderFulfillmentInstructionsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetOrderFulfillmentInstructionsServiceUnavailable) GetPayload() *orders_v0_models.GetOrderFulfillmentInstructionsResponse {
	return o.Payload
}

func (o *GetOrderFulfillmentInstructionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(orders_v0_models.GetOrderFulfillmentInstructionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
