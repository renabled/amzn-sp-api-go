// Code generated by go-swagger; DO NOT EDIT.

package orders_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AssociationType The type of association an item has with an order item.
//
// swagger:model AssociationType
type AssociationType string

func NewAssociationType(value AssociationType) *AssociationType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AssociationType.
func (m AssociationType) Pointer() *AssociationType {
	return &m
}

const (

	// AssociationTypeVALUEADDSERVICE captures enum value "VALUE_ADD_SERVICE"
	AssociationTypeVALUEADDSERVICE AssociationType = "VALUE_ADD_SERVICE"
)

// for schema
var associationTypeEnum []interface{}

func init() {
	var res []AssociationType
	if err := json.Unmarshal([]byte(`["VALUE_ADD_SERVICE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		associationTypeEnum = append(associationTypeEnum, v)
	}
}

func (m AssociationType) validateAssociationTypeEnum(path, location string, value AssociationType) error {
	if err := validate.EnumCase(path, location, value, associationTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this association type
func (m AssociationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAssociationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this association type based on context it is used
func (m AssociationType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
