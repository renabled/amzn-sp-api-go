// Code generated by go-swagger; DO NOT EDIT.

package orders_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OtherDeliveryAttributes Miscellaneous delivery attributes associated with the shipping address.
//
// swagger:model OtherDeliveryAttributes
type OtherDeliveryAttributes string

func NewOtherDeliveryAttributes(value OtherDeliveryAttributes) *OtherDeliveryAttributes {
	return &value
}

// Pointer returns a pointer to a freshly-allocated OtherDeliveryAttributes.
func (m OtherDeliveryAttributes) Pointer() *OtherDeliveryAttributes {
	return &m
}

const (

	// OtherDeliveryAttributesHASACCESSPOINT captures enum value "HAS_ACCESS_POINT"
	OtherDeliveryAttributesHASACCESSPOINT OtherDeliveryAttributes = "HAS_ACCESS_POINT"

	// OtherDeliveryAttributesPALLETENABLED captures enum value "PALLET_ENABLED"
	OtherDeliveryAttributesPALLETENABLED OtherDeliveryAttributes = "PALLET_ENABLED"

	// OtherDeliveryAttributesPALLETDISABLED captures enum value "PALLET_DISABLED"
	OtherDeliveryAttributesPALLETDISABLED OtherDeliveryAttributes = "PALLET_DISABLED"
)

// for schema
var otherDeliveryAttributesEnum []interface{}

func init() {
	var res []OtherDeliveryAttributes
	if err := json.Unmarshal([]byte(`["HAS_ACCESS_POINT","PALLET_ENABLED","PALLET_DISABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		otherDeliveryAttributesEnum = append(otherDeliveryAttributesEnum, v)
	}
}

func (m OtherDeliveryAttributes) validateOtherDeliveryAttributesEnum(path, location string, value OtherDeliveryAttributes) error {
	if err := validate.EnumCase(path, location, value, otherDeliveryAttributesEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this other delivery attributes
func (m OtherDeliveryAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOtherDeliveryAttributesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this other delivery attributes based on context it is used
func (m OtherDeliveryAttributes) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
