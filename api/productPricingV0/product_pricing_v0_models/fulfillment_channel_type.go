// Code generated by go-swagger; DO NOT EDIT.

package product_pricing_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// FulfillmentChannelType Indicates whether the item is fulfilled by Amazon or by the seller (merchant).
//
// swagger:model FulfillmentChannelType
type FulfillmentChannelType string

func NewFulfillmentChannelType(value FulfillmentChannelType) *FulfillmentChannelType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated FulfillmentChannelType.
func (m FulfillmentChannelType) Pointer() *FulfillmentChannelType {
	return &m
}

const (

	// FulfillmentChannelTypeAmazon captures enum value "Amazon"
	FulfillmentChannelTypeAmazon FulfillmentChannelType = "Amazon"

	// FulfillmentChannelTypeMerchant captures enum value "Merchant"
	FulfillmentChannelTypeMerchant FulfillmentChannelType = "Merchant"
)

// for schema
var fulfillmentChannelTypeEnum []interface{}

func init() {
	var res []FulfillmentChannelType
	if err := json.Unmarshal([]byte(`["Amazon","Merchant"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fulfillmentChannelTypeEnum = append(fulfillmentChannelTypeEnum, v)
	}
}

func (m FulfillmentChannelType) validateFulfillmentChannelTypeEnum(path, location string, value FulfillmentChannelType) error {
	if err := validate.EnumCase(path, location, value, fulfillmentChannelTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this fulfillment channel type
func (m FulfillmentChannelType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateFulfillmentChannelTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this fulfillment channel type based on context it is used
func (m FulfillmentChannelType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
