// Code generated by go-swagger; DO NOT EDIT.

package product_pricing_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SalesRankType sales rank type
//
// swagger:model SalesRankType
type SalesRankType struct {

	//  Identifies the item category from which the sales rank is taken.
	// Required: true
	ProductCategoryID *string `json:"ProductCategoryId"`

	// The sales rank of the item within the item category.
	// Required: true
	Rank *int32 `json:"Rank"`
}

// Validate validates this sales rank type
func (m *SalesRankType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProductCategoryID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRank(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SalesRankType) validateProductCategoryID(formats strfmt.Registry) error {

	if err := validate.Required("ProductCategoryId", "body", m.ProductCategoryID); err != nil {
		return err
	}

	return nil
}

func (m *SalesRankType) validateRank(formats strfmt.Registry) error {

	if err := validate.Required("Rank", "body", m.Rank); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sales rank type based on context it is used
func (m *SalesRankType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SalesRankType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesRankType) UnmarshalBinary(b []byte) error {
	var res SalesRankType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
