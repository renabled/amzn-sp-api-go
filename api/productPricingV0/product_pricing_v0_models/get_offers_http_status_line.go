// Code generated by go-swagger; DO NOT EDIT.

package product_pricing_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOffersHTTPStatusLine The HTTP status line associated with the response.  For more information, consult [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html).
//
// swagger:model GetOffersHttpStatusLine
type GetOffersHTTPStatusLine struct {

	// The HTTP response Reason-Phase.
	ReasonPhrase string `json:"reasonPhrase,omitempty"`

	// The HTTP response Status Code.
	// Maximum: 599
	// Minimum: 100
	StatusCode int64 `json:"statusCode,omitempty"`
}

// Validate validates this get offers Http status line
func (m *GetOffersHTTPStatusLine) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatusCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetOffersHTTPStatusLine) validateStatusCode(formats strfmt.Registry) error {
	if swag.IsZero(m.StatusCode) { // not required
		return nil
	}

	if err := validate.MinimumInt("statusCode", "body", m.StatusCode, 100, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("statusCode", "body", m.StatusCode, 599, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get offers Http status line based on context it is used
func (m *GetOffersHTTPStatusLine) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetOffersHTTPStatusLine) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetOffersHTTPStatusLine) UnmarshalBinary(b []byte) error {
	var res GetOffersHTTPStatusLine
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
