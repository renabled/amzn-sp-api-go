// Code generated by go-swagger; DO NOT EDIT.

package product_pricing_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// QuantityDiscountType quantity discount type
//
// swagger:model QuantityDiscountType
type QuantityDiscountType string

func NewQuantityDiscountType(value QuantityDiscountType) *QuantityDiscountType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated QuantityDiscountType.
func (m QuantityDiscountType) Pointer() *QuantityDiscountType {
	return &m
}

const (

	// QuantityDiscountTypeQUANTITYDISCOUNT captures enum value "QUANTITY_DISCOUNT"
	QuantityDiscountTypeQUANTITYDISCOUNT QuantityDiscountType = "QUANTITY_DISCOUNT"
)

// for schema
var quantityDiscountTypeEnum []interface{}

func init() {
	var res []QuantityDiscountType
	if err := json.Unmarshal([]byte(`["QUANTITY_DISCOUNT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		quantityDiscountTypeEnum = append(quantityDiscountTypeEnum, v)
	}
}

func (m QuantityDiscountType) validateQuantityDiscountTypeEnum(path, location string, value QuantityDiscountType) error {
	if err := validate.EnumCase(path, location, value, quantityDiscountTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this quantity discount type
func (m QuantityDiscountType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQuantityDiscountTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this quantity discount type based on context it is used
func (m QuantityDiscountType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
