// Code generated by go-swagger; DO NOT EDIT.

package merchant_fulfillment_v0_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DeliveryExperienceOption The delivery confirmation level.
//
// swagger:model DeliveryExperienceOption
type DeliveryExperienceOption string

func NewDeliveryExperienceOption(value DeliveryExperienceOption) *DeliveryExperienceOption {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DeliveryExperienceOption.
func (m DeliveryExperienceOption) Pointer() *DeliveryExperienceOption {
	return &m
}

const (

	// DeliveryExperienceOptionDeliveryConfirmationWithAdultSignature captures enum value "DeliveryConfirmationWithAdultSignature"
	DeliveryExperienceOptionDeliveryConfirmationWithAdultSignature DeliveryExperienceOption = "DeliveryConfirmationWithAdultSignature"

	// DeliveryExperienceOptionDeliveryConfirmationWithSignature captures enum value "DeliveryConfirmationWithSignature"
	DeliveryExperienceOptionDeliveryConfirmationWithSignature DeliveryExperienceOption = "DeliveryConfirmationWithSignature"

	// DeliveryExperienceOptionDeliveryConfirmationWithoutSignature captures enum value "DeliveryConfirmationWithoutSignature"
	DeliveryExperienceOptionDeliveryConfirmationWithoutSignature DeliveryExperienceOption = "DeliveryConfirmationWithoutSignature"

	// DeliveryExperienceOptionNoTracking captures enum value "NoTracking"
	DeliveryExperienceOptionNoTracking DeliveryExperienceOption = "NoTracking"

	// DeliveryExperienceOptionNoPreference captures enum value "NoPreference"
	DeliveryExperienceOptionNoPreference DeliveryExperienceOption = "NoPreference"
)

// for schema
var deliveryExperienceOptionEnum []interface{}

func init() {
	var res []DeliveryExperienceOption
	if err := json.Unmarshal([]byte(`["DeliveryConfirmationWithAdultSignature","DeliveryConfirmationWithSignature","DeliveryConfirmationWithoutSignature","NoTracking","NoPreference"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deliveryExperienceOptionEnum = append(deliveryExperienceOptionEnum, v)
	}
}

func (m DeliveryExperienceOption) validateDeliveryExperienceOptionEnum(path, location string, value DeliveryExperienceOption) error {
	if err := validate.EnumCase(path, location, value, deliveryExperienceOptionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this delivery experience option
func (m DeliveryExperienceOption) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDeliveryExperienceOptionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this delivery experience option based on context it is used
func (m DeliveryExperienceOption) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
