// Code generated by go-swagger; DO NOT EDIT.

package fba_inbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewConfirmPackingOptionParams creates a new ConfirmPackingOptionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewConfirmPackingOptionParams() *ConfirmPackingOptionParams {
	return &ConfirmPackingOptionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewConfirmPackingOptionParamsWithTimeout creates a new ConfirmPackingOptionParams object
// with the ability to set a timeout on a request.
func NewConfirmPackingOptionParamsWithTimeout(timeout time.Duration) *ConfirmPackingOptionParams {
	return &ConfirmPackingOptionParams{
		timeout: timeout,
	}
}

// NewConfirmPackingOptionParamsWithContext creates a new ConfirmPackingOptionParams object
// with the ability to set a context for a request.
func NewConfirmPackingOptionParamsWithContext(ctx context.Context) *ConfirmPackingOptionParams {
	return &ConfirmPackingOptionParams{
		Context: ctx,
	}
}

// NewConfirmPackingOptionParamsWithHTTPClient creates a new ConfirmPackingOptionParams object
// with the ability to set a custom HTTPClient for a request.
func NewConfirmPackingOptionParamsWithHTTPClient(client *http.Client) *ConfirmPackingOptionParams {
	return &ConfirmPackingOptionParams{
		HTTPClient: client,
	}
}

/*
ConfirmPackingOptionParams contains all the parameters to send to the API endpoint

	for the confirm packing option operation.

	Typically these are written to a http.Request.
*/
type ConfirmPackingOptionParams struct {

	/* InboundPlanID.

	   Identifier to an inbound plan.
	*/
	InboundPlanID string

	/* PackingOptionID.

	   Identifier to a packing option.
	*/
	PackingOptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the confirm packing option params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConfirmPackingOptionParams) WithDefaults() *ConfirmPackingOptionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the confirm packing option params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConfirmPackingOptionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the confirm packing option params
func (o *ConfirmPackingOptionParams) WithTimeout(timeout time.Duration) *ConfirmPackingOptionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the confirm packing option params
func (o *ConfirmPackingOptionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the confirm packing option params
func (o *ConfirmPackingOptionParams) WithContext(ctx context.Context) *ConfirmPackingOptionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the confirm packing option params
func (o *ConfirmPackingOptionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the confirm packing option params
func (o *ConfirmPackingOptionParams) WithHTTPClient(client *http.Client) *ConfirmPackingOptionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the confirm packing option params
func (o *ConfirmPackingOptionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInboundPlanID adds the inboundPlanID to the confirm packing option params
func (o *ConfirmPackingOptionParams) WithInboundPlanID(inboundPlanID string) *ConfirmPackingOptionParams {
	o.SetInboundPlanID(inboundPlanID)
	return o
}

// SetInboundPlanID adds the inboundPlanId to the confirm packing option params
func (o *ConfirmPackingOptionParams) SetInboundPlanID(inboundPlanID string) {
	o.InboundPlanID = inboundPlanID
}

// WithPackingOptionID adds the packingOptionID to the confirm packing option params
func (o *ConfirmPackingOptionParams) WithPackingOptionID(packingOptionID string) *ConfirmPackingOptionParams {
	o.SetPackingOptionID(packingOptionID)
	return o
}

// SetPackingOptionID adds the packingOptionId to the confirm packing option params
func (o *ConfirmPackingOptionParams) SetPackingOptionID(packingOptionID string) {
	o.PackingOptionID = packingOptionID
}

// WriteToRequest writes these params to a swagger request
func (o *ConfirmPackingOptionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param inboundPlanId
	if err := r.SetPathParam("inboundPlanId", o.InboundPlanID); err != nil {
		return err
	}

	// path param packingOptionId
	if err := r.SetPathParam("packingOptionId", o.PackingOptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
