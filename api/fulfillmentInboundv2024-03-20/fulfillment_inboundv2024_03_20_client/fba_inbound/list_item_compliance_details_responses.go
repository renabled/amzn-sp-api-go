// Code generated by go-swagger; DO NOT EDIT.

package fba_inbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/fulfillmentInboundv2024-03-20/fulfillment_inboundv2024_03_20_models"
)

// ListItemComplianceDetailsReader is a Reader for the ListItemComplianceDetails structure.
type ListItemComplianceDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListItemComplianceDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListItemComplianceDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListItemComplianceDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListItemComplianceDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListItemComplianceDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewListItemComplianceDetailsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewListItemComplianceDetailsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListItemComplianceDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListItemComplianceDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewListItemComplianceDetailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListItemComplianceDetailsOK creates a ListItemComplianceDetailsOK with default headers values
func NewListItemComplianceDetailsOK() *ListItemComplianceDetailsOK {
	return &ListItemComplianceDetailsOK{}
}

/*
ListItemComplianceDetailsOK describes a response with status code 200, with default header values.

ListItemComplianceDetails 200 response
*/
type ListItemComplianceDetailsOK struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ListItemComplianceDetailsResponse
}

// IsSuccess returns true when this list item compliance details o k response has a 2xx status code
func (o *ListItemComplianceDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list item compliance details o k response has a 3xx status code
func (o *ListItemComplianceDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details o k response has a 4xx status code
func (o *ListItemComplianceDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list item compliance details o k response has a 5xx status code
func (o *ListItemComplianceDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details o k response a status code equal to that given
func (o *ListItemComplianceDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListItemComplianceDetailsOK) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsOK  %+v", 200, o.Payload)
}

func (o *ListItemComplianceDetailsOK) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsOK  %+v", 200, o.Payload)
}

func (o *ListItemComplianceDetailsOK) GetPayload() *fulfillment_inboundv2024_03_20_models.ListItemComplianceDetailsResponse {
	return o.Payload
}

func (o *ListItemComplianceDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ListItemComplianceDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsBadRequest creates a ListItemComplianceDetailsBadRequest with default headers values
func NewListItemComplianceDetailsBadRequest() *ListItemComplianceDetailsBadRequest {
	return &ListItemComplianceDetailsBadRequest{}
}

/*
ListItemComplianceDetailsBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type ListItemComplianceDetailsBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details bad request response has a 2xx status code
func (o *ListItemComplianceDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details bad request response has a 3xx status code
func (o *ListItemComplianceDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details bad request response has a 4xx status code
func (o *ListItemComplianceDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list item compliance details bad request response has a 5xx status code
func (o *ListItemComplianceDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details bad request response a status code equal to that given
func (o *ListItemComplianceDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListItemComplianceDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ListItemComplianceDetailsBadRequest) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsBadRequest  %+v", 400, o.Payload)
}

func (o *ListItemComplianceDetailsBadRequest) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsForbidden creates a ListItemComplianceDetailsForbidden with default headers values
func NewListItemComplianceDetailsForbidden() *ListItemComplianceDetailsForbidden {
	return &ListItemComplianceDetailsForbidden{}
}

/*
ListItemComplianceDetailsForbidden describes a response with status code 403, with default header values.

Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type ListItemComplianceDetailsForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details forbidden response has a 2xx status code
func (o *ListItemComplianceDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details forbidden response has a 3xx status code
func (o *ListItemComplianceDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details forbidden response has a 4xx status code
func (o *ListItemComplianceDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list item compliance details forbidden response has a 5xx status code
func (o *ListItemComplianceDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details forbidden response a status code equal to that given
func (o *ListItemComplianceDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListItemComplianceDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ListItemComplianceDetailsForbidden) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsForbidden  %+v", 403, o.Payload)
}

func (o *ListItemComplianceDetailsForbidden) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsNotFound creates a ListItemComplianceDetailsNotFound with default headers values
func NewListItemComplianceDetailsNotFound() *ListItemComplianceDetailsNotFound {
	return &ListItemComplianceDetailsNotFound{}
}

/*
ListItemComplianceDetailsNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type ListItemComplianceDetailsNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details not found response has a 2xx status code
func (o *ListItemComplianceDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details not found response has a 3xx status code
func (o *ListItemComplianceDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details not found response has a 4xx status code
func (o *ListItemComplianceDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list item compliance details not found response has a 5xx status code
func (o *ListItemComplianceDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details not found response a status code equal to that given
func (o *ListItemComplianceDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListItemComplianceDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ListItemComplianceDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsNotFound  %+v", 404, o.Payload)
}

func (o *ListItemComplianceDetailsNotFound) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsRequestEntityTooLarge creates a ListItemComplianceDetailsRequestEntityTooLarge with default headers values
func NewListItemComplianceDetailsRequestEntityTooLarge() *ListItemComplianceDetailsRequestEntityTooLarge {
	return &ListItemComplianceDetailsRequestEntityTooLarge{}
}

/*
ListItemComplianceDetailsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request size exceeded the maximum accepted size.
*/
type ListItemComplianceDetailsRequestEntityTooLarge struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details request entity too large response has a 2xx status code
func (o *ListItemComplianceDetailsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details request entity too large response has a 3xx status code
func (o *ListItemComplianceDetailsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details request entity too large response has a 4xx status code
func (o *ListItemComplianceDetailsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this list item compliance details request entity too large response has a 5xx status code
func (o *ListItemComplianceDetailsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details request entity too large response a status code equal to that given
func (o *ListItemComplianceDetailsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *ListItemComplianceDetailsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *ListItemComplianceDetailsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *ListItemComplianceDetailsRequestEntityTooLarge) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsUnsupportedMediaType creates a ListItemComplianceDetailsUnsupportedMediaType with default headers values
func NewListItemComplianceDetailsUnsupportedMediaType() *ListItemComplianceDetailsUnsupportedMediaType {
	return &ListItemComplianceDetailsUnsupportedMediaType{}
}

/*
ListItemComplianceDetailsUnsupportedMediaType describes a response with status code 415, with default header values.

The request payload is in an unsupported format.
*/
type ListItemComplianceDetailsUnsupportedMediaType struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details unsupported media type response has a 2xx status code
func (o *ListItemComplianceDetailsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details unsupported media type response has a 3xx status code
func (o *ListItemComplianceDetailsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details unsupported media type response has a 4xx status code
func (o *ListItemComplianceDetailsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this list item compliance details unsupported media type response has a 5xx status code
func (o *ListItemComplianceDetailsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details unsupported media type response a status code equal to that given
func (o *ListItemComplianceDetailsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *ListItemComplianceDetailsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ListItemComplianceDetailsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *ListItemComplianceDetailsUnsupportedMediaType) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsTooManyRequests creates a ListItemComplianceDetailsTooManyRequests with default headers values
func NewListItemComplianceDetailsTooManyRequests() *ListItemComplianceDetailsTooManyRequests {
	return &ListItemComplianceDetailsTooManyRequests{}
}

/*
ListItemComplianceDetailsTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type ListItemComplianceDetailsTooManyRequests struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details too many requests response has a 2xx status code
func (o *ListItemComplianceDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details too many requests response has a 3xx status code
func (o *ListItemComplianceDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details too many requests response has a 4xx status code
func (o *ListItemComplianceDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list item compliance details too many requests response has a 5xx status code
func (o *ListItemComplianceDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list item compliance details too many requests response a status code equal to that given
func (o *ListItemComplianceDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListItemComplianceDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListItemComplianceDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListItemComplianceDetailsTooManyRequests) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsInternalServerError creates a ListItemComplianceDetailsInternalServerError with default headers values
func NewListItemComplianceDetailsInternalServerError() *ListItemComplianceDetailsInternalServerError {
	return &ListItemComplianceDetailsInternalServerError{}
}

/*
ListItemComplianceDetailsInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type ListItemComplianceDetailsInternalServerError struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details internal server error response has a 2xx status code
func (o *ListItemComplianceDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details internal server error response has a 3xx status code
func (o *ListItemComplianceDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details internal server error response has a 4xx status code
func (o *ListItemComplianceDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list item compliance details internal server error response has a 5xx status code
func (o *ListItemComplianceDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list item compliance details internal server error response a status code equal to that given
func (o *ListItemComplianceDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ListItemComplianceDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListItemComplianceDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListItemComplianceDetailsInternalServerError) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListItemComplianceDetailsServiceUnavailable creates a ListItemComplianceDetailsServiceUnavailable with default headers values
func NewListItemComplianceDetailsServiceUnavailable() *ListItemComplianceDetailsServiceUnavailable {
	return &ListItemComplianceDetailsServiceUnavailable{}
}

/*
ListItemComplianceDetailsServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type ListItemComplianceDetailsServiceUnavailable struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inboundv2024_03_20_models.ErrorList
}

// IsSuccess returns true when this list item compliance details service unavailable response has a 2xx status code
func (o *ListItemComplianceDetailsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list item compliance details service unavailable response has a 3xx status code
func (o *ListItemComplianceDetailsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list item compliance details service unavailable response has a 4xx status code
func (o *ListItemComplianceDetailsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this list item compliance details service unavailable response has a 5xx status code
func (o *ListItemComplianceDetailsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this list item compliance details service unavailable response a status code equal to that given
func (o *ListItemComplianceDetailsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *ListItemComplianceDetailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListItemComplianceDetailsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /inbound/fba/2024-03-20/items/compliance][%d] listItemComplianceDetailsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ListItemComplianceDetailsServiceUnavailable) GetPayload() *fulfillment_inboundv2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *ListItemComplianceDetailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inboundv2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
