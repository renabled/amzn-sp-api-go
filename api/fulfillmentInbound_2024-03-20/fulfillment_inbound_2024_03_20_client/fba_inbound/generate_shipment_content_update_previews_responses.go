// Code generated by go-swagger; DO NOT EDIT.

package fba_inbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/fulfillmentInbound_2024-03-20/fulfillment_inbound_2024_03_20_models"
)

// GenerateShipmentContentUpdatePreviewsReader is a Reader for the GenerateShipmentContentUpdatePreviews structure.
type GenerateShipmentContentUpdatePreviewsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenerateShipmentContentUpdatePreviewsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewGenerateShipmentContentUpdatePreviewsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGenerateShipmentContentUpdatePreviewsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGenerateShipmentContentUpdatePreviewsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGenerateShipmentContentUpdatePreviewsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGenerateShipmentContentUpdatePreviewsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGenerateShipmentContentUpdatePreviewsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGenerateShipmentContentUpdatePreviewsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGenerateShipmentContentUpdatePreviewsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGenerateShipmentContentUpdatePreviewsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGenerateShipmentContentUpdatePreviewsAccepted creates a GenerateShipmentContentUpdatePreviewsAccepted with default headers values
func NewGenerateShipmentContentUpdatePreviewsAccepted() *GenerateShipmentContentUpdatePreviewsAccepted {
	return &GenerateShipmentContentUpdatePreviewsAccepted{}
}

/*
GenerateShipmentContentUpdatePreviewsAccepted describes a response with status code 202, with default header values.

GenerateShipmentContentUpdatePreviews 202 response
*/
type GenerateShipmentContentUpdatePreviewsAccepted struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.GenerateShipmentContentUpdatePreviewsResponse
}

// IsSuccess returns true when this generate shipment content update previews accepted response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generate shipment content update previews accepted response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews accepted response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate shipment content update previews accepted response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews accepted response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GenerateShipmentContentUpdatePreviewsAccepted) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsAccepted  %+v", 202, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsAccepted) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsAccepted  %+v", 202, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsAccepted) GetPayload() *fulfillment_inbound_2024_03_20_models.GenerateShipmentContentUpdatePreviewsResponse {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.GenerateShipmentContentUpdatePreviewsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsBadRequest creates a GenerateShipmentContentUpdatePreviewsBadRequest with default headers values
func NewGenerateShipmentContentUpdatePreviewsBadRequest() *GenerateShipmentContentUpdatePreviewsBadRequest {
	return &GenerateShipmentContentUpdatePreviewsBadRequest{}
}

/*
GenerateShipmentContentUpdatePreviewsBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type GenerateShipmentContentUpdatePreviewsBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews bad request response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews bad request response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews bad request response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate shipment content update previews bad request response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews bad request response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GenerateShipmentContentUpdatePreviewsBadRequest) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsBadRequest  %+v", 400, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsBadRequest) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsBadRequest  %+v", 400, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsBadRequest) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsForbidden creates a GenerateShipmentContentUpdatePreviewsForbidden with default headers values
func NewGenerateShipmentContentUpdatePreviewsForbidden() *GenerateShipmentContentUpdatePreviewsForbidden {
	return &GenerateShipmentContentUpdatePreviewsForbidden{}
}

/*
GenerateShipmentContentUpdatePreviewsForbidden describes a response with status code 403, with default header values.

Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type GenerateShipmentContentUpdatePreviewsForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews forbidden response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews forbidden response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews forbidden response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate shipment content update previews forbidden response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews forbidden response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GenerateShipmentContentUpdatePreviewsForbidden) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsForbidden  %+v", 403, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsForbidden) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsForbidden  %+v", 403, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsForbidden) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsNotFound creates a GenerateShipmentContentUpdatePreviewsNotFound with default headers values
func NewGenerateShipmentContentUpdatePreviewsNotFound() *GenerateShipmentContentUpdatePreviewsNotFound {
	return &GenerateShipmentContentUpdatePreviewsNotFound{}
}

/*
GenerateShipmentContentUpdatePreviewsNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type GenerateShipmentContentUpdatePreviewsNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews not found response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews not found response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews not found response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate shipment content update previews not found response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews not found response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GenerateShipmentContentUpdatePreviewsNotFound) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsNotFound  %+v", 404, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsNotFound) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsNotFound  %+v", 404, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsNotFound) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsRequestEntityTooLarge creates a GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge with default headers values
func NewGenerateShipmentContentUpdatePreviewsRequestEntityTooLarge() *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge {
	return &GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge{}
}

/*
GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request size exceeded the maximum accepted size.
*/
type GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews request entity too large response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews request entity too large response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews request entity too large response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate shipment content update previews request entity too large response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews request entity too large response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsUnsupportedMediaType creates a GenerateShipmentContentUpdatePreviewsUnsupportedMediaType with default headers values
func NewGenerateShipmentContentUpdatePreviewsUnsupportedMediaType() *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType {
	return &GenerateShipmentContentUpdatePreviewsUnsupportedMediaType{}
}

/*
GenerateShipmentContentUpdatePreviewsUnsupportedMediaType describes a response with status code 415, with default header values.

The request payload is in an unsupported format.
*/
type GenerateShipmentContentUpdatePreviewsUnsupportedMediaType struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews unsupported media type response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews unsupported media type response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews unsupported media type response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate shipment content update previews unsupported media type response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews unsupported media type response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsTooManyRequests creates a GenerateShipmentContentUpdatePreviewsTooManyRequests with default headers values
func NewGenerateShipmentContentUpdatePreviewsTooManyRequests() *GenerateShipmentContentUpdatePreviewsTooManyRequests {
	return &GenerateShipmentContentUpdatePreviewsTooManyRequests{}
}

/*
GenerateShipmentContentUpdatePreviewsTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type GenerateShipmentContentUpdatePreviewsTooManyRequests struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews too many requests response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews too many requests response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews too many requests response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate shipment content update previews too many requests response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this generate shipment content update previews too many requests response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsInternalServerError creates a GenerateShipmentContentUpdatePreviewsInternalServerError with default headers values
func NewGenerateShipmentContentUpdatePreviewsInternalServerError() *GenerateShipmentContentUpdatePreviewsInternalServerError {
	return &GenerateShipmentContentUpdatePreviewsInternalServerError{}
}

/*
GenerateShipmentContentUpdatePreviewsInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type GenerateShipmentContentUpdatePreviewsInternalServerError struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews internal server error response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews internal server error response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews internal server error response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate shipment content update previews internal server error response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this generate shipment content update previews internal server error response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsInternalServerError  %+v", 500, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsInternalServerError  %+v", 500, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateShipmentContentUpdatePreviewsServiceUnavailable creates a GenerateShipmentContentUpdatePreviewsServiceUnavailable with default headers values
func NewGenerateShipmentContentUpdatePreviewsServiceUnavailable() *GenerateShipmentContentUpdatePreviewsServiceUnavailable {
	return &GenerateShipmentContentUpdatePreviewsServiceUnavailable{}
}

/*
GenerateShipmentContentUpdatePreviewsServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type GenerateShipmentContentUpdatePreviewsServiceUnavailable struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *fulfillment_inbound_2024_03_20_models.ErrorList
}

// IsSuccess returns true when this generate shipment content update previews service unavailable response has a 2xx status code
func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate shipment content update previews service unavailable response has a 3xx status code
func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate shipment content update previews service unavailable response has a 4xx status code
func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate shipment content update previews service unavailable response has a 5xx status code
func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this generate shipment content update previews service unavailable response a status code equal to that given
func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews][%d] generateShipmentContentUpdatePreviewsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) GetPayload() *fulfillment_inbound_2024_03_20_models.ErrorList {
	return o.Payload
}

func (o *GenerateShipmentContentUpdatePreviewsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(fulfillment_inbound_2024_03_20_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
