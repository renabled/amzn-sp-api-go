// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_2024_03_20_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlacementOptionSummary Summary information about a placement option.
// Example: {"placementOptionId":"pl1234abcd-1234-abcd-5678-1234abcd5678","status":"ACCEPTED"}
//
// swagger:model PlacementOptionSummary
type PlacementOptionSummary struct {

	// The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.
	// Required: true
	// Max Length: 38
	// Min Length: 38
	// Pattern: ^[a-zA-Z0-9-]*$
	PlacementOptionID *string `json:"placementOptionId"`

	// The status of a placement option. Possible values: `OFFERED`, `ACCEPTED`.
	// Required: true
	// Max Length: 1024
	// Min Length: 1
	Status *string `json:"status"`
}

// Validate validates this placement option summary
func (m *PlacementOptionSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlacementOptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PlacementOptionSummary) validatePlacementOptionID(formats strfmt.Registry) error {

	if err := validate.Required("placementOptionId", "body", m.PlacementOptionID); err != nil {
		return err
	}

	if err := validate.MinLength("placementOptionId", "body", *m.PlacementOptionID, 38); err != nil {
		return err
	}

	if err := validate.MaxLength("placementOptionId", "body", *m.PlacementOptionID, 38); err != nil {
		return err
	}

	if err := validate.Pattern("placementOptionId", "body", *m.PlacementOptionID, `^[a-zA-Z0-9-]*$`); err != nil {
		return err
	}

	return nil
}

func (m *PlacementOptionSummary) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	if err := validate.MinLength("status", "body", *m.Status, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("status", "body", *m.Status, 1024); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this placement option summary based on context it is used
func (m *PlacementOptionSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlacementOptionSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlacementOptionSummary) UnmarshalBinary(b []byte) error {
	var res PlacementOptionSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
