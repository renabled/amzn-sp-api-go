// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_2024_03_20_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LtlTrackingDetail Contains information related to Less-Than-Truckload (LTL) shipment tracking.
//
// swagger:model LtlTrackingDetail
type LtlTrackingDetail struct {

	// The number of the carrier shipment acknowledgement document.
	// Max Length: 1024
	// Min Length: 1
	BillOfLadingNumber string `json:"billOfLadingNumber,omitempty"`

	// The number associated with the freight bill.
	FreightBillNumber []string `json:"freightBillNumber"`
}

// Validate validates this ltl tracking detail
func (m *LtlTrackingDetail) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBillOfLadingNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFreightBillNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LtlTrackingDetail) validateBillOfLadingNumber(formats strfmt.Registry) error {
	if swag.IsZero(m.BillOfLadingNumber) { // not required
		return nil
	}

	if err := validate.MinLength("billOfLadingNumber", "body", m.BillOfLadingNumber, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("billOfLadingNumber", "body", m.BillOfLadingNumber, 1024); err != nil {
		return err
	}

	return nil
}

func (m *LtlTrackingDetail) validateFreightBillNumber(formats strfmt.Registry) error {
	if swag.IsZero(m.FreightBillNumber) { // not required
		return nil
	}

	for i := 0; i < len(m.FreightBillNumber); i++ {

		if err := validate.MinLength("freightBillNumber"+"."+strconv.Itoa(i), "body", m.FreightBillNumber[i], 1); err != nil {
			return err
		}

		if err := validate.MaxLength("freightBillNumber"+"."+strconv.Itoa(i), "body", m.FreightBillNumber[i], 1024); err != nil {
			return err
		}

		if err := validate.Pattern("freightBillNumber"+"."+strconv.Itoa(i), "body", m.FreightBillNumber[i], `^[a-zA-Z0-9-._\s]*$`); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this ltl tracking detail based on context it is used
func (m *LtlTrackingDetail) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LtlTrackingDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LtlTrackingDetail) UnmarshalBinary(b []byte) error {
	var res LtlTrackingDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
