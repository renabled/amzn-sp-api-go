// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_2024_03_20_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ItemLabelPageType The page type to use to print the labels. Possible values: 'A4_21', 'A4_24', 'A4_24_64x33', 'A4_24_66x35', 'A4_24_70x36', 'A4_24_70x37', 'A4_24i', 'A4_27', 'A4_40_52x29', 'A4_44_48x25', 'Letter_30'.
// Example: A4_21
//
// swagger:model ItemLabelPageType
type ItemLabelPageType string

func NewItemLabelPageType(value ItemLabelPageType) *ItemLabelPageType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ItemLabelPageType.
func (m ItemLabelPageType) Pointer() *ItemLabelPageType {
	return &m
}

const (

	// ItemLabelPageTypeA421 captures enum value "A4_21"
	ItemLabelPageTypeA421 ItemLabelPageType = "A4_21"

	// ItemLabelPageTypeA424 captures enum value "A4_24"
	ItemLabelPageTypeA424 ItemLabelPageType = "A4_24"

	// ItemLabelPageTypeA42464x33 captures enum value "A4_24_64x33"
	ItemLabelPageTypeA42464x33 ItemLabelPageType = "A4_24_64x33"

	// ItemLabelPageTypeA42466x35 captures enum value "A4_24_66x35"
	ItemLabelPageTypeA42466x35 ItemLabelPageType = "A4_24_66x35"

	// ItemLabelPageTypeA42470x36 captures enum value "A4_24_70x36"
	ItemLabelPageTypeA42470x36 ItemLabelPageType = "A4_24_70x36"

	// ItemLabelPageTypeA42470x37 captures enum value "A4_24_70x37"
	ItemLabelPageTypeA42470x37 ItemLabelPageType = "A4_24_70x37"

	// ItemLabelPageTypeA424i captures enum value "A4_24i"
	ItemLabelPageTypeA424i ItemLabelPageType = "A4_24i"

	// ItemLabelPageTypeA427 captures enum value "A4_27"
	ItemLabelPageTypeA427 ItemLabelPageType = "A4_27"

	// ItemLabelPageTypeA44052x29 captures enum value "A4_40_52x29"
	ItemLabelPageTypeA44052x29 ItemLabelPageType = "A4_40_52x29"

	// ItemLabelPageTypeA44448x25 captures enum value "A4_44_48x25"
	ItemLabelPageTypeA44448x25 ItemLabelPageType = "A4_44_48x25"

	// ItemLabelPageTypeLetter30 captures enum value "Letter_30"
	ItemLabelPageTypeLetter30 ItemLabelPageType = "Letter_30"
)

// for schema
var itemLabelPageTypeEnum []interface{}

func init() {
	var res []ItemLabelPageType
	if err := json.Unmarshal([]byte(`["A4_21","A4_24","A4_24_64x33","A4_24_66x35","A4_24_70x36","A4_24_70x37","A4_24i","A4_27","A4_40_52x29","A4_44_48x25","Letter_30"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		itemLabelPageTypeEnum = append(itemLabelPageTypeEnum, v)
	}
}

func (m ItemLabelPageType) validateItemLabelPageTypeEnum(path, location string, value ItemLabelPageType) error {
	if err := validate.EnumCase(path, location, value, itemLabelPageTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this item label page type
func (m ItemLabelPageType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateItemLabelPageTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this item label page type based on context it is used
func (m ItemLabelPageType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
