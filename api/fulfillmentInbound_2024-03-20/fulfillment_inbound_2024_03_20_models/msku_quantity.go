// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_2024_03_20_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MskuQuantity Represents an MSKU and the related quantity.
// Example: {"msku":"msku","quantity":5}
//
// swagger:model MskuQuantity
type MskuQuantity struct {

	// The merchant SKU, a merchant-supplied identifier for a specific SKU.
	// Required: true
	// Max Length: 40
	// Min Length: 1
	Msku *string `json:"msku"`

	// A positive integer.
	// Required: true
	// Maximum: 10000
	// Minimum: 1
	Quantity *int64 `json:"quantity"`
}

// Validate validates this msku quantity
func (m *MskuQuantity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMsku(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MskuQuantity) validateMsku(formats strfmt.Registry) error {

	if err := validate.Required("msku", "body", m.Msku); err != nil {
		return err
	}

	if err := validate.MinLength("msku", "body", *m.Msku, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("msku", "body", *m.Msku, 40); err != nil {
		return err
	}

	return nil
}

func (m *MskuQuantity) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", m.Quantity); err != nil {
		return err
	}

	if err := validate.MinimumInt("quantity", "body", *m.Quantity, 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("quantity", "body", *m.Quantity, 10000, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this msku quantity based on context it is used
func (m *MskuQuantity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MskuQuantity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MskuQuantity) UnmarshalBinary(b []byte) error {
	var res MskuQuantity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
