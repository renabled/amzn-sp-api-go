// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_2024_03_20_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AllOwnersConstraint A constraint that applies to all owners. If no constraint is specified, defer to any individual owner constraints.
//
// swagger:model AllOwnersConstraint
type AllOwnersConstraint string

func NewAllOwnersConstraint(value AllOwnersConstraint) *AllOwnersConstraint {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AllOwnersConstraint.
func (m AllOwnersConstraint) Pointer() *AllOwnersConstraint {
	return &m
}

const (

	// AllOwnersConstraintMUSTMATCH captures enum value "MUST_MATCH"
	AllOwnersConstraintMUSTMATCH AllOwnersConstraint = "MUST_MATCH"
)

// for schema
var allOwnersConstraintEnum []interface{}

func init() {
	var res []AllOwnersConstraint
	if err := json.Unmarshal([]byte(`["MUST_MATCH"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		allOwnersConstraintEnum = append(allOwnersConstraintEnum, v)
	}
}

func (m AllOwnersConstraint) validateAllOwnersConstraintEnum(path, location string, value AllOwnersConstraint) error {
	if err := validate.EnumCase(path, location, value, allOwnersConstraintEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this all owners constraint
func (m AllOwnersConstraint) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAllOwnersConstraintEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this all owners constraint based on context it is used
func (m AllOwnersConstraint) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
