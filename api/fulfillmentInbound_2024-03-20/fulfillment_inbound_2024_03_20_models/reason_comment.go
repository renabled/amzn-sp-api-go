// Code generated by go-swagger; DO NOT EDIT.

package fulfillment_inbound_2024_03_20_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ReasonComment Reason for cancelling or rescheduling a self-ship appointment.
//
// swagger:model ReasonComment
type ReasonComment string

func NewReasonComment(value ReasonComment) *ReasonComment {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ReasonComment.
func (m ReasonComment) Pointer() *ReasonComment {
	return &m
}

const (

	// ReasonCommentAPPOINTMENTREQUESTEDBYMISTAKE captures enum value "APPOINTMENT_REQUESTED_BY_MISTAKE"
	ReasonCommentAPPOINTMENTREQUESTEDBYMISTAKE ReasonComment = "APPOINTMENT_REQUESTED_BY_MISTAKE"

	// ReasonCommentVEHICLEDELAY captures enum value "VEHICLE_DELAY"
	ReasonCommentVEHICLEDELAY ReasonComment = "VEHICLE_DELAY"

	// ReasonCommentSLOTNOTSUITABLE captures enum value "SLOT_NOT_SUITABLE"
	ReasonCommentSLOTNOTSUITABLE ReasonComment = "SLOT_NOT_SUITABLE"

	// ReasonCommentOUTSIDECARRIERBUSINESSHOURS captures enum value "OUTSIDE_CARRIER_BUSINESS_HOURS"
	ReasonCommentOUTSIDECARRIERBUSINESSHOURS ReasonComment = "OUTSIDE_CARRIER_BUSINESS_HOURS"

	// ReasonCommentUNFAVOURABLEEXTERNALCONDITIONS captures enum value "UNFAVOURABLE_EXTERNAL_CONDITIONS"
	ReasonCommentUNFAVOURABLEEXTERNALCONDITIONS ReasonComment = "UNFAVOURABLE_EXTERNAL_CONDITIONS"

	// ReasonCommentPROCUREMENTDELAY captures enum value "PROCUREMENT_DELAY"
	ReasonCommentPROCUREMENTDELAY ReasonComment = "PROCUREMENT_DELAY"

	// ReasonCommentSHIPPINGPLANCHANGED captures enum value "SHIPPING_PLAN_CHANGED"
	ReasonCommentSHIPPINGPLANCHANGED ReasonComment = "SHIPPING_PLAN_CHANGED"

	// ReasonCommentINCREASEDQUANTITY captures enum value "INCREASED_QUANTITY"
	ReasonCommentINCREASEDQUANTITY ReasonComment = "INCREASED_QUANTITY"

	// ReasonCommentOTHER captures enum value "OTHER"
	ReasonCommentOTHER ReasonComment = "OTHER"
)

// for schema
var reasonCommentEnum []interface{}

func init() {
	var res []ReasonComment
	if err := json.Unmarshal([]byte(`["APPOINTMENT_REQUESTED_BY_MISTAKE","VEHICLE_DELAY","SLOT_NOT_SUITABLE","OUTSIDE_CARRIER_BUSINESS_HOURS","UNFAVOURABLE_EXTERNAL_CONDITIONS","PROCUREMENT_DELAY","SHIPPING_PLAN_CHANGED","INCREASED_QUANTITY","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reasonCommentEnum = append(reasonCommentEnum, v)
	}
}

func (m ReasonComment) validateReasonCommentEnum(path, location string, value ReasonComment) error {
	if err := validate.EnumCase(path, location, value, reasonCommentEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this reason comment
func (m ReasonComment) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateReasonCommentEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this reason comment based on context it is used
func (m ReasonComment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
