// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInvoicesExportsParams creates a new GetInvoicesExportsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInvoicesExportsParams() *GetInvoicesExportsParams {
	return &GetInvoicesExportsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInvoicesExportsParamsWithTimeout creates a new GetInvoicesExportsParams object
// with the ability to set a timeout on a request.
func NewGetInvoicesExportsParamsWithTimeout(timeout time.Duration) *GetInvoicesExportsParams {
	return &GetInvoicesExportsParams{
		timeout: timeout,
	}
}

// NewGetInvoicesExportsParamsWithContext creates a new GetInvoicesExportsParams object
// with the ability to set a context for a request.
func NewGetInvoicesExportsParamsWithContext(ctx context.Context) *GetInvoicesExportsParams {
	return &GetInvoicesExportsParams{
		Context: ctx,
	}
}

// NewGetInvoicesExportsParamsWithHTTPClient creates a new GetInvoicesExportsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInvoicesExportsParamsWithHTTPClient(client *http.Client) *GetInvoicesExportsParams {
	return &GetInvoicesExportsParams{
		HTTPClient: client,
	}
}

/*
GetInvoicesExportsParams contains all the parameters to send to the API endpoint

	for the get invoices exports operation.

	Typically these are written to a http.Request.
*/
type GetInvoicesExportsParams struct {

	/* DateEnd.

	   The latest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default value is the time of the request.

	   Format: date-time
	*/
	DateEnd *strfmt.DateTime

	/* DateStart.

	   The earliest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 30 days ago.

	   Format: date-time
	*/
	DateStart *strfmt.DateTime

	/* MarketplaceID.

	   The returned exports match the specified marketplace.
	*/
	MarketplaceID string

	/* NextToken.

	   The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
	*/
	NextToken *string

	/* PageSize.

	     The maximum number of invoices to return in a single call.

	Minimum: 1

	Maximum: 100
	*/
	PageSize *int64

	/* Status.

	   Return exports matching the status specified.
	*/
	Status *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get invoices exports params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoicesExportsParams) WithDefaults() *GetInvoicesExportsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get invoices exports params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoicesExportsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get invoices exports params
func (o *GetInvoicesExportsParams) WithTimeout(timeout time.Duration) *GetInvoicesExportsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get invoices exports params
func (o *GetInvoicesExportsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get invoices exports params
func (o *GetInvoicesExportsParams) WithContext(ctx context.Context) *GetInvoicesExportsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get invoices exports params
func (o *GetInvoicesExportsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get invoices exports params
func (o *GetInvoicesExportsParams) WithHTTPClient(client *http.Client) *GetInvoicesExportsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get invoices exports params
func (o *GetInvoicesExportsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDateEnd adds the dateEnd to the get invoices exports params
func (o *GetInvoicesExportsParams) WithDateEnd(dateEnd *strfmt.DateTime) *GetInvoicesExportsParams {
	o.SetDateEnd(dateEnd)
	return o
}

// SetDateEnd adds the dateEnd to the get invoices exports params
func (o *GetInvoicesExportsParams) SetDateEnd(dateEnd *strfmt.DateTime) {
	o.DateEnd = dateEnd
}

// WithDateStart adds the dateStart to the get invoices exports params
func (o *GetInvoicesExportsParams) WithDateStart(dateStart *strfmt.DateTime) *GetInvoicesExportsParams {
	o.SetDateStart(dateStart)
	return o
}

// SetDateStart adds the dateStart to the get invoices exports params
func (o *GetInvoicesExportsParams) SetDateStart(dateStart *strfmt.DateTime) {
	o.DateStart = dateStart
}

// WithMarketplaceID adds the marketplaceID to the get invoices exports params
func (o *GetInvoicesExportsParams) WithMarketplaceID(marketplaceID string) *GetInvoicesExportsParams {
	o.SetMarketplaceID(marketplaceID)
	return o
}

// SetMarketplaceID adds the marketplaceId to the get invoices exports params
func (o *GetInvoicesExportsParams) SetMarketplaceID(marketplaceID string) {
	o.MarketplaceID = marketplaceID
}

// WithNextToken adds the nextToken to the get invoices exports params
func (o *GetInvoicesExportsParams) WithNextToken(nextToken *string) *GetInvoicesExportsParams {
	o.SetNextToken(nextToken)
	return o
}

// SetNextToken adds the nextToken to the get invoices exports params
func (o *GetInvoicesExportsParams) SetNextToken(nextToken *string) {
	o.NextToken = nextToken
}

// WithPageSize adds the pageSize to the get invoices exports params
func (o *GetInvoicesExportsParams) WithPageSize(pageSize *int64) *GetInvoicesExportsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get invoices exports params
func (o *GetInvoicesExportsParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithStatus adds the status to the get invoices exports params
func (o *GetInvoicesExportsParams) WithStatus(status *string) *GetInvoicesExportsParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get invoices exports params
func (o *GetInvoicesExportsParams) SetStatus(status *string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetInvoicesExportsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DateEnd != nil {

		// query param dateEnd
		var qrDateEnd strfmt.DateTime

		if o.DateEnd != nil {
			qrDateEnd = *o.DateEnd
		}
		qDateEnd := qrDateEnd.String()
		if qDateEnd != "" {

			if err := r.SetQueryParam("dateEnd", qDateEnd); err != nil {
				return err
			}
		}
	}

	if o.DateStart != nil {

		// query param dateStart
		var qrDateStart strfmt.DateTime

		if o.DateStart != nil {
			qrDateStart = *o.DateStart
		}
		qDateStart := qrDateStart.String()
		if qDateStart != "" {

			if err := r.SetQueryParam("dateStart", qDateStart); err != nil {
				return err
			}
		}
	}

	// query param marketplaceId
	qrMarketplaceID := o.MarketplaceID
	qMarketplaceID := qrMarketplaceID
	if qMarketplaceID != "" {

		if err := r.SetQueryParam("marketplaceId", qMarketplaceID); err != nil {
			return err
		}
	}

	if o.NextToken != nil {

		// query param nextToken
		var qrNextToken string

		if o.NextToken != nil {
			qrNextToken = *o.NextToken
		}
		qNextToken := qrNextToken
		if qNextToken != "" {

			if err := r.SetQueryParam("nextToken", qNextToken); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// query param status
		var qrStatus string

		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {

			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
