// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/InvoicesApiModel_2024-06-19/invoices_api_model_2024_06_19_models"
)

// CreateInvoicesExportReader is a Reader for the CreateInvoicesExport structure.
type CreateInvoicesExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInvoicesExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewCreateInvoicesExportAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInvoicesExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInvoicesExportUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInvoicesExportForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateInvoicesExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewCreateInvoicesExportRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateInvoicesExportUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateInvoicesExportTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInvoicesExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewCreateInvoicesExportServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateInvoicesExportAccepted creates a CreateInvoicesExportAccepted with default headers values
func NewCreateInvoicesExportAccepted() *CreateInvoicesExportAccepted {
	return &CreateInvoicesExportAccepted{}
}

/*
CreateInvoicesExportAccepted describes a response with status code 202, with default header values.

Success.
*/
type CreateInvoicesExportAccepted struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ExportInvoicesResponse
}

// IsSuccess returns true when this create invoices export accepted response has a 2xx status code
func (o *CreateInvoicesExportAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create invoices export accepted response has a 3xx status code
func (o *CreateInvoicesExportAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export accepted response has a 4xx status code
func (o *CreateInvoicesExportAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create invoices export accepted response has a 5xx status code
func (o *CreateInvoicesExportAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export accepted response a status code equal to that given
func (o *CreateInvoicesExportAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *CreateInvoicesExportAccepted) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportAccepted  %+v", 202, o.Payload)
}

func (o *CreateInvoicesExportAccepted) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportAccepted  %+v", 202, o.Payload)
}

func (o *CreateInvoicesExportAccepted) GetPayload() *invoices_api_model_2024_06_19_models.ExportInvoicesResponse {
	return o.Payload
}

func (o *CreateInvoicesExportAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ExportInvoicesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportBadRequest creates a CreateInvoicesExportBadRequest with default headers values
func NewCreateInvoicesExportBadRequest() *CreateInvoicesExportBadRequest {
	return &CreateInvoicesExportBadRequest{}
}

/*
CreateInvoicesExportBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type CreateInvoicesExportBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export bad request response has a 2xx status code
func (o *CreateInvoicesExportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export bad request response has a 3xx status code
func (o *CreateInvoicesExportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export bad request response has a 4xx status code
func (o *CreateInvoicesExportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export bad request response has a 5xx status code
func (o *CreateInvoicesExportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export bad request response a status code equal to that given
func (o *CreateInvoicesExportBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateInvoicesExportBadRequest) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInvoicesExportBadRequest) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInvoicesExportBadRequest) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportUnauthorized creates a CreateInvoicesExportUnauthorized with default headers values
func NewCreateInvoicesExportUnauthorized() *CreateInvoicesExportUnauthorized {
	return &CreateInvoicesExportUnauthorized{}
}

/*
CreateInvoicesExportUnauthorized describes a response with status code 401, with default header values.

A list of error responses returned when a request is unsuccessful.
*/
type CreateInvoicesExportUnauthorized struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export unauthorized response has a 2xx status code
func (o *CreateInvoicesExportUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export unauthorized response has a 3xx status code
func (o *CreateInvoicesExportUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export unauthorized response has a 4xx status code
func (o *CreateInvoicesExportUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export unauthorized response has a 5xx status code
func (o *CreateInvoicesExportUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export unauthorized response a status code equal to that given
func (o *CreateInvoicesExportUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateInvoicesExportUnauthorized) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateInvoicesExportUnauthorized) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateInvoicesExportUnauthorized) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportForbidden creates a CreateInvoicesExportForbidden with default headers values
func NewCreateInvoicesExportForbidden() *CreateInvoicesExportForbidden {
	return &CreateInvoicesExportForbidden{}
}

/*
CreateInvoicesExportForbidden describes a response with status code 403, with default header values.

Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type CreateInvoicesExportForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export forbidden response has a 2xx status code
func (o *CreateInvoicesExportForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export forbidden response has a 3xx status code
func (o *CreateInvoicesExportForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export forbidden response has a 4xx status code
func (o *CreateInvoicesExportForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export forbidden response has a 5xx status code
func (o *CreateInvoicesExportForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export forbidden response a status code equal to that given
func (o *CreateInvoicesExportForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateInvoicesExportForbidden) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportForbidden  %+v", 403, o.Payload)
}

func (o *CreateInvoicesExportForbidden) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportForbidden  %+v", 403, o.Payload)
}

func (o *CreateInvoicesExportForbidden) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportNotFound creates a CreateInvoicesExportNotFound with default headers values
func NewCreateInvoicesExportNotFound() *CreateInvoicesExportNotFound {
	return &CreateInvoicesExportNotFound{}
}

/*
CreateInvoicesExportNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type CreateInvoicesExportNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export not found response has a 2xx status code
func (o *CreateInvoicesExportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export not found response has a 3xx status code
func (o *CreateInvoicesExportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export not found response has a 4xx status code
func (o *CreateInvoicesExportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export not found response has a 5xx status code
func (o *CreateInvoicesExportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export not found response a status code equal to that given
func (o *CreateInvoicesExportNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateInvoicesExportNotFound) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportNotFound  %+v", 404, o.Payload)
}

func (o *CreateInvoicesExportNotFound) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportNotFound  %+v", 404, o.Payload)
}

func (o *CreateInvoicesExportNotFound) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportRequestEntityTooLarge creates a CreateInvoicesExportRequestEntityTooLarge with default headers values
func NewCreateInvoicesExportRequestEntityTooLarge() *CreateInvoicesExportRequestEntityTooLarge {
	return &CreateInvoicesExportRequestEntityTooLarge{}
}

/*
CreateInvoicesExportRequestEntityTooLarge describes a response with status code 413, with default header values.

The request size exceeded the maximum accepted size.
*/
type CreateInvoicesExportRequestEntityTooLarge struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export request entity too large response has a 2xx status code
func (o *CreateInvoicesExportRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export request entity too large response has a 3xx status code
func (o *CreateInvoicesExportRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export request entity too large response has a 4xx status code
func (o *CreateInvoicesExportRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export request entity too large response has a 5xx status code
func (o *CreateInvoicesExportRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export request entity too large response a status code equal to that given
func (o *CreateInvoicesExportRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *CreateInvoicesExportRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *CreateInvoicesExportRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *CreateInvoicesExportRequestEntityTooLarge) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportUnsupportedMediaType creates a CreateInvoicesExportUnsupportedMediaType with default headers values
func NewCreateInvoicesExportUnsupportedMediaType() *CreateInvoicesExportUnsupportedMediaType {
	return &CreateInvoicesExportUnsupportedMediaType{}
}

/*
CreateInvoicesExportUnsupportedMediaType describes a response with status code 415, with default header values.

The request payload is in an unsupported format.
*/
type CreateInvoicesExportUnsupportedMediaType struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export unsupported media type response has a 2xx status code
func (o *CreateInvoicesExportUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export unsupported media type response has a 3xx status code
func (o *CreateInvoicesExportUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export unsupported media type response has a 4xx status code
func (o *CreateInvoicesExportUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export unsupported media type response has a 5xx status code
func (o *CreateInvoicesExportUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export unsupported media type response a status code equal to that given
func (o *CreateInvoicesExportUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *CreateInvoicesExportUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateInvoicesExportUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateInvoicesExportUnsupportedMediaType) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportTooManyRequests creates a CreateInvoicesExportTooManyRequests with default headers values
func NewCreateInvoicesExportTooManyRequests() *CreateInvoicesExportTooManyRequests {
	return &CreateInvoicesExportTooManyRequests{}
}

/*
CreateInvoicesExportTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type CreateInvoicesExportTooManyRequests struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export too many requests response has a 2xx status code
func (o *CreateInvoicesExportTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export too many requests response has a 3xx status code
func (o *CreateInvoicesExportTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export too many requests response has a 4xx status code
func (o *CreateInvoicesExportTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create invoices export too many requests response has a 5xx status code
func (o *CreateInvoicesExportTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create invoices export too many requests response a status code equal to that given
func (o *CreateInvoicesExportTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *CreateInvoicesExportTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateInvoicesExportTooManyRequests) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateInvoicesExportTooManyRequests) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportInternalServerError creates a CreateInvoicesExportInternalServerError with default headers values
func NewCreateInvoicesExportInternalServerError() *CreateInvoicesExportInternalServerError {
	return &CreateInvoicesExportInternalServerError{}
}

/*
CreateInvoicesExportInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type CreateInvoicesExportInternalServerError struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export internal server error response has a 2xx status code
func (o *CreateInvoicesExportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export internal server error response has a 3xx status code
func (o *CreateInvoicesExportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export internal server error response has a 4xx status code
func (o *CreateInvoicesExportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create invoices export internal server error response has a 5xx status code
func (o *CreateInvoicesExportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create invoices export internal server error response a status code equal to that given
func (o *CreateInvoicesExportInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateInvoicesExportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInvoicesExportInternalServerError) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInvoicesExportInternalServerError) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInvoicesExportServiceUnavailable creates a CreateInvoicesExportServiceUnavailable with default headers values
func NewCreateInvoicesExportServiceUnavailable() *CreateInvoicesExportServiceUnavailable {
	return &CreateInvoicesExportServiceUnavailable{}
}

/*
CreateInvoicesExportServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type CreateInvoicesExportServiceUnavailable struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *invoices_api_model_2024_06_19_models.ErrorList
}

// IsSuccess returns true when this create invoices export service unavailable response has a 2xx status code
func (o *CreateInvoicesExportServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create invoices export service unavailable response has a 3xx status code
func (o *CreateInvoicesExportServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create invoices export service unavailable response has a 4xx status code
func (o *CreateInvoicesExportServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this create invoices export service unavailable response has a 5xx status code
func (o *CreateInvoicesExportServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this create invoices export service unavailable response a status code equal to that given
func (o *CreateInvoicesExportServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *CreateInvoicesExportServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateInvoicesExportServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /tax/invoices/2024-06-19/exports][%d] createInvoicesExportServiceUnavailable  %+v", 503, o.Payload)
}

func (o *CreateInvoicesExportServiceUnavailable) GetPayload() *invoices_api_model_2024_06_19_models.ErrorList {
	return o.Payload
}

func (o *CreateInvoicesExportServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(invoices_api_model_2024_06_19_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
