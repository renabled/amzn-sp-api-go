// Code generated by go-swagger; DO NOT EDIT.

package shipping_v2_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GenerationStatus Generation Status.
//
// swagger:model GenerationStatus
type GenerationStatus string

func NewGenerationStatus(value GenerationStatus) *GenerationStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GenerationStatus.
func (m GenerationStatus) Pointer() *GenerationStatus {
	return &m
}

const (

	// GenerationStatusCompleted captures enum value "Completed"
	GenerationStatusCompleted GenerationStatus = "Completed"

	// GenerationStatusInProgress captures enum value "InProgress"
	GenerationStatusInProgress GenerationStatus = "InProgress"
)

// for schema
var generationStatusEnum []interface{}

func init() {
	var res []GenerationStatus
	if err := json.Unmarshal([]byte(`["Completed","InProgress"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		generationStatusEnum = append(generationStatusEnum, v)
	}
}

func (m GenerationStatus) validateGenerationStatusEnum(path, location string, value GenerationStatus) error {
	if err := validate.EnumCase(path, location, value, generationStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this generation status
func (m GenerationStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGenerationStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this generation status based on context it is used
func (m GenerationStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
