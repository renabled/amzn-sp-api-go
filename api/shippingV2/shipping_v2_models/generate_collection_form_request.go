// Code generated by go-swagger; DO NOT EDIT.

package shipping_v2_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GenerateCollectionFormRequest The request schema Call to generate the collection form.
//
// swagger:model GenerateCollectionFormRequest
type GenerateCollectionFormRequest struct {

	// carrier Id
	// Required: true
	CarrierID *CarrierID `json:"carrierId"`

	// client reference details
	ClientReferenceDetails ClientReferenceDetails `json:"clientReferenceDetails,omitempty"`

	// ship from address
	ShipFromAddress *Address `json:"shipFromAddress,omitempty"`
}

// Validate validates this generate collection form request
func (m *GenerateCollectionFormRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCarrierID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientReferenceDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShipFromAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GenerateCollectionFormRequest) validateCarrierID(formats strfmt.Registry) error {

	if err := validate.Required("carrierId", "body", m.CarrierID); err != nil {
		return err
	}

	if err := validate.Required("carrierId", "body", m.CarrierID); err != nil {
		return err
	}

	if m.CarrierID != nil {
		if err := m.CarrierID.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("carrierId")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("carrierId")
			}
			return err
		}
	}

	return nil
}

func (m *GenerateCollectionFormRequest) validateClientReferenceDetails(formats strfmt.Registry) error {
	if swag.IsZero(m.ClientReferenceDetails) { // not required
		return nil
	}

	if err := m.ClientReferenceDetails.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("clientReferenceDetails")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("clientReferenceDetails")
		}
		return err
	}

	return nil
}

func (m *GenerateCollectionFormRequest) validateShipFromAddress(formats strfmt.Registry) error {
	if swag.IsZero(m.ShipFromAddress) { // not required
		return nil
	}

	if m.ShipFromAddress != nil {
		if err := m.ShipFromAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipFromAddress")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("shipFromAddress")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this generate collection form request based on the context it is used
func (m *GenerateCollectionFormRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCarrierID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateClientReferenceDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateShipFromAddress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GenerateCollectionFormRequest) contextValidateCarrierID(ctx context.Context, formats strfmt.Registry) error {

	if m.CarrierID != nil {
		if err := m.CarrierID.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("carrierId")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("carrierId")
			}
			return err
		}
	}

	return nil
}

func (m *GenerateCollectionFormRequest) contextValidateClientReferenceDetails(ctx context.Context, formats strfmt.Registry) error {

	if err := m.ClientReferenceDetails.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("clientReferenceDetails")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("clientReferenceDetails")
		}
		return err
	}

	return nil
}

func (m *GenerateCollectionFormRequest) contextValidateShipFromAddress(ctx context.Context, formats strfmt.Registry) error {

	if m.ShipFromAddress != nil {
		if err := m.ShipFromAddress.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipFromAddress")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("shipFromAddress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GenerateCollectionFormRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GenerateCollectionFormRequest) UnmarshalBinary(b []byte) error {
	var res GenerateCollectionFormRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
