// Code generated by go-swagger; DO NOT EDIT.

package shipping_v2_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetCollectionFormHistoryRequest The request schema to get query collections form history API .
//
// swagger:model GetCollectionFormHistoryRequest
type GetCollectionFormHistoryRequest struct {

	// carrier Id
	CarrierID CarrierID `json:"carrierId,omitempty"`

	// client reference details
	ClientReferenceDetails ClientReferenceDetails `json:"clientReferenceDetails,omitempty"`

	// date range
	DateRange *DateRange `json:"dateRange,omitempty"`

	// max Number of Results for query .
	MaxResults int64 `json:"maxResults,omitempty"`

	// ship from address
	ShipFromAddress *Address `json:"shipFromAddress,omitempty"`
}

// Validate validates this get collection form history request
func (m *GetCollectionFormHistoryRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCarrierID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientReferenceDetails(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDateRange(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShipFromAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCollectionFormHistoryRequest) validateCarrierID(formats strfmt.Registry) error {
	if swag.IsZero(m.CarrierID) { // not required
		return nil
	}

	if err := m.CarrierID.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("carrierId")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("carrierId")
		}
		return err
	}

	return nil
}

func (m *GetCollectionFormHistoryRequest) validateClientReferenceDetails(formats strfmt.Registry) error {
	if swag.IsZero(m.ClientReferenceDetails) { // not required
		return nil
	}

	if err := m.ClientReferenceDetails.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("clientReferenceDetails")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("clientReferenceDetails")
		}
		return err
	}

	return nil
}

func (m *GetCollectionFormHistoryRequest) validateDateRange(formats strfmt.Registry) error {
	if swag.IsZero(m.DateRange) { // not required
		return nil
	}

	if m.DateRange != nil {
		if err := m.DateRange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dateRange")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dateRange")
			}
			return err
		}
	}

	return nil
}

func (m *GetCollectionFormHistoryRequest) validateShipFromAddress(formats strfmt.Registry) error {
	if swag.IsZero(m.ShipFromAddress) { // not required
		return nil
	}

	if m.ShipFromAddress != nil {
		if err := m.ShipFromAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipFromAddress")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("shipFromAddress")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get collection form history request based on the context it is used
func (m *GetCollectionFormHistoryRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCarrierID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateClientReferenceDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDateRange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateShipFromAddress(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCollectionFormHistoryRequest) contextValidateCarrierID(ctx context.Context, formats strfmt.Registry) error {

	if err := m.CarrierID.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("carrierId")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("carrierId")
		}
		return err
	}

	return nil
}

func (m *GetCollectionFormHistoryRequest) contextValidateClientReferenceDetails(ctx context.Context, formats strfmt.Registry) error {

	if err := m.ClientReferenceDetails.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("clientReferenceDetails")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("clientReferenceDetails")
		}
		return err
	}

	return nil
}

func (m *GetCollectionFormHistoryRequest) contextValidateDateRange(ctx context.Context, formats strfmt.Registry) error {

	if m.DateRange != nil {
		if err := m.DateRange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dateRange")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("dateRange")
			}
			return err
		}
	}

	return nil
}

func (m *GetCollectionFormHistoryRequest) contextValidateShipFromAddress(ctx context.Context, formats strfmt.Registry) error {

	if m.ShipFromAddress != nil {
		if err := m.ShipFromAddress.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipFromAddress")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("shipFromAddress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCollectionFormHistoryRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCollectionFormHistoryRequest) UnmarshalBinary(b []byte) error {
	var res GetCollectionFormHistoryRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
