// Code generated by go-swagger; DO NOT EDIT.

package shipping_v2_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExcludedBenefit Object representing an excluded benefit that is excluded for an ShippingOffering/Rate.
//
// swagger:model ExcludedBenefit
type ExcludedBenefit struct {

	// benefit
	// Required: true
	Benefit *string `json:"benefit"`

	// reason code
	// Required: true
	ReasonCode *string `json:"reasonCode"`
}

// Validate validates this excluded benefit
func (m *ExcludedBenefit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBenefit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReasonCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExcludedBenefit) validateBenefit(formats strfmt.Registry) error {

	if err := validate.Required("benefit", "body", m.Benefit); err != nil {
		return err
	}

	return nil
}

func (m *ExcludedBenefit) validateReasonCode(formats strfmt.Registry) error {

	if err := validate.Required("reasonCode", "body", m.ReasonCode); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this excluded benefit based on context it is used
func (m *ExcludedBenefit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ExcludedBenefit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExcludedBenefit) UnmarshalBinary(b []byte) error {
	var res ExcludedBenefit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
