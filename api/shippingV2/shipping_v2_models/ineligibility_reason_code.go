// Code generated by go-swagger; DO NOT EDIT.

package shipping_v2_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// IneligibilityReasonCode Reasons that make a shipment service offering ineligible.
//
// swagger:model IneligibilityReasonCode
type IneligibilityReasonCode string

func NewIneligibilityReasonCode(value IneligibilityReasonCode) *IneligibilityReasonCode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated IneligibilityReasonCode.
func (m IneligibilityReasonCode) Pointer() *IneligibilityReasonCode {
	return &m
}

const (

	// IneligibilityReasonCodeNOCOVERAGE captures enum value "NO_COVERAGE"
	IneligibilityReasonCodeNOCOVERAGE IneligibilityReasonCode = "NO_COVERAGE"

	// IneligibilityReasonCodePICKUPSLOTRESTRICTION captures enum value "PICKUP_SLOT_RESTRICTION"
	IneligibilityReasonCodePICKUPSLOTRESTRICTION IneligibilityReasonCode = "PICKUP_SLOT_RESTRICTION"

	// IneligibilityReasonCodeUNSUPPORTEDVAS captures enum value "UNSUPPORTED_VAS"
	IneligibilityReasonCodeUNSUPPORTEDVAS IneligibilityReasonCode = "UNSUPPORTED_VAS"

	// IneligibilityReasonCodeVASCOMBINATIONRESTRICTION captures enum value "VAS_COMBINATION_RESTRICTION"
	IneligibilityReasonCodeVASCOMBINATIONRESTRICTION IneligibilityReasonCode = "VAS_COMBINATION_RESTRICTION"

	// IneligibilityReasonCodeSIZERESTRICTIONS captures enum value "SIZE_RESTRICTIONS"
	IneligibilityReasonCodeSIZERESTRICTIONS IneligibilityReasonCode = "SIZE_RESTRICTIONS"

	// IneligibilityReasonCodeWEIGHTRESTRICTIONS captures enum value "WEIGHT_RESTRICTIONS"
	IneligibilityReasonCodeWEIGHTRESTRICTIONS IneligibilityReasonCode = "WEIGHT_RESTRICTIONS"

	// IneligibilityReasonCodeLATEDELIVERY captures enum value "LATE_DELIVERY"
	IneligibilityReasonCodeLATEDELIVERY IneligibilityReasonCode = "LATE_DELIVERY"

	// IneligibilityReasonCodePROGRAMCONSTRAINTS captures enum value "PROGRAM_CONSTRAINTS"
	IneligibilityReasonCodePROGRAMCONSTRAINTS IneligibilityReasonCode = "PROGRAM_CONSTRAINTS"

	// IneligibilityReasonCodeTERMSANDCONDITIONSNOTACCEPTED captures enum value "TERMS_AND_CONDITIONS_NOT_ACCEPTED"
	IneligibilityReasonCodeTERMSANDCONDITIONSNOTACCEPTED IneligibilityReasonCode = "TERMS_AND_CONDITIONS_NOT_ACCEPTED"

	// IneligibilityReasonCodeUNKNOWN captures enum value "UNKNOWN"
	IneligibilityReasonCodeUNKNOWN IneligibilityReasonCode = "UNKNOWN"
)

// for schema
var ineligibilityReasonCodeEnum []interface{}

func init() {
	var res []IneligibilityReasonCode
	if err := json.Unmarshal([]byte(`["NO_COVERAGE","PICKUP_SLOT_RESTRICTION","UNSUPPORTED_VAS","VAS_COMBINATION_RESTRICTION","SIZE_RESTRICTIONS","WEIGHT_RESTRICTIONS","LATE_DELIVERY","PROGRAM_CONSTRAINTS","TERMS_AND_CONDITIONS_NOT_ACCEPTED","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ineligibilityReasonCodeEnum = append(ineligibilityReasonCodeEnum, v)
	}
}

func (m IneligibilityReasonCode) validateIneligibilityReasonCodeEnum(path, location string, value IneligibilityReasonCode) error {
	if err := validate.EnumCase(path, location, value, ineligibilityReasonCodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this ineligibility reason code
func (m IneligibilityReasonCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateIneligibilityReasonCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this ineligibility reason code based on context it is used
func (m IneligibilityReasonCode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
