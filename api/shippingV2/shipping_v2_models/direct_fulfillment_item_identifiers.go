// Code generated by go-swagger; DO NOT EDIT.

package shipping_v2_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DirectFulfillmentItemIdentifiers Item identifiers for an item in a direct fulfillment shipment.
//
// swagger:model DirectFulfillmentItemIdentifiers
type DirectFulfillmentItemIdentifiers struct {

	// A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated for direct fulfillment multi-piece shipments. It is required if a vendor wants to change the configuration of the packages in which the purchase order is shipped.
	// Required: true
	LineItemID *string `json:"lineItemID"`

	// A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated if a single line item has multiple pieces. Defaults to 1.
	PieceNumber string `json:"pieceNumber,omitempty"`
}

// Validate validates this direct fulfillment item identifiers
func (m *DirectFulfillmentItemIdentifiers) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLineItemID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectFulfillmentItemIdentifiers) validateLineItemID(formats strfmt.Registry) error {

	if err := validate.Required("lineItemID", "body", m.LineItemID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this direct fulfillment item identifiers based on context it is used
func (m *DirectFulfillmentItemIdentifiers) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DirectFulfillmentItemIdentifiers) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectFulfillmentItemIdentifiers) UnmarshalBinary(b []byte) error {
	var res DirectFulfillmentItemIdentifiers
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
