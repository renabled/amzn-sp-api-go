// Code generated by go-swagger; DO NOT EDIT.

package shipping

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/renabled/amzn-sp-api-go/api/shippingV2/shipping_v2_models"
)

// GetCarrierAccountFormInputsReader is a Reader for the GetCarrierAccountFormInputs structure.
type GetCarrierAccountFormInputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCarrierAccountFormInputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCarrierAccountFormInputsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCarrierAccountFormInputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCarrierAccountFormInputsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCarrierAccountFormInputsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCarrierAccountFormInputsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 413:
		result := NewGetCarrierAccountFormInputsRequestEntityTooLarge()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetCarrierAccountFormInputsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCarrierAccountFormInputsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCarrierAccountFormInputsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCarrierAccountFormInputsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCarrierAccountFormInputsOK creates a GetCarrierAccountFormInputsOK with default headers values
func NewGetCarrierAccountFormInputsOK() *GetCarrierAccountFormInputsOK {
	return &GetCarrierAccountFormInputsOK{}
}

/*
GetCarrierAccountFormInputsOK describes a response with status code 200, with default header values.

Success.
*/
type GetCarrierAccountFormInputsOK struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.GetCarrierAccountFormInputsResponse
}

// IsSuccess returns true when this get carrier account form inputs o k response has a 2xx status code
func (o *GetCarrierAccountFormInputsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get carrier account form inputs o k response has a 3xx status code
func (o *GetCarrierAccountFormInputsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs o k response has a 4xx status code
func (o *GetCarrierAccountFormInputsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get carrier account form inputs o k response has a 5xx status code
func (o *GetCarrierAccountFormInputsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs o k response a status code equal to that given
func (o *GetCarrierAccountFormInputsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCarrierAccountFormInputsOK) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsOK  %+v", 200, o.Payload)
}

func (o *GetCarrierAccountFormInputsOK) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsOK  %+v", 200, o.Payload)
}

func (o *GetCarrierAccountFormInputsOK) GetPayload() *shipping_v2_models.GetCarrierAccountFormInputsResponse {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.GetCarrierAccountFormInputsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsBadRequest creates a GetCarrierAccountFormInputsBadRequest with default headers values
func NewGetCarrierAccountFormInputsBadRequest() *GetCarrierAccountFormInputsBadRequest {
	return &GetCarrierAccountFormInputsBadRequest{}
}

/*
GetCarrierAccountFormInputsBadRequest describes a response with status code 400, with default header values.

Request has missing or invalid parameters and cannot be parsed.
*/
type GetCarrierAccountFormInputsBadRequest struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs bad request response has a 2xx status code
func (o *GetCarrierAccountFormInputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs bad request response has a 3xx status code
func (o *GetCarrierAccountFormInputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs bad request response has a 4xx status code
func (o *GetCarrierAccountFormInputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs bad request response has a 5xx status code
func (o *GetCarrierAccountFormInputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs bad request response a status code equal to that given
func (o *GetCarrierAccountFormInputsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCarrierAccountFormInputsBadRequest) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCarrierAccountFormInputsBadRequest) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCarrierAccountFormInputsBadRequest) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsUnauthorized creates a GetCarrierAccountFormInputsUnauthorized with default headers values
func NewGetCarrierAccountFormInputsUnauthorized() *GetCarrierAccountFormInputsUnauthorized {
	return &GetCarrierAccountFormInputsUnauthorized{}
}

/*
GetCarrierAccountFormInputsUnauthorized describes a response with status code 401, with default header values.

The request's Authorization header is not formatted correctly or does not contain a valid token.
*/
type GetCarrierAccountFormInputsUnauthorized struct {

	/* Your rate limit (requests per second) for this operation.
	_Note:_ For this status code, the rate limit header is deprecated and no longer returned.
	*/
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs unauthorized response has a 2xx status code
func (o *GetCarrierAccountFormInputsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs unauthorized response has a 3xx status code
func (o *GetCarrierAccountFormInputsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs unauthorized response has a 4xx status code
func (o *GetCarrierAccountFormInputsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs unauthorized response has a 5xx status code
func (o *GetCarrierAccountFormInputsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs unauthorized response a status code equal to that given
func (o *GetCarrierAccountFormInputsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCarrierAccountFormInputsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCarrierAccountFormInputsUnauthorized) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCarrierAccountFormInputsUnauthorized) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsForbidden creates a GetCarrierAccountFormInputsForbidden with default headers values
func NewGetCarrierAccountFormInputsForbidden() *GetCarrierAccountFormInputsForbidden {
	return &GetCarrierAccountFormInputsForbidden{}
}

/*
GetCarrierAccountFormInputsForbidden describes a response with status code 403, with default header values.

Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.
*/
type GetCarrierAccountFormInputsForbidden struct {

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs forbidden response has a 2xx status code
func (o *GetCarrierAccountFormInputsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs forbidden response has a 3xx status code
func (o *GetCarrierAccountFormInputsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs forbidden response has a 4xx status code
func (o *GetCarrierAccountFormInputsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs forbidden response has a 5xx status code
func (o *GetCarrierAccountFormInputsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs forbidden response a status code equal to that given
func (o *GetCarrierAccountFormInputsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCarrierAccountFormInputsForbidden) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsForbidden  %+v", 403, o.Payload)
}

func (o *GetCarrierAccountFormInputsForbidden) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsForbidden  %+v", 403, o.Payload)
}

func (o *GetCarrierAccountFormInputsForbidden) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsNotFound creates a GetCarrierAccountFormInputsNotFound with default headers values
func NewGetCarrierAccountFormInputsNotFound() *GetCarrierAccountFormInputsNotFound {
	return &GetCarrierAccountFormInputsNotFound{}
}

/*
GetCarrierAccountFormInputsNotFound describes a response with status code 404, with default header values.

The resource specified does not exist.
*/
type GetCarrierAccountFormInputsNotFound struct {

	/* Your rate limit (requests per second) for this operation.
	 */
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs not found response has a 2xx status code
func (o *GetCarrierAccountFormInputsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs not found response has a 3xx status code
func (o *GetCarrierAccountFormInputsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs not found response has a 4xx status code
func (o *GetCarrierAccountFormInputsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs not found response has a 5xx status code
func (o *GetCarrierAccountFormInputsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs not found response a status code equal to that given
func (o *GetCarrierAccountFormInputsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCarrierAccountFormInputsNotFound) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsNotFound  %+v", 404, o.Payload)
}

func (o *GetCarrierAccountFormInputsNotFound) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsNotFound  %+v", 404, o.Payload)
}

func (o *GetCarrierAccountFormInputsNotFound) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsRequestEntityTooLarge creates a GetCarrierAccountFormInputsRequestEntityTooLarge with default headers values
func NewGetCarrierAccountFormInputsRequestEntityTooLarge() *GetCarrierAccountFormInputsRequestEntityTooLarge {
	return &GetCarrierAccountFormInputsRequestEntityTooLarge{}
}

/*
GetCarrierAccountFormInputsRequestEntityTooLarge describes a response with status code 413, with default header values.

The request size exceeded the maximum accepted size.
*/
type GetCarrierAccountFormInputsRequestEntityTooLarge struct {

	/* Your rate limit (requests per second) for this operation.
	_Note:_ For this status code, the rate limit header is deprecated and no longer returned.
	*/
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs request entity too large response has a 2xx status code
func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs request entity too large response has a 3xx status code
func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs request entity too large response has a 4xx status code
func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs request entity too large response has a 5xx status code
func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs request entity too large response a status code equal to that given
func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) IsCode(code int) bool {
	return code == 413
}

func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsRequestEntityTooLarge  %+v", 413, o.Payload)
}

func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsRequestEntityTooLarge) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsUnsupportedMediaType creates a GetCarrierAccountFormInputsUnsupportedMediaType with default headers values
func NewGetCarrierAccountFormInputsUnsupportedMediaType() *GetCarrierAccountFormInputsUnsupportedMediaType {
	return &GetCarrierAccountFormInputsUnsupportedMediaType{}
}

/*
GetCarrierAccountFormInputsUnsupportedMediaType describes a response with status code 415, with default header values.

The request payload is in an unsupported format.
*/
type GetCarrierAccountFormInputsUnsupportedMediaType struct {

	/* Your rate limit (requests per second) for this operation.
	_Note:_ For this status code, the rate limit header is deprecated and no longer returned.
	*/
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs unsupported media type response has a 2xx status code
func (o *GetCarrierAccountFormInputsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs unsupported media type response has a 3xx status code
func (o *GetCarrierAccountFormInputsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs unsupported media type response has a 4xx status code
func (o *GetCarrierAccountFormInputsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs unsupported media type response has a 5xx status code
func (o *GetCarrierAccountFormInputsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs unsupported media type response a status code equal to that given
func (o *GetCarrierAccountFormInputsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetCarrierAccountFormInputsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCarrierAccountFormInputsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetCarrierAccountFormInputsUnsupportedMediaType) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsTooManyRequests creates a GetCarrierAccountFormInputsTooManyRequests with default headers values
func NewGetCarrierAccountFormInputsTooManyRequests() *GetCarrierAccountFormInputsTooManyRequests {
	return &GetCarrierAccountFormInputsTooManyRequests{}
}

/*
GetCarrierAccountFormInputsTooManyRequests describes a response with status code 429, with default header values.

The frequency of requests was greater than allowed.
*/
type GetCarrierAccountFormInputsTooManyRequests struct {

	/* Your rate limit (requests per second) for this operation.
	_Note:_ For this status code, the rate limit header is deprecated and no longer returned.
	*/
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs too many requests response has a 2xx status code
func (o *GetCarrierAccountFormInputsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs too many requests response has a 3xx status code
func (o *GetCarrierAccountFormInputsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs too many requests response has a 4xx status code
func (o *GetCarrierAccountFormInputsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get carrier account form inputs too many requests response has a 5xx status code
func (o *GetCarrierAccountFormInputsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get carrier account form inputs too many requests response a status code equal to that given
func (o *GetCarrierAccountFormInputsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCarrierAccountFormInputsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCarrierAccountFormInputsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCarrierAccountFormInputsTooManyRequests) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsInternalServerError creates a GetCarrierAccountFormInputsInternalServerError with default headers values
func NewGetCarrierAccountFormInputsInternalServerError() *GetCarrierAccountFormInputsInternalServerError {
	return &GetCarrierAccountFormInputsInternalServerError{}
}

/*
GetCarrierAccountFormInputsInternalServerError describes a response with status code 500, with default header values.

An unexpected condition occurred that prevented the server from fulfilling the request.
*/
type GetCarrierAccountFormInputsInternalServerError struct {

	/* Your rate limit (requests per second) for this operation.
	_Note:_ For this status code, the rate limit header is deprecated and no longer returned.
	*/
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs internal server error response has a 2xx status code
func (o *GetCarrierAccountFormInputsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs internal server error response has a 3xx status code
func (o *GetCarrierAccountFormInputsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs internal server error response has a 4xx status code
func (o *GetCarrierAccountFormInputsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get carrier account form inputs internal server error response has a 5xx status code
func (o *GetCarrierAccountFormInputsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get carrier account form inputs internal server error response a status code equal to that given
func (o *GetCarrierAccountFormInputsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCarrierAccountFormInputsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCarrierAccountFormInputsInternalServerError) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCarrierAccountFormInputsInternalServerError) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCarrierAccountFormInputsServiceUnavailable creates a GetCarrierAccountFormInputsServiceUnavailable with default headers values
func NewGetCarrierAccountFormInputsServiceUnavailable() *GetCarrierAccountFormInputsServiceUnavailable {
	return &GetCarrierAccountFormInputsServiceUnavailable{}
}

/*
GetCarrierAccountFormInputsServiceUnavailable describes a response with status code 503, with default header values.

Temporary overloading or maintenance of the server.
*/
type GetCarrierAccountFormInputsServiceUnavailable struct {

	/* Your rate limit (requests per second) for this operation.
	_Note:_ For this status code, the rate limit header is deprecated and no longer returned.
	*/
	XAmznRateLimitLimit string

	/* Unique request reference identifier.
	 */
	XAmznRequestID string

	Payload *shipping_v2_models.ErrorList
}

// IsSuccess returns true when this get carrier account form inputs service unavailable response has a 2xx status code
func (o *GetCarrierAccountFormInputsServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get carrier account form inputs service unavailable response has a 3xx status code
func (o *GetCarrierAccountFormInputsServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get carrier account form inputs service unavailable response has a 4xx status code
func (o *GetCarrierAccountFormInputsServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this get carrier account form inputs service unavailable response has a 5xx status code
func (o *GetCarrierAccountFormInputsServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this get carrier account form inputs service unavailable response a status code equal to that given
func (o *GetCarrierAccountFormInputsServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *GetCarrierAccountFormInputsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCarrierAccountFormInputsServiceUnavailable) String() string {
	return fmt.Sprintf("[GET /shipping/v2/carrierAccountFormInputs][%d] getCarrierAccountFormInputsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetCarrierAccountFormInputsServiceUnavailable) GetPayload() *shipping_v2_models.ErrorList {
	return o.Payload
}

func (o *GetCarrierAccountFormInputsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-amzn-RateLimit-Limit
	hdrXAmznRateLimitLimit := response.GetHeader("x-amzn-RateLimit-Limit")

	if hdrXAmznRateLimitLimit != "" {
		o.XAmznRateLimitLimit = hdrXAmznRateLimitLimit
	}

	// hydrates response header x-amzn-RequestId
	hdrXAmznRequestID := response.GetHeader("x-amzn-RequestId")

	if hdrXAmznRequestID != "" {
		o.XAmznRequestID = hdrXAmznRequestID
	}

	o.Payload = new(shipping_v2_models.ErrorList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
