// Code generated by go-swagger; DO NOT EDIT.

package shipping

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetTrackingParams creates a new GetTrackingParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTrackingParams() *GetTrackingParams {
	return &GetTrackingParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTrackingParamsWithTimeout creates a new GetTrackingParams object
// with the ability to set a timeout on a request.
func NewGetTrackingParamsWithTimeout(timeout time.Duration) *GetTrackingParams {
	return &GetTrackingParams{
		timeout: timeout,
	}
}

// NewGetTrackingParamsWithContext creates a new GetTrackingParams object
// with the ability to set a context for a request.
func NewGetTrackingParamsWithContext(ctx context.Context) *GetTrackingParams {
	return &GetTrackingParams{
		Context: ctx,
	}
}

// NewGetTrackingParamsWithHTTPClient creates a new GetTrackingParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTrackingParamsWithHTTPClient(client *http.Client) *GetTrackingParams {
	return &GetTrackingParams{
		HTTPClient: client,
	}
}

/*
GetTrackingParams contains all the parameters to send to the API endpoint

	for the get tracking operation.

	Typically these are written to a http.Request.
*/
type GetTrackingParams struct {

	/* CarrierID.

	   A carrier identifier originally returned by the getRates operation for the selected rate.
	*/
	CarrierID string

	/* TrackingID.

	   A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
	*/
	TrackingID string

	/* XAmznShippingBusinessID.

	   Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
	*/
	XAmznShippingBusinessID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get tracking params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTrackingParams) WithDefaults() *GetTrackingParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get tracking params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTrackingParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get tracking params
func (o *GetTrackingParams) WithTimeout(timeout time.Duration) *GetTrackingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get tracking params
func (o *GetTrackingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get tracking params
func (o *GetTrackingParams) WithContext(ctx context.Context) *GetTrackingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get tracking params
func (o *GetTrackingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get tracking params
func (o *GetTrackingParams) WithHTTPClient(client *http.Client) *GetTrackingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get tracking params
func (o *GetTrackingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCarrierID adds the carrierID to the get tracking params
func (o *GetTrackingParams) WithCarrierID(carrierID string) *GetTrackingParams {
	o.SetCarrierID(carrierID)
	return o
}

// SetCarrierID adds the carrierId to the get tracking params
func (o *GetTrackingParams) SetCarrierID(carrierID string) {
	o.CarrierID = carrierID
}

// WithTrackingID adds the trackingID to the get tracking params
func (o *GetTrackingParams) WithTrackingID(trackingID string) *GetTrackingParams {
	o.SetTrackingID(trackingID)
	return o
}

// SetTrackingID adds the trackingId to the get tracking params
func (o *GetTrackingParams) SetTrackingID(trackingID string) {
	o.TrackingID = trackingID
}

// WithXAmznShippingBusinessID adds the xAmznShippingBusinessID to the get tracking params
func (o *GetTrackingParams) WithXAmznShippingBusinessID(xAmznShippingBusinessID *string) *GetTrackingParams {
	o.SetXAmznShippingBusinessID(xAmznShippingBusinessID)
	return o
}

// SetXAmznShippingBusinessID adds the xAmznShippingBusinessId to the get tracking params
func (o *GetTrackingParams) SetXAmznShippingBusinessID(xAmznShippingBusinessID *string) {
	o.XAmznShippingBusinessID = xAmznShippingBusinessID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTrackingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param carrierId
	qrCarrierID := o.CarrierID
	qCarrierID := qrCarrierID
	if qCarrierID != "" {

		if err := r.SetQueryParam("carrierId", qCarrierID); err != nil {
			return err
		}
	}

	// query param trackingId
	qrTrackingID := o.TrackingID
	qTrackingID := qrTrackingID
	if qTrackingID != "" {

		if err := r.SetQueryParam("trackingId", qTrackingID); err != nil {
			return err
		}
	}

	if o.XAmznShippingBusinessID != nil {

		// header param x-amzn-shipping-business-id
		if err := r.SetHeaderParam("x-amzn-shipping-business-id", *o.XAmznShippingBusinessID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
